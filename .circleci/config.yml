version: 2.1

defaults:
  node_cache: &node_cache
    key: node_cache-v1-{{ checksum "yarn.lock" }}-{{ .Branch }}
  node_cache_keys: &node_cache_keys
    keys:
      - node_cache-v1-{{ checksum "yarn.lock" }}-{{ .Branch }}
      - node_cache-v1-{{ checksum "yarn.lock" }}
      - node_cache-v1
  compiler_cache: &compiler_cache
    key: compiler_cache-v4-{{ checksum "compiler/esy.lock.json" }}-{{ .Branch }}
  compiler_cache_keys: &compiler_cache_keys
    keys:
      - compiler_cache-v4-{{ checksum "compiler/esy.lock.json" }}-{{ .Branch }}
      - compiler_cache-v4-{{ checksum "compiler/esy.lock.json" }}
      - compiler_cache-v4

orbs:
  node: circleci/node@0.0.6

commands:
  setup_esy:
    steps:
      - run:
          name: Setup Esy
          command: |
            echo 'export PATH="$(yarn global bin):$PATH"' >> $BASH_ENV
            yarn global add esy

jobs:
  install_node:
    executor: node/node
    steps:
      - checkout
      - restore_cache:
          <<: *node_cache_keys
      - run:
          name: Install
          command: yarn install --frozen-lockfile
      - save_cache:
          <<: *node_cache
          paths:
            - ~/.cache
      - run:
          name: Populate Workspace
          command: |
            mkdir -p /tmp/workspace
            cp -RL node_modules /tmp/workspace/node_modules
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - node_modules

  test_compiler:
    executor: node/node
    steps:
      - checkout
      - restore_cache:
          <<: *compiler_cache_keys
      - setup_esy
      - run:
          name: Install
          working_directory: ./compiler
          command: esy install
      - run:
          name: Build
          working_directory: ./compiler
          command: |
            if [ -e ./_export ]; then
              esy import-build ./_export/*.tar.gz
            fi

            esy build
      - run:
          name: Test
          working_directory: ./compiler
          command: yarn test
      - run:
          name: Export Dependencies
          working_directory: ./compiler
          command: esy export-dependencies
      - save_cache:
          <<: *compiler_cache
          paths:
            - ~/project/compiler/_export
      - run:
          name: Populate Workspace
          working_directory: ./compiler
          command: |
            mkdir -p /tmp/workspace
            cp -RL _esy/default/store/i/knot-* /tmp/workspace/knot
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - knot

  test_react_plugin:
    executor: node/node
    steps:
      - checkout
      - restore_cache:
          <<: *node_cache_keys
      - run:
          name: Install
          command: npx lerna bootstrap --scope=@knot/react-plugin
      - run:
          name: Build
          command: lerna exec --scope=@knot/react-plugin -- yarn build
      - run:
          name: Test
          command: lerna exec --scope=@knot/react-plugin -- yarn test
      - run:
          name: Populate Workspace
          working_directory: ./packages/plugins/compiler/react
          command: |
            mkdir -p /tmp/workspace
            cp -RL build /tmp/workspace/react-plugin
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - react-plugin

  test_jss_plugin:
    executor: node/node
    steps:
      - checkout
      - restore_cache:
          <<: *node_cache_keys
      - run:
          name: Install
          command: npx lerna bootstrap --scope=@knot/jss-plugin
      - run:
          name: Build
          command: lerna exec --scope=@knot/jss-plugin -- yarn build
      - run:
          name: Test
          command: lerna exec --scope=@knot/jss-plugin -- yarn test
      - run:
          name: Populate Workspace
          working_directory: ./packages/plugins/compiler/jss
          command: |
            mkdir -p /tmp/workspace
            cp -RL build /tmp/workspace/jss-plugin
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - jss-plugin

  test_webpack_plugin:
    executor: node/node
    steps:
      - checkout
      - restore_cache:
          <<: *node_cache_keys
      - run:
          name: Install
          command: npx lerna bootstrap --scope=@knot/webpack-plugin
      - run:
          name: Build
          command: lerna exec --scope=@knot/webpack-plugin -- yarn build
      - run:
          name: Test
          command: lerna exec --scope=@knot/webpack-plugin -- yarn test
      - run:
          name: Populate Workspace
          working_directory: ./packages/plugins/bundler/webpack
          command: |
            mkdir -p /tmp/workspace
            cp -RL build /tmp/workspace/webpack-plugin
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - webpack-plugin

  test_webpack_react:
    docker:
      - image: cypress/base:8
        environment:
          ## this enables colors in the output
          TERM: xterm
          KNOT_BINARY: /tmp/workspace/knot/bin/knotc.exe
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          <<: *node_cache_keys
      - run:
          name: Install
          command: npx lerna bootstrap --scope=@knot/webpack-react-example
      - attach_workspace:
          at: /tmp/workspace
      - setup_esy
      - run:
          name: Restore React Plugin
          working_directory: ./packages/plugins/compiler/react
          command: |
            mv /tmp/workspace/react-plugin build
      - run:
          name: Restore JSS Plugin
          working_directory: ./packages/plugins/compiler/jss
          command: |
            mv /tmp/workspace/jss-plugin build
      - run:
          name: Restore Webpack Plugin
          working_directory: ./packages/plugins/bundler/webpack
          command: |
            mv /tmp/workspace/webpack-plugin build
      - run:
          name: Test
          working_directory: ./examples/webpack-react
          command: yarn test
      - store_artifacts:
          path: ./examples/webpack-react/cypress/screenshots
      - store_artifacts:
          path: ./examples/webpack-react/cypress/videos

  release:
    executor: node/node
    steps:
      - checkout
      - run:
          name: Release
          command: yarn release

workflows:
  test_release:
    jobs:
      - install_node
      - test_compiler
      - test_react_plugin:
          requires:
            - install_node
      - test_jss_plugin:
          requires:
            - install_node
      - test_webpack_plugin:
          requires:
            - install_node
      - test_webpack_react:
          requires:
            - test_compiler
            - test_react_plugin
            - test_jss_plugin
            - test_webpack_plugin
      - release:
          requires:
            - test_webpack_react
