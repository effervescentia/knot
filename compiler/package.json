{
  "name": "knot",
  "description": "Compiler for the Knot programming language",
  "version": "0.0.0",
  "esy": {
    "build": "dune build -p knot",
    "buildDev": "pesy",
    "release": {
      "bin": [
        "knotc.exe"
      ],
      "rewritePrefix": true
    }
  },
  "buildDirs": {
    "test/util": {
      "require": [
        "alcotest",
        "alcotest-lwt",
        "lwt",
        "lwt.unix"
      ],
      "name": "knot.test",
      "namespace": "Test"
    },
    "test/pretty": {
      "require": [
        "knot.test",
        "knot.lib"
      ],
      "name": "knot.pretty_test",
      "namespace": "TestPretty"
    },
    "test/library": {
      "require": [
        "knot.test",
        "knot.lang"
      ],
      "name": "knot.lib_test",
      "namespace": "TestLibrary"
    },
    "test/analyze": {
      "require": [
        "knot.test",
        "knot.lib_test",
        "knot.lang"
      ],
      "name": "knot.analyze_test",
      "namespace": "TestAnalyze"
    },
    "test/file": {
      "require": [
        "knot.test",
        "knot.lib_test",
        "knot.file"
      ],
      "name": "knot.file_test",
      "namespace": "TestFile"
    },
    "test/grammar": {
      "require": [
        "knot.test",
        "knot.lib_test",
        "knot.lang",
        "knot.parse",
        "knot.file"
      ],
      "name": "knot.grammar_test",
      "namespace": "TestGrammar"
    },
    "test/resolve": {
      "require": [
        "knot.test",
        "knot.lib_test",
        "knot.file_test",
        "knot.grammar_test",
        "knot.resolve",
        "knot.parse"
      ],
      "name": "knot.resolve_test",
      "namespace": "TestResolve"
    },
    "test/parse": {
      "require": [
        "knot.test",
        "knot.parse"
      ],
      "name": "knot.parse_test",
      "namespace": "TestParse"
    },
    "test/generate": {
      "require": [
        "knot.test",
        "knot.lib_test",
        "knot.grammar_test",
        "knot.generate"
      ],
      "name": "knot.generate_test",
      "namespace": "TestGenerate"
    },
    "test/compile": {
      "require": [
        "knot.test",
        "knot.resolve_test",
        "knot.compile"
      ],
      "name": "knot.compile_test",
      "namespace": "TestCompile"
    },
    "test/executable": {
      "require": [
        "knot.test",
        "knot.file_test",
        "knot.exec"
      ],
      "name": "knot.exec_test",
      "namespace": "TestExecutable"
    },
    "test/language_server": {
      "require": [
        "knot.test",
        "knot.resolve_test",
        "knot.language_server"
      ],
      "name": "knot.language_server_test",
      "namespace": "TestLanguageServer"
    },
    "test/build_server": {
      "require": [
        "knot.test",
        "knot.resolve_test",
        "knot.build_server"
      ],
      "name": "knot.build_server_test",
      "namespace": "TestBuildServer"
    },
    "test/unit": {
      "require": [
        "knot.pretty_test",
        "knot.lib_test",
        "knot.analyze_test",
        "knot.file_test",
        "knot.grammar_test",
        "knot.resolve_test",
        "knot.parse_test",
        "knot.generate_test",
        "knot.compile_test",
        "knot.language_server_test",
        "knot.exec_test"
      ],
      "main": "TestSuite",
      "name": "UnitTests.exe"
    },
    "test/e2e": {
      "require": [
        "knot.file_test",
        "knot.exec_test",
        "knot.resource"
      ],
      "main": "TestSuite",
      "name": "E2ETests.exe"
    },
    "src/pretty": {
      "require": [
        "ANSITerminal",
        "fmt"
      ],
      "name": "knot.pretty",
      "namespace": "Pretty"
    },
    "src/library": {
      "require": [
        "ANSITerminal",
        "camlp-streams",
        "dolog",
        "fmt",
        "lwt",
        "lwt.unix",
        "tablecloth-native",
        "knot.pretty"
      ],
      "name": "knot.lib",
      "namespace": "Knot"
    },
    "src/jsonrpc": {
      "require": [
        "knot.lib",
        "yojson"
      ],
      "name": "knot.jsonrpc",
      "namespace": "JSONRPC"
    },
    "src/language/ast": {
      "require": [
        "knot.lib",
        "knot.parse"
      ],
      "name": "knot.lang.ast",
      "namespace": "AST"
    },
    "src/language/identifier": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.identifier",
      "namespace": "KIdentifier"
    },
    "src/language/decorator": {
      "require": [
        "knot.lang.identifier"
      ],
      "name": "knot.lang.decorator",
      "namespace": "KDecorator"
    },
    "src/language/primitive/nil": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.primitive.nil",
      "namespace": "KNil"
    },
    "src/language/primitive/boolean": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.primitive.boolean",
      "namespace": "KBoolean"
    },
    "src/language/primitive/number/integer": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.primitive.number.integer",
      "namespace": "KInteger"
    },
    "src/language/primitive/number/float": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.primitive.number.float",
      "namespace": "KFloat"
    },
    "src/language/primitive/number": {
      "require": [
        "knot.lang.primitive.number.integer",
        "knot.lang.primitive.number.float"
      ],
      "name": "knot.lang.primitive.number",
      "namespace": "KNumber"
    },
    "src/language/primitive/string": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.primitive.string",
      "namespace": "KString"
    },
    "src/language/primitive": {
      "require": [
        "knot.lang.primitive.nil",
        "knot.lang.primitive.boolean",
        "knot.lang.primitive.number",
        "knot.lang.primitive.string"
      ],
      "name": "knot.lang.primitive",
      "namespace": "KPrimitive"
    },
    "src/language/type/expression": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.type.expression",
      "namespace": "KTypeExpression"
    },
    "src/language/type/statement": {
      "require": [
        "knot.lang.type.expression",
        "knot.lang.identifier"
      ],
      "name": "knot.lang.type.statement",
      "namespace": "KTypeStatement"
    },
    "src/language/type/definition": {
      "require": [
        "knot.lang.type.statement",
        "knot.lang.decorator",
        "knot.lang.primitive"
      ],
      "name": "knot.lang.type.definition",
      "namespace": "KTypeDefinition"
    },
    "src/language/lambda": {
      "require": [
        "knot.lang.type.expression",
        "knot.lang.identifier"
      ],
      "name": "knot.lang.lambda",
      "namespace": "KLambda"
    },
    "src/language/statement/effect": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.statement.effect",
      "namespace": "KEffect"
    },
    "src/language/statement/variable": {
      "require": [
        "knot.lang.identifier"
      ],
      "name": "knot.lang.statement.variable",
      "namespace": "KVariable"
    },
    "src/language/statement": {
      "require": [
        "knot.lang.statement.effect",
        "knot.lang.statement.variable"
      ],
      "name": "knot.lang.statement",
      "namespace": "KStatement"
    },
    "src/language/operator/unary/logical_not": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.unary.logical_not",
      "namespace": "KLogicalNot"
    },
    "src/language/operator/unary/absolute": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.unary.absolute",
      "namespace": "KAbsolute"
    },
    "src/language/operator/unary/negative": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.unary.negative",
      "namespace": "KNegative"
    },
    "src/language/operator/unary": {
      "require": [
        "knot.lang.operator.unary.logical_not",
        "knot.lang.operator.unary.absolute",
        "knot.lang.operator.unary.negative"
      ],
      "name": "knot.lang.operator.unary",
      "namespace": "KUnaryOperator"
    },
    "src/language/operator/binary/equal": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.equal",
      "namespace": "KEqual"
    },
    "src/language/operator/binary/unequal": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.unequal",
      "namespace": "KUnequal"
    },
    "src/language/operator/binary/logical_and": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.logical_and",
      "namespace": "KLogicalAnd"
    },
    "src/language/operator/binary/logical_or": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.logical_or",
      "namespace": "KLogicalOr"
    },
    "src/language/operator/binary/less_than": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.less_than",
      "namespace": "KLessThan"
    },
    "src/language/operator/binary/less_or_equal": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.less_or_equal",
      "namespace": "KLessOrEqual"
    },
    "src/language/operator/binary/greater_than": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.greater_than",
      "namespace": "KGreaterThan"
    },
    "src/language/operator/binary/greater_or_equal": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.greater_or_equal",
      "namespace": "KGreaterOrEqual"
    },
    "src/language/operator/binary/add": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.add",
      "namespace": "KAdd"
    },
    "src/language/operator/binary/subtract": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.subtract",
      "namespace": "KSubtract"
    },
    "src/language/operator/binary/multiply": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.multiply",
      "namespace": "KMultiply"
    },
    "src/language/operator/binary/divide": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.divide",
      "namespace": "KDivide"
    },
    "src/language/operator/binary/exponentiate": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.operator.binary.exponentiate",
      "namespace": "KExponentiate"
    },
    "src/language/operator/binary": {
      "require": [
        "knot.lang.operator.binary.equal",
        "knot.lang.operator.binary.unequal",
        "knot.lang.operator.binary.logical_and",
        "knot.lang.operator.binary.logical_or",
        "knot.lang.operator.binary.less_than",
        "knot.lang.operator.binary.less_or_equal",
        "knot.lang.operator.binary.greater_than",
        "knot.lang.operator.binary.greater_or_equal",
        "knot.lang.operator.binary.add",
        "knot.lang.operator.binary.subtract",
        "knot.lang.operator.binary.multiply",
        "knot.lang.operator.binary.divide",
        "knot.lang.operator.binary.exponentiate"
      ],
      "name": "knot.lang.operator.binary",
      "namespace": "KBinaryOperator"
    },
    "src/language/expression/group": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.expression.group",
      "namespace": "KGroup"
    },
    "src/language/expression/closure": {
      "require": [
        "knot.lang.ast",
        "knot.lang.statement"
      ],
      "name": "knot.lang.expression.closure",
      "namespace": "KClosure"
    },
    "src/language/expression/dot_access": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.expression.dot_access",
      "namespace": "KDotAccess"
    },
    "src/language/expression/bind_style": {
      "require": [
        "knot.lang.expression.style"
      ],
      "name": "knot.lang.expression.bind_style",
      "namespace": "KBindStyle"
    },
    "src/language/expression/function_call": {
      "require": [
        "knot.lang.ast"
      ],
      "name": "knot.lang.expression.function_call",
      "namespace": "KFunctionCall"
    },
    "src/language/expression/style": {
      "require": [
        "knot.lang.identifier"
      ],
      "name": "knot.lang.expression.style",
      "namespace": "KStyle"
    },
    "src/language/expression/ksx": {
      "require": [
        "knot.lang.expression.style"
      ],
      "name": "knot.lang.expression.ksx",
      "namespace": "KSX"
    },
    "src/language/expression": {
      "require": [
        "knot.lang.primitive",
        "knot.lang.identifier",
        "knot.lang.statement",
        "knot.lang.operator.unary",
        "knot.lang.operator.binary",
        "knot.lang.expression.group",
        "knot.lang.expression.closure",
        "knot.lang.expression.dot_access",
        "knot.lang.expression.bind_style",
        "knot.lang.expression.function_call",
        "knot.lang.expression.style",
        "knot.lang.expression.ksx"
      ],
      "name": "knot.lang.expression",
      "namespace": "KExpression"
    },
    "src/language/declaration/constant": {
      "require": [
        "knot.lang.expression"
      ],
      "name": "knot.lang.declaration.constant",
      "namespace": "KConstant"
    },
    "src/language/declaration/enumerated": {
      "require": [
        "knot.lang.type.statement",
        "knot.lang.expression"
      ],
      "name": "knot.lang.declaration.enumerated",
      "namespace": "KEnumerated"
    },
    "src/language/declaration/function": {
      "require": [
        "knot.lang.expression",
        "knot.lang.lambda"
      ],
      "name": "knot.lang.declaration.function",
      "namespace": "KFunction"
    },
    "src/language/declaration/view": {
      "require": [
        "knot.lang.expression",
        "knot.lang.lambda"
      ],
      "name": "knot.lang.declaration.view",
      "namespace": "KView"
    },
    "src/language/declaration": {
      "require": [
        "knot.lang.declaration.constant",
        "knot.lang.declaration.enumerated",
        "knot.lang.declaration.function",
        "knot.lang.declaration.view"
      ],
      "name": "knot.lang.declaration",
      "namespace": "KDeclaration"
    },
    "src/language/import": {
      "require": [
        "knot.lang.identifier",
        "knot.lang.primitive.string"
      ],
      "name": "knot.lang.import",
      "namespace": "KImport"
    },
    "src/language": {
      "require": [
        "knot.lang.decorator",
        "knot.lang.import",
        "knot.lang.declaration",
        "knot.lang.type.definition"
      ],
      "name": "knot.lang",
      "namespace": "Language"
    },
    "src/file": {
      "require": [
        "knot.lib",
        "fileutils",
        "uutf",
        "fswatch",
        "fswatch_lwt"
      ],
      "name": "knot.file",
      "namespace": "File"
    },
    "src/resolve": {
      "require": [
        "knot.file"
      ],
      "name": "knot.resolve",
      "namespace": "Resolve"
    },
    "src/parse": {
      "require": [
        "knot.lib"
      ],
      "name": "knot.parse",
      "namespace": "Parse"
    },
    "src/generate": {
      "require": [
        "knot.lang"
      ],
      "name": "knot.generate",
      "namespace": "Generate"
    },
    "src/compile": {
      "require": [
        "knot.file",
        "knot.resolve",
        "knot.generate"
      ],
      "name": "knot.compile",
      "namespace": "Compile"
    },
    "src/language_server": {
      "require": [
        "knot.compile",
        "knot.jsonrpc"
      ],
      "name": "knot.language_server",
      "namespace": "LanguageServer"
    },
    "src/build_server": {
      "require": [
        "knot.compile",
        "knot.jsonrpc"
      ],
      "name": "knot.build_server",
      "namespace": "BuildServer"
    },
    "src/executable": {
      "require": [
        "knot.build_server",
        "knot.language_server",
        "knot.resource",
        "yaml"
      ],
      "name": "knot.exec",
      "namespace": "Executable"
    },
    "src/resource": {
      "require": [
        "knot.lib",
        "dune-site"
      ],
      "name": "knot.resource",
      "namespace": "Resource",
      "rawBuildConfigFooter": [
        "(install",
        "  (package knot)",
        "  (section (site (knot assets)))",
        "  (files ",
        "    (assets/stdlib.kd as stdlib.kd)",
        "    (assets/ambient/core.kd as ambient/core.kd)",
        "    (assets/ambient/browser.kd as ambient/browser.kd)",
        "  )",
        ")",
        "(generate_sites_module",
        "  (module Injected)",
        "  (sites knot)",
        "  (sourceroot)",
        ")"
      ]
    },
    "src/cli": {
      "require": [
        "knot.exec",
        "knot.resource",
        "dune-site"
      ],
      "main": "Main",
      "name": "knotc.exe"
    }
  },
  "scripts": {
    "build_test": "esy build && esy test",
    "dev": "sane 'esy build' --glob='src/**/*.re'",
    "pesy": "bash -c 'env PESY_MODE=update pesy'",
    "server": "esy x knotc.exe -server -config ./test/resources/project",
    "test": "npm run test.unit && npm run test.e2e && npm run test.smoke 1> /dev/null",
    "test.unit": "esy x UnitTests.exe --show-errors",
    "test.e2e": "esy x E2ETests.exe --show-errors",
    "test.smoke": "esy x knotc.exe build --cwd ./test/smoke/.fixtures/project",
    "test.smoke.debug": "npm run test:smoke -- -debug"
  },
  "dependencies": {
    "@opam/ANSITerminal": "0.8.2",
    "@opam/alcotest": "1.5.0",
    "@opam/alcotest-lwt": "1.5.0",
    "@opam/camlp-streams": "5.0.1",
    "@opam/dolog": "6.0.0",
    "@opam/dune": "3.4.1",
    "@opam/dune-site": "3.4.1",
    "@opam/fileutils": "0.6.3",
    "@opam/fmt": "0.8.9",
    "@opam/fswatch": "11-0.1.0",
    "@opam/fswatch_lwt": "11-0.1.0",
    "@opam/lwt": "5.4.0",
    "@opam/reason": "3.8.1",
    "@opam/tablecloth-native": "0.0.7",
    "@opam/uutf": "1.0.2",
    "@opam/yaml": "2.1.0",
    "@opam/yojson": "2.0.2"
  },
  "devDependencies": {
    "@opam/ocaml-lsp-server": "1.13.1",
    "@opam/ocamlformat-rpc": "0.21.0",
    "ocaml": "4.14.0",
    "pesy": "0.4.4"
  }
}
