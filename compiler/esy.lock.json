{
  "hash": "bb5e207f79ec9ab843486ab97b10aec5",
  "root": "root@path:./package.json",
  "node": {
    "wrappy@1.0.2": {
      "record": {
        "name": "wrappy",
        "version": "1.0.2",
        "source":
          "archive:https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz#sha1:b5243d8f3ec1aa35f1364605bc0d1036e30ab69f",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "which@1.3.1": {
      "record": {
        "name": "which",
        "version": "1.3.1",
        "source":
          "archive:https://registry.npmjs.org/which/-/which-1.3.1.tgz#sha1:a45043d54f5805316da8d62f9f50918d3da70b0a",
        "files": [],
        "opam": null
      },
      "dependencies": [ "isexe@2.0.0" ]
    },
    "walker@1.0.7": {
      "record": {
        "name": "walker",
        "version": "1.0.7",
        "source":
          "archive:https://registry.npmjs.org/walker/-/walker-1.0.7.tgz#sha1:2f7f9b8fd10d677262b18a884e28d19618e028fb",
        "files": [],
        "opam": null
      },
      "dependencies": [ "makeerror@1.0.11" ]
    },
    "use@3.1.1": {
      "record": {
        "name": "use",
        "version": "3.1.1",
        "source":
          "archive:https://registry.npmjs.org/use/-/use-3.1.1.tgz#sha1:d50c8cac79a19fbc20f2911f56eb973f4e10070f",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "urix@0.1.0": {
      "record": {
        "name": "urix",
        "version": "0.1.0",
        "source":
          "archive:https://registry.npmjs.org/urix/-/urix-0.1.0.tgz#sha1:da937f7a62e21fec1fd18d49b35c2935067a6c72",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "unset-value@1.0.0": {
      "record": {
        "name": "unset-value",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/unset-value/-/unset-value-1.0.0.tgz#sha1:8376873f7d2335179ffb1e6fc3a8ed0dfc8ab559",
        "files": [],
        "opam": null
      },
      "dependencies": [ "has-value@0.3.1", "isobject@3.0.1" ]
    },
    "union-value@1.0.0": {
      "record": {
        "name": "union-value",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/union-value/-/union-value-1.0.0.tgz#sha1:5c71c34cb5bad5dcebe3ea0cd08207ba5aa1aea4",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "arr-union@3.1.0", "get-value@2.0.6", "is-extendable@0.1.1",
        "set-value@0.4.3"
      ]
    },
    "to-regex-range@2.1.1": {
      "record": {
        "name": "to-regex-range",
        "version": "2.1.1",
        "source":
          "archive:https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz#sha1:7c80c17b9dfebe599e27367e0d4dd5590141db38",
        "files": [],
        "opam": null
      },
      "dependencies": [ "is-number@3.0.0", "repeat-string@1.6.1" ]
    },
    "to-regex@3.0.2": {
      "record": {
        "name": "to-regex",
        "version": "3.0.2",
        "source":
          "archive:https://registry.npmjs.org/to-regex/-/to-regex-3.0.2.tgz#sha1:13cfdd9b336552f30b51f33a8ae1b42a7a7599ce",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "define-property@2.0.2", "extend-shallow@3.0.2", "regex-not@1.0.2",
        "safe-regex@1.1.0"
      ]
    },
    "to-object-path@0.3.0": {
      "record": {
        "name": "to-object-path",
        "version": "0.3.0",
        "source":
          "archive:https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz#sha1:297588b7b0e7e0ac08e04e672f85c1f4999e17af",
        "files": [],
        "opam": null
      },
      "dependencies": [ "kind-of@3.2.2" ]
    },
    "tmpl@1.0.4": {
      "record": {
        "name": "tmpl",
        "version": "1.0.4",
        "source":
          "archive:https://registry.npmjs.org/tmpl/-/tmpl-1.0.4.tgz#sha1:23640dd7b42d00433911140820e5cf440e521dd1",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "strip-eof@1.0.0": {
      "record": {
        "name": "strip-eof",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz#sha1:bb43ff5598a6eb05d89b59fcd129c983313606bf",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "static-extend@0.1.2": {
      "record": {
        "name": "static-extend",
        "version": "0.1.2",
        "source":
          "archive:https://registry.npmjs.org/static-extend/-/static-extend-0.1.2.tgz#sha1:60809c39cbff55337226fd5e0b520f341f1fb5c6",
        "files": [],
        "opam": null
      },
      "dependencies": [ "define-property@0.2.5", "object-copy@0.1.0" ]
    },
    "split-string@3.1.0": {
      "record": {
        "name": "split-string",
        "version": "3.1.0",
        "source":
          "archive:https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz#sha1:7cb09dda3a86585705c64b39a6466038682e8fe2",
        "files": [],
        "opam": null
      },
      "dependencies": [ "extend-shallow@3.0.2" ]
    },
    "source-map-url@0.4.0": {
      "record": {
        "name": "source-map-url",
        "version": "0.4.0",
        "source":
          "archive:https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.0.tgz#sha1:3e935d7ddd73631b97659956d55128e87b5084a3",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "source-map-resolve@0.5.2": {
      "record": {
        "name": "source-map-resolve",
        "version": "0.5.2",
        "source":
          "archive:https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.5.2.tgz#sha1:72e2cc34095543e43b2c62b2c4c10d4a9054f259",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "atob@2.1.2", "decode-uri-component@0.2.0", "resolve-url@0.2.1",
        "source-map-url@0.4.0", "urix@0.1.0"
      ]
    },
    "source-map@0.5.7": {
      "record": {
        "name": "source-map",
        "version": "0.5.7",
        "source":
          "archive:https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz#sha1:8a039d2d1021d22d1ea14c80d8ea468ba2ef3fcc",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "snapdragon-util@3.0.1": {
      "record": {
        "name": "snapdragon-util",
        "version": "3.0.1",
        "source":
          "archive:https://registry.npmjs.org/snapdragon-util/-/snapdragon-util-3.0.1.tgz#sha1:f956479486f2acd79700693f6f7b805e45ab56e2",
        "files": [],
        "opam": null
      },
      "dependencies": [ "kind-of@3.2.2" ]
    },
    "snapdragon-node@2.1.1": {
      "record": {
        "name": "snapdragon-node",
        "version": "2.1.1",
        "source":
          "archive:https://registry.npmjs.org/snapdragon-node/-/snapdragon-node-2.1.1.tgz#sha1:6c175f86ff14bdb0724563e8f3c1b021a286853b",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "define-property@1.0.0", "isobject@3.0.1", "snapdragon-util@3.0.1"
      ]
    },
    "snapdragon@0.8.2": {
      "record": {
        "name": "snapdragon",
        "version": "0.8.2",
        "source":
          "archive:https://registry.npmjs.org/snapdragon/-/snapdragon-0.8.2.tgz#sha1:64922e7c565b0e14204ba1aa7d6964278d25182d",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "base@0.11.2", "debug@2.6.9", "define-property@0.2.5",
        "extend-shallow@2.0.1", "map-cache@0.2.2", "source-map@0.5.7",
        "source-map-resolve@0.5.2", "use@3.1.1"
      ]
    },
    "signal-exit@3.0.2": {
      "record": {
        "name": "signal-exit",
        "version": "3.0.2",
        "source":
          "archive:https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz#sha1:b5fdc08f1287ea1178628e415e25132b73646c6d",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "shebang-regex@1.0.0": {
      "record": {
        "name": "shebang-regex",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz#sha1:da42f49740c0b42db2ca9728571cb190c98efea3",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "shebang-command@1.2.0": {
      "record": {
        "name": "shebang-command",
        "version": "1.2.0",
        "source":
          "archive:https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz#sha1:44aac65b695b03398968c39f363fee5deafdf1ea",
        "files": [],
        "opam": null
      },
      "dependencies": [ "shebang-regex@1.0.0" ]
    },
    "set-value@2.0.0": {
      "record": {
        "name": "set-value",
        "version": "2.0.0",
        "source":
          "archive:https://registry.npmjs.org/set-value/-/set-value-2.0.0.tgz#sha1:71ae4a88f0feefbbf52d1ea604f3fb315ebb6274",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "extend-shallow@2.0.1", "is-extendable@0.1.1",
        "is-plain-object@2.0.4", "split-string@3.1.0"
      ]
    },
    "set-value@0.4.3": {
      "record": {
        "name": "set-value",
        "version": "0.4.3",
        "source":
          "archive:https://registry.npmjs.org/set-value/-/set-value-0.4.3.tgz#sha1:7db08f9d3d22dc7f78e53af3c3bf4666ecdfccf1",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "extend-shallow@2.0.1", "is-extendable@0.1.1",
        "is-plain-object@2.0.4", "to-object-path@0.3.0"
      ]
    },
    "semver@5.6.0": {
      "record": {
        "name": "semver",
        "version": "5.6.0",
        "source":
          "archive:https://registry.npmjs.org/semver/-/semver-5.6.0.tgz#sha1:7e74256fbaa49c75aa7c7a205cc22799cac80004",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "sane@4.0.3": {
      "record": {
        "name": "sane",
        "version": "4.0.3",
        "source":
          "archive:https://registry.npmjs.org/sane/-/sane-4.0.3.tgz#sha1:e878c3f19e25cc57fbb734602f48f8a97818b181",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "@cnakazawa/watch@1.0.3", "anymatch@2.0.0", "capture-exit@1.2.0",
        "exec-sh@0.3.2", "execa@1.0.0", "fb-watchman@2.0.0",
        "micromatch@3.1.10", "minimist@1.2.0", "walker@1.0.7"
      ]
    },
    "safe-regex@1.1.0": {
      "record": {
        "name": "safe-regex",
        "version": "1.1.0",
        "source":
          "archive:https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz#sha1:40a3669f3b077d1e943d44629e157dd48023bf2e",
        "files": [],
        "opam": null
      },
      "dependencies": [ "ret@0.1.15" ]
    },
    "rsvp@3.6.2": {
      "record": {
        "name": "rsvp",
        "version": "3.6.2",
        "source":
          "archive:https://registry.npmjs.org/rsvp/-/rsvp-3.6.2.tgz#sha1:2e96491599a96cde1b515d5674a8f7a91452926a",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "root@path:./package.json": {
      "record": {
        "name": "root",
        "version": "path:./package.json",
        "source": "path:./package.json",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "@esy-ocaml/reason@3.4.0", "@opam/ANSITerminal@opam:0.8.1",
        "@opam/core@opam:v0.12.0", "@opam/dolog@opam:3.0",
        "@opam/dune@opam:1.7.3", "@opam/emoji@opam:1.1.0",
        "@opam/faraday-lwt-unix@opam:0.7.0", "@opam/httpaf@opam:0.5.0",
        "@opam/lwt@opam:4.1.0", "@opam/merlin@opam:3.2.2",
        "@opam/opal@opam:0.1.1", "@opam/ounit@opam:2.0.8",
        "@opam/uri@opam:2.2.0", "ocaml@4.7.1004", "pesy@0.4.1",
        "refmterr@3.1.10", "sane@4.0.3"
      ]
    },
    "ret@0.1.15": {
      "record": {
        "name": "ret",
        "version": "0.1.15",
        "source":
          "archive:https://registry.npmjs.org/ret/-/ret-0.1.15.tgz#sha1:b8a4825d5bdb1fc3f6f53c2bc33f81388681c7bc",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "resolve-url@0.2.1": {
      "record": {
        "name": "resolve-url",
        "version": "0.2.1",
        "source":
          "archive:https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz#sha1:2c637fe77c893afd2a663fe21aa9080068e2052a",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "repeat-string@1.6.1": {
      "record": {
        "name": "repeat-string",
        "version": "1.6.1",
        "source":
          "archive:https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz#sha1:8dcae470e1c88abc2d600fff4a776286da75e637",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "repeat-element@1.1.3": {
      "record": {
        "name": "repeat-element",
        "version": "1.1.3",
        "source":
          "archive:https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.3.tgz#sha1:782e0d825c0c5a3bb39731f84efee6b742e6b1ce",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "remove-trailing-separator@1.1.0": {
      "record": {
        "name": "remove-trailing-separator",
        "version": "1.1.0",
        "source":
          "archive:https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz#sha1:c24bce2a283adad5bc3f58e0d48249b92379d8ef",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "regex-not@1.0.2": {
      "record": {
        "name": "regex-not",
        "version": "1.0.2",
        "source":
          "archive:https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz#sha1:1f4ece27e00b0b65e0247a6810e6a85d83a5752c",
        "files": [],
        "opam": null
      },
      "dependencies": [ "extend-shallow@3.0.2", "safe-regex@1.1.0" ]
    },
    "refmterr@3.1.10": {
      "record": {
        "name": "refmterr",
        "version": "3.1.10",
        "source":
          "archive:https://registry.npmjs.org/refmterr/-/refmterr-3.1.10.tgz#sha1:7c3e238022acb5de4e2254ab506d70eee13c0a46",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "@esy-ocaml/reason@3.4.0", "@opam/dune@opam:1.7.3",
        "@opam/re@opam:1.8.0", "ocaml@4.7.1004"
      ]
    },
    "pump@3.0.0": {
      "record": {
        "name": "pump",
        "version": "3.0.0",
        "source":
          "archive:https://registry.npmjs.org/pump/-/pump-3.0.0.tgz#sha1:b4a2116815bde2f4e1ea602354e8c75565107a64",
        "files": [],
        "opam": null
      },
      "dependencies": [ "end-of-stream@1.4.1", "once@1.4.0" ]
    },
    "posix-character-classes@0.1.1": {
      "record": {
        "name": "posix-character-classes",
        "version": "0.1.1",
        "source":
          "archive:https://registry.npmjs.org/posix-character-classes/-/posix-character-classes-0.1.1.tgz#sha1:01eac0fe3b5af71a2a6c02feabb8c1fef7e00eab",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "pesy@0.4.1": {
      "record": {
        "name": "pesy",
        "version": "0.4.1",
        "source":
          "archive:https://registry.npmjs.org/pesy/-/pesy-0.4.1.tgz#sha1:37b3faccb3ecdb37f4bf3d95d04ffbd2633247af",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "path-key@2.0.1": {
      "record": {
        "name": "path-key",
        "version": "2.0.1",
        "source":
          "archive:https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz#sha1:411cadb574c5a140d3a4b1910d40d80cc9f40b40",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "pascalcase@0.1.1": {
      "record": {
        "name": "pascalcase",
        "version": "0.1.1",
        "source":
          "archive:https://registry.npmjs.org/pascalcase/-/pascalcase-0.1.1.tgz#sha1:b363e55e8006ca6fe21784d2db22bd15d7917f14",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "p-finally@1.0.0": {
      "record": {
        "name": "p-finally",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz#sha1:3fbcfb15b899a44123b34b6dcc18b724336a2cae",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "once@1.4.0": {
      "record": {
        "name": "once",
        "version": "1.4.0",
        "source":
          "archive:https://registry.npmjs.org/once/-/once-1.4.0.tgz#sha1:583b1aa775961d4b113ac17d9c50baef9dd76bd1",
        "files": [],
        "opam": null
      },
      "dependencies": [ "wrappy@1.0.2" ]
    },
    "ocaml@4.7.1004": {
      "record": {
        "name": "ocaml",
        "version": "4.7.1004",
        "source":
          "archive:https://registry.npmjs.org/ocaml/-/ocaml-4.7.1004.tgz#sha1:731ca0ddb4d845d2ed2da8af50f70c5ba9092114",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "object.pick@1.3.0": {
      "record": {
        "name": "object.pick",
        "version": "1.3.0",
        "source":
          "archive:https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz#sha1:87a10ac4c1694bd2e1cbf53591a66141fb5dd747",
        "files": [],
        "opam": null
      },
      "dependencies": [ "isobject@3.0.1" ]
    },
    "object-visit@1.0.1": {
      "record": {
        "name": "object-visit",
        "version": "1.0.1",
        "source":
          "archive:https://registry.npmjs.org/object-visit/-/object-visit-1.0.1.tgz#sha1:f79c4493af0c5377b59fe39d395e41042dd045bb",
        "files": [],
        "opam": null
      },
      "dependencies": [ "isobject@3.0.1" ]
    },
    "object-copy@0.1.0": {
      "record": {
        "name": "object-copy",
        "version": "0.1.0",
        "source":
          "archive:https://registry.npmjs.org/object-copy/-/object-copy-0.1.0.tgz#sha1:7e7d858b781bd7c991a41ba975ed3812754e998c",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "copy-descriptor@0.1.1", "define-property@0.2.5", "kind-of@3.2.2"
      ]
    },
    "npm-run-path@2.0.2": {
      "record": {
        "name": "npm-run-path",
        "version": "2.0.2",
        "source":
          "archive:https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz#sha1:35a9232dfa35d7067b4cb2ddf2357b1871536c5f",
        "files": [],
        "opam": null
      },
      "dependencies": [ "path-key@2.0.1" ]
    },
    "normalize-path@2.1.1": {
      "record": {
        "name": "normalize-path",
        "version": "2.1.1",
        "source":
          "archive:https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz#sha1:1ab28b556e198363a8c1a6f7e6fa20137fe6aed9",
        "files": [],
        "opam": null
      },
      "dependencies": [ "remove-trailing-separator@1.1.0" ]
    },
    "node-int64@0.4.0": {
      "record": {
        "name": "node-int64",
        "version": "0.4.0",
        "source":
          "archive:https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz#sha1:87a9065cdb355d3182d8f94ce11188b825c68a3b",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "nice-try@1.0.5": {
      "record": {
        "name": "nice-try",
        "version": "1.0.5",
        "source":
          "archive:https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz#sha1:a3378a7696ce7d223e88fc9b764bd7ef1089e366",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "nanomatch@1.2.13": {
      "record": {
        "name": "nanomatch",
        "version": "1.2.13",
        "source":
          "archive:https://registry.npmjs.org/nanomatch/-/nanomatch-1.2.13.tgz#sha1:b87a8aa4fc0de8fe6be88895b38983ff265bd119",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "arr-diff@4.0.0", "array-unique@0.3.2", "define-property@2.0.2",
        "extend-shallow@3.0.2", "fragment-cache@0.2.1", "is-windows@1.0.2",
        "kind-of@6.0.2", "object.pick@1.3.0", "regex-not@1.0.2",
        "snapdragon@0.8.2", "to-regex@3.0.2"
      ]
    },
    "ms@2.0.0": {
      "record": {
        "name": "ms",
        "version": "2.0.0",
        "source":
          "archive:https://registry.npmjs.org/ms/-/ms-2.0.0.tgz#sha1:5608aeadfc00be6c2901df5f9861788de0d597c8",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "mixin-deep@1.3.1": {
      "record": {
        "name": "mixin-deep",
        "version": "1.3.1",
        "source":
          "archive:https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.1.tgz#sha1:a49e7268dce1a0d9698e45326c5626df3543d0fe",
        "files": [],
        "opam": null
      },
      "dependencies": [ "for-in@1.0.2", "is-extendable@1.0.1" ]
    },
    "minimist@1.2.0": {
      "record": {
        "name": "minimist",
        "version": "1.2.0",
        "source":
          "archive:https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz#sha1:a35008b20f41383eec1fb914f4cd5df79a264284",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "micromatch@3.1.10": {
      "record": {
        "name": "micromatch",
        "version": "3.1.10",
        "source":
          "archive:https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz#sha1:70859bc95c9840952f359a068a3fc49f9ecfac23",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "arr-diff@4.0.0", "array-unique@0.3.2", "braces@2.3.2",
        "define-property@2.0.2", "extend-shallow@3.0.2", "extglob@2.0.4",
        "fragment-cache@0.2.1", "kind-of@6.0.2", "nanomatch@1.2.13",
        "object.pick@1.3.0", "regex-not@1.0.2", "snapdragon@0.8.2",
        "to-regex@3.0.2"
      ]
    },
    "map-visit@1.0.0": {
      "record": {
        "name": "map-visit",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/map-visit/-/map-visit-1.0.0.tgz#sha1:ecdca8f13144e660f1b5bd41f12f3479d98dfb8f",
        "files": [],
        "opam": null
      },
      "dependencies": [ "object-visit@1.0.1" ]
    },
    "map-cache@0.2.2": {
      "record": {
        "name": "map-cache",
        "version": "0.2.2",
        "source":
          "archive:https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz#sha1:c32abd0bd6525d9b051645bb4f26ac5dc98a0dbf",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "makeerror@1.0.11": {
      "record": {
        "name": "makeerror",
        "version": "1.0.11",
        "source":
          "archive:https://registry.npmjs.org/makeerror/-/makeerror-1.0.11.tgz#sha1:e01a5c9109f2af79660e4e8b9587790184f5a96c",
        "files": [],
        "opam": null
      },
      "dependencies": [ "tmpl@1.0.4" ]
    },
    "kind-of@6.0.2": {
      "record": {
        "name": "kind-of",
        "version": "6.0.2",
        "source":
          "archive:https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz#sha1:01146b36a6218e64e58f3a8d66de5d7fc6f6d051",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "kind-of@5.1.0": {
      "record": {
        "name": "kind-of",
        "version": "5.1.0",
        "source":
          "archive:https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz#sha1:729c91e2d857b7a419a1f9aa65685c4c33f5845d",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "kind-of@4.0.0": {
      "record": {
        "name": "kind-of",
        "version": "4.0.0",
        "source":
          "archive:https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz#sha1:20813df3d712928b207378691a45066fae72dd57",
        "files": [],
        "opam": null
      },
      "dependencies": [ "is-buffer@1.1.6" ]
    },
    "kind-of@3.2.2": {
      "record": {
        "name": "kind-of",
        "version": "3.2.2",
        "source":
          "archive:https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz#sha1:31ea21a734bab9bbb0f32466d893aea51e4a3c64",
        "files": [],
        "opam": null
      },
      "dependencies": [ "is-buffer@1.1.6" ]
    },
    "isobject@3.0.1": {
      "record": {
        "name": "isobject",
        "version": "3.0.1",
        "source":
          "archive:https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz#sha1:4e431e92b11a9731636aa1f9c8d1ccbcfdab78df",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "isobject@2.1.0": {
      "record": {
        "name": "isobject",
        "version": "2.1.0",
        "source":
          "archive:https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz#sha1:f065561096a3f1da2ef46272f815c840d87e0c89",
        "files": [],
        "opam": null
      },
      "dependencies": [ "isarray@1.0.0" ]
    },
    "isexe@2.0.0": {
      "record": {
        "name": "isexe",
        "version": "2.0.0",
        "source":
          "archive:https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz#sha1:e8fbf374dc556ff8947a10dcb0572d633f2cfa10",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "isarray@1.0.0": {
      "record": {
        "name": "isarray",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz#sha1:bb935d48582cba168c06834957a54a3e07124f11",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "is-windows@1.0.2": {
      "record": {
        "name": "is-windows",
        "version": "1.0.2",
        "source":
          "archive:https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz#sha1:d1850eb9791ecd18e6182ce12a30f396634bb19d",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "is-stream@1.1.0": {
      "record": {
        "name": "is-stream",
        "version": "1.1.0",
        "source":
          "archive:https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz#sha1:12d4a3dd4e68e0b79ceb8dbc84173ae80d91ca44",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "is-plain-object@2.0.4": {
      "record": {
        "name": "is-plain-object",
        "version": "2.0.4",
        "source":
          "archive:https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz#sha1:2c163b3fafb1b606d9d17928f05c2a1c38e07677",
        "files": [],
        "opam": null
      },
      "dependencies": [ "isobject@3.0.1" ]
    },
    "is-number@3.0.0": {
      "record": {
        "name": "is-number",
        "version": "3.0.0",
        "source":
          "archive:https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz#sha1:24fd6201a4782cf50561c810276afc7d12d71195",
        "files": [],
        "opam": null
      },
      "dependencies": [ "kind-of@3.2.2" ]
    },
    "is-extendable@1.0.1": {
      "record": {
        "name": "is-extendable",
        "version": "1.0.1",
        "source":
          "archive:https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz#sha1:a7470f9e426733d81bd81e1155264e3a3507cab4",
        "files": [],
        "opam": null
      },
      "dependencies": [ "is-plain-object@2.0.4" ]
    },
    "is-extendable@0.1.1": {
      "record": {
        "name": "is-extendable",
        "version": "0.1.1",
        "source":
          "archive:https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz#sha1:62b110e289a471418e3ec36a617d472e301dfc89",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "is-descriptor@1.0.2": {
      "record": {
        "name": "is-descriptor",
        "version": "1.0.2",
        "source":
          "archive:https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz#sha1:3b159746a66604b04f8c81524ba365c5f14d86ec",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "is-accessor-descriptor@1.0.0", "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ]
    },
    "is-descriptor@0.1.6": {
      "record": {
        "name": "is-descriptor",
        "version": "0.1.6",
        "source":
          "archive:https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz#sha1:366d8240dde487ca51823b1ab9f07a10a78251ca",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "is-accessor-descriptor@0.1.6", "is-data-descriptor@0.1.4",
        "kind-of@5.1.0"
      ]
    },
    "is-data-descriptor@1.0.0": {
      "record": {
        "name": "is-data-descriptor",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz#sha1:d84876321d0e7add03990406abbbbd36ba9268c7",
        "files": [],
        "opam": null
      },
      "dependencies": [ "kind-of@6.0.2" ]
    },
    "is-data-descriptor@0.1.4": {
      "record": {
        "name": "is-data-descriptor",
        "version": "0.1.4",
        "source":
          "archive:https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz#sha1:0b5ee648388e2c860282e793f1856fec3f301b56",
        "files": [],
        "opam": null
      },
      "dependencies": [ "kind-of@3.2.2" ]
    },
    "is-buffer@1.1.6": {
      "record": {
        "name": "is-buffer",
        "version": "1.1.6",
        "source":
          "archive:https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz#sha1:efaa2ea9daa0d7ab2ea13a97b2b8ad51fefbe8be",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "is-accessor-descriptor@1.0.0": {
      "record": {
        "name": "is-accessor-descriptor",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz#sha1:169c2f6d3df1f992618072365c9b0ea1f6878656",
        "files": [],
        "opam": null
      },
      "dependencies": [ "kind-of@6.0.2" ]
    },
    "is-accessor-descriptor@0.1.6": {
      "record": {
        "name": "is-accessor-descriptor",
        "version": "0.1.6",
        "source":
          "archive:https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz#sha1:a9e12cb3ae8d876727eeef3843f8a0897b5c98d6",
        "files": [],
        "opam": null
      },
      "dependencies": [ "kind-of@3.2.2" ]
    },
    "has-values@1.0.0": {
      "record": {
        "name": "has-values",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz#sha1:95b0b63fec2146619a6fe57fe75628d5a39efe4f",
        "files": [],
        "opam": null
      },
      "dependencies": [ "is-number@3.0.0", "kind-of@4.0.0" ]
    },
    "has-values@0.1.4": {
      "record": {
        "name": "has-values",
        "version": "0.1.4",
        "source":
          "archive:https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz#sha1:6d61de95d91dfca9b9a02089ad384bff8f62b771",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "has-value@1.0.0": {
      "record": {
        "name": "has-value",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/has-value/-/has-value-1.0.0.tgz#sha1:18b281da585b1c5c51def24c930ed29a0be6b177",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "get-value@2.0.6", "has-values@1.0.0", "isobject@3.0.1"
      ]
    },
    "has-value@0.3.1": {
      "record": {
        "name": "has-value",
        "version": "0.3.1",
        "source":
          "archive:https://registry.npmjs.org/has-value/-/has-value-0.3.1.tgz#sha1:7b1f58bada62ca827ec0a2078025654845995e1f",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "get-value@2.0.6", "has-values@0.1.4", "isobject@2.1.0"
      ]
    },
    "get-value@2.0.6": {
      "record": {
        "name": "get-value",
        "version": "2.0.6",
        "source":
          "archive:https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz#sha1:dc15ca1c672387ca76bd37ac0a395ba2042a2c28",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "get-stream@4.1.0": {
      "record": {
        "name": "get-stream",
        "version": "4.1.0",
        "source":
          "archive:https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz#sha1:c1b255575f3dc21d59bfc79cd3d2b46b1c3a54b5",
        "files": [],
        "opam": null
      },
      "dependencies": [ "pump@3.0.0" ]
    },
    "fragment-cache@0.2.1": {
      "record": {
        "name": "fragment-cache",
        "version": "0.2.1",
        "source":
          "archive:https://registry.npmjs.org/fragment-cache/-/fragment-cache-0.2.1.tgz#sha1:4290fad27f13e89be7f33799c6bc5a0abfff0d19",
        "files": [],
        "opam": null
      },
      "dependencies": [ "map-cache@0.2.2" ]
    },
    "for-in@1.0.2": {
      "record": {
        "name": "for-in",
        "version": "1.0.2",
        "source":
          "archive:https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz#sha1:81068d295a8142ec0ac726c6e2200c30fb6d5e80",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "fill-range@4.0.0": {
      "record": {
        "name": "fill-range",
        "version": "4.0.0",
        "source":
          "archive:https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz#sha1:d544811d428f98eb06a63dc402d2403c328c38f7",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "extend-shallow@2.0.1", "is-number@3.0.0", "repeat-string@1.6.1",
        "to-regex-range@2.1.1"
      ]
    },
    "fb-watchman@2.0.0": {
      "record": {
        "name": "fb-watchman",
        "version": "2.0.0",
        "source":
          "archive:https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.0.tgz#sha1:54e9abf7dfa2f26cd9b1636c588c1afc05de5d58",
        "files": [],
        "opam": null
      },
      "dependencies": [ "bser@2.0.0" ]
    },
    "extglob@2.0.4": {
      "record": {
        "name": "extglob",
        "version": "2.0.4",
        "source":
          "archive:https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz#sha1:ad00fe4dc612a9232e8718711dc5cb5ab0285543",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "array-unique@0.3.2", "define-property@1.0.0",
        "expand-brackets@2.1.4", "extend-shallow@2.0.1",
        "fragment-cache@0.2.1", "regex-not@1.0.2", "snapdragon@0.8.2",
        "to-regex@3.0.2"
      ]
    },
    "extend-shallow@3.0.2": {
      "record": {
        "name": "extend-shallow",
        "version": "3.0.2",
        "source":
          "archive:https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz#sha1:26a71aaf073b39fb2127172746131c2704028db8",
        "files": [],
        "opam": null
      },
      "dependencies": [ "assign-symbols@1.0.0", "is-extendable@1.0.1" ]
    },
    "extend-shallow@2.0.1": {
      "record": {
        "name": "extend-shallow",
        "version": "2.0.1",
        "source":
          "archive:https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz#sha1:51af7d614ad9a9f610ea1bafbb989d6b1c56890f",
        "files": [],
        "opam": null
      },
      "dependencies": [ "is-extendable@0.1.1" ]
    },
    "expand-brackets@2.1.4": {
      "record": {
        "name": "expand-brackets",
        "version": "2.1.4",
        "source":
          "archive:https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz#sha1:b77735e315ce30f6b6eff0f83b04151a22449622",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "debug@2.6.9", "define-property@0.2.5", "extend-shallow@2.0.1",
        "posix-character-classes@0.1.1", "regex-not@1.0.2",
        "snapdragon@0.8.2", "to-regex@3.0.2"
      ]
    },
    "execa@1.0.0": {
      "record": {
        "name": "execa",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/execa/-/execa-1.0.0.tgz#sha1:c6236a5bb4df6d6f15e88e7f017798216749ddd8",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "cross-spawn@6.0.5", "get-stream@4.1.0", "is-stream@1.1.0",
        "npm-run-path@2.0.2", "p-finally@1.0.0", "signal-exit@3.0.2",
        "strip-eof@1.0.0"
      ]
    },
    "exec-sh@0.3.2": {
      "record": {
        "name": "exec-sh",
        "version": "0.3.2",
        "source":
          "archive:https://registry.npmjs.org/exec-sh/-/exec-sh-0.3.2.tgz#sha1:6738de2eb7c8e671d0366aea0b0db8c6f7d7391b",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "end-of-stream@1.4.1": {
      "record": {
        "name": "end-of-stream",
        "version": "1.4.1",
        "source":
          "archive:https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.1.tgz#sha1:ed29634d19baba463b6ce6b80a37213eab71ec43",
        "files": [],
        "opam": null
      },
      "dependencies": [ "once@1.4.0" ]
    },
    "define-property@2.0.2": {
      "record": {
        "name": "define-property",
        "version": "2.0.2",
        "source":
          "archive:https://registry.npmjs.org/define-property/-/define-property-2.0.2.tgz#sha1:d459689e8d654ba77e02a817f8710d702cb16e9d",
        "files": [],
        "opam": null
      },
      "dependencies": [ "is-descriptor@1.0.2", "isobject@3.0.1" ]
    },
    "define-property@1.0.0": {
      "record": {
        "name": "define-property",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz#sha1:769ebaaf3f4a63aad3af9e8d304c9bbe79bfb0e6",
        "files": [],
        "opam": null
      },
      "dependencies": [ "is-descriptor@1.0.2" ]
    },
    "define-property@0.2.5": {
      "record": {
        "name": "define-property",
        "version": "0.2.5",
        "source":
          "archive:https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz#sha1:c35b1ef918ec3c990f9a5bc57be04aacec5c8116",
        "files": [],
        "opam": null
      },
      "dependencies": [ "is-descriptor@0.1.6" ]
    },
    "decode-uri-component@0.2.0": {
      "record": {
        "name": "decode-uri-component",
        "version": "0.2.0",
        "source":
          "archive:https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz#sha1:eb3913333458775cb84cd1a1fae062106bb87545",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "debug@2.6.9": {
      "record": {
        "name": "debug",
        "version": "2.6.9",
        "source":
          "archive:https://registry.npmjs.org/debug/-/debug-2.6.9.tgz#sha1:5d128515df134ff327e90a4c93f4e077a536341f",
        "files": [],
        "opam": null
      },
      "dependencies": [ "ms@2.0.0" ]
    },
    "cross-spawn@6.0.5": {
      "record": {
        "name": "cross-spawn",
        "version": "6.0.5",
        "source":
          "archive:https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz#sha1:4a5ec7c64dfae22c3a14124dbacdee846d80cbc4",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "nice-try@1.0.5", "path-key@2.0.1", "semver@5.6.0",
        "shebang-command@1.2.0", "which@1.3.1"
      ]
    },
    "copy-descriptor@0.1.1": {
      "record": {
        "name": "copy-descriptor",
        "version": "0.1.1",
        "source":
          "archive:https://registry.npmjs.org/copy-descriptor/-/copy-descriptor-0.1.1.tgz#sha1:676f6eb3c39997c2ee1ac3a924fd6124748f578d",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "component-emitter@1.2.1": {
      "record": {
        "name": "component-emitter",
        "version": "1.2.1",
        "source":
          "archive:https://registry.npmjs.org/component-emitter/-/component-emitter-1.2.1.tgz#sha1:137918d6d78283f7df7a6b7c5a63e140e69425e6",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "collection-visit@1.0.0": {
      "record": {
        "name": "collection-visit",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/collection-visit/-/collection-visit-1.0.0.tgz#sha1:4bc0373c164bc3291b4d368c829cf1a80a59dca0",
        "files": [],
        "opam": null
      },
      "dependencies": [ "map-visit@1.0.0", "object-visit@1.0.1" ]
    },
    "class-utils@0.3.6": {
      "record": {
        "name": "class-utils",
        "version": "0.3.6",
        "source":
          "archive:https://registry.npmjs.org/class-utils/-/class-utils-0.3.6.tgz#sha1:f93369ae8b9a7ce02fd41faad0ca83033190c463",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "arr-union@3.1.0", "define-property@0.2.5", "isobject@3.0.1",
        "static-extend@0.1.2"
      ]
    },
    "capture-exit@1.2.0": {
      "record": {
        "name": "capture-exit",
        "version": "1.2.0",
        "source":
          "archive:https://registry.npmjs.org/capture-exit/-/capture-exit-1.2.0.tgz#sha1:1c5fcc489fd0ab00d4f1ac7ae1072e3173fbab6f",
        "files": [],
        "opam": null
      },
      "dependencies": [ "rsvp@3.6.2" ]
    },
    "cache-base@1.0.1": {
      "record": {
        "name": "cache-base",
        "version": "1.0.1",
        "source":
          "archive:https://registry.npmjs.org/cache-base/-/cache-base-1.0.1.tgz#sha1:0a7f46416831c8b662ee36fe4e7c59d76f666ab2",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "collection-visit@1.0.0", "component-emitter@1.2.1",
        "get-value@2.0.6", "has-value@1.0.0", "isobject@3.0.1",
        "set-value@2.0.0", "to-object-path@0.3.0", "union-value@1.0.0",
        "unset-value@1.0.0"
      ]
    },
    "bser@2.0.0": {
      "record": {
        "name": "bser",
        "version": "2.0.0",
        "source":
          "archive:https://registry.npmjs.org/bser/-/bser-2.0.0.tgz#sha1:9ac78d3ed5d915804fd87acb158bc797147a1719",
        "files": [],
        "opam": null
      },
      "dependencies": [ "node-int64@0.4.0" ]
    },
    "braces@2.3.2": {
      "record": {
        "name": "braces",
        "version": "2.3.2",
        "source":
          "archive:https://registry.npmjs.org/braces/-/braces-2.3.2.tgz#sha1:5979fd3f14cd531565e5fa2df1abfff1dfaee729",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "arr-flatten@1.1.0", "array-unique@0.3.2", "extend-shallow@2.0.1",
        "fill-range@4.0.0", "isobject@3.0.1", "repeat-element@1.1.3",
        "snapdragon@0.8.2", "snapdragon-node@2.1.1", "split-string@3.1.0",
        "to-regex@3.0.2"
      ]
    },
    "base@0.11.2": {
      "record": {
        "name": "base",
        "version": "0.11.2",
        "source":
          "archive:https://registry.npmjs.org/base/-/base-0.11.2.tgz#sha1:7bde5ced145b6d551a90db87f83c558b4eb48a8f",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "cache-base@1.0.1", "class-utils@0.3.6", "component-emitter@1.2.1",
        "define-property@1.0.0", "isobject@3.0.1", "mixin-deep@1.3.1",
        "pascalcase@0.1.1"
      ]
    },
    "atob@2.1.2": {
      "record": {
        "name": "atob",
        "version": "2.1.2",
        "source":
          "archive:https://registry.npmjs.org/atob/-/atob-2.1.2.tgz#sha1:6d9517eb9e030d2436666651e86bd9f6f13533c9",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "assign-symbols@1.0.0": {
      "record": {
        "name": "assign-symbols",
        "version": "1.0.0",
        "source":
          "archive:https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz#sha1:59667f41fadd4f20ccbc2bb96b8d4f7f78ec0367",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "array-unique@0.3.2": {
      "record": {
        "name": "array-unique",
        "version": "0.3.2",
        "source":
          "archive:https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz#sha1:a894b75d4bc4f6cd679ef3244a9fd8f46ae2d428",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "arr-union@3.1.0": {
      "record": {
        "name": "arr-union",
        "version": "3.1.0",
        "source":
          "archive:https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz#sha1:e39b09aea9def866a8f206e288af63919bae39c4",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "arr-flatten@1.1.0": {
      "record": {
        "name": "arr-flatten",
        "version": "1.1.0",
        "source":
          "archive:https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz#sha1:36048bbff4e7b47e136644316c99669ea5ae91f1",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "arr-diff@4.0.0": {
      "record": {
        "name": "arr-diff",
        "version": "4.0.0",
        "source":
          "archive:https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz#sha1:d6461074febfec71e7e15235761a329a5dc7c520",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "anymatch@2.0.0": {
      "record": {
        "name": "anymatch",
        "version": "2.0.0",
        "source":
          "archive:https://registry.npmjs.org/anymatch/-/anymatch-2.0.0.tgz#sha1:bcb24b4f37934d9aa7ac17b4adaf89e7c76ef2eb",
        "files": [],
        "opam": null
      },
      "dependencies": [ "micromatch@3.1.10", "normalize-path@2.1.1" ]
    },
    "@opam/yojson@opam:1.7.0": {
      "record": {
        "name": "@opam/yojson",
        "version": "opam:1.7.0",
        "source":
          "archive:https://github.com/ocaml-community/yojson/releases/download/1.7.0/yojson-1.7.0.tbz#md5:b89d39ca3f8c532abe5f547ad3b8f84d",
        "files": [],
        "opam": {
          "name": "yojson",
          "version": "1.7.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"yojson\"\nversion: \"1.7.0\"\nsynopsis:\n  \"Yojson is an optimized parsing and printing library for the JSON format\"\ndescription: \"\"\"\nYojson is an optimized parsing and printing library for the JSON format.\n\nIt addresses a few shortcomings of json-wheel including 2x speedup,\npolymorphic variants and optional syntax for tuples and variants.\n\nydump is a pretty-printing command-line program provided with the\nyojson package.\n\nThe program atdgen can be used to derive OCaml-JSON serializers and\ndeserializers from type definitions.\"\"\"\nmaintainer: \"martin@mjambon.com\"\nauthors: \"Martin Jambon\"\nhomepage: \"https://github.com/ocaml-community/yojson\"\ndoc: \"https://ocaml-community.github.io/yojson/\"\nbug-reports: \"https://github.com/ocaml-community/yojson/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"dune\" {build}\n  \"cppo\" {build}\n  \"easy-format\"\n  \"biniou\" {>= \"1.2.0\"}\n  \"alcotest\" {with-test & >= \"0.8.5\"}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n]\nrun-test: [\"dune\" \"runtest\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/ocaml-community/yojson.git\"\nurl {\n  src:\n    \"https://github.com/ocaml-community/yojson/releases/download/1.7.0/yojson-1.7.0.tbz\"\n  checksum: \"md5=b89d39ca3f8c532abe5f547ad3b8f84d\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/biniou@opam:1.2.0",
        "@opam/cppo@opam:1.6.5", "@opam/dune@opam:1.7.3",
        "@opam/easy-format@opam:1.3.1", "ocaml@4.7.1004"
      ]
    },
    "@opam/variantslib@opam:v0.12.0": {
      "record": {
        "name": "@opam/variantslib",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/variantslib-v0.12.0.tar.gz#md5:77f75c873ccc397c8c7776ebf7a3f88c",
        "files": [],
        "opam": {
          "name": "variantslib",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"variantslib\"\nversion: \"v0.12.0\"\nsynopsis: \"Part of Jane Street's Core library\"\ndescription: \"\"\"\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/variantslib\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/variantslib/index.html\"\nbug-reports: \"https://github.com/janestreet/variantslib/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/variantslib.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/variantslib-v0.12.0.tar.gz\"\n  checksum: \"md5=77f75c873ccc397c8c7776ebf7a3f88c\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "ocaml@4.7.1004"
      ]
    },
    "@opam/uri@opam:2.2.0": {
      "record": {
        "name": "@opam/uri",
        "version": "opam:2.2.0",
        "source":
          "archive:https://github.com/mirage/ocaml-uri/releases/download/v2.2.0/uri-v2.2.0.tbz#md5:e52e17fc6cc3491ab44994e6ebc5664c",
        "files": [],
        "opam": {
          "name": "uri",
          "version": "2.2.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"uri\"\nversion: \"2.2.0\"\nsynopsis: \"An RFC3986 URI/URL parsing library\"\ndescription: \"\"\"\nThis is an OCaml implementation of the [RFC3986](http://tools.ietf.org/html/rfc3986) specification \nfor parsing URI or URLs.\"\"\"\nmaintainer: \"anil@recoil.org\"\nauthors: [\"Anil Madhavapeddy\" \"David Sheets\" \"Rudi Grinberg\"]\nlicense: \"ISC\"\ntags: [\"url\" \"uri\" \"org:mirage\" \"org:xapi-project\"]\nhomepage: \"https://github.com/mirage/ocaml-uri\"\ndoc: \"https://mirage.github.io/ocaml-uri/\"\nbug-reports: \"https://github.com/mirage/ocaml-uri/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.0\"}\n  \"dune\" {build & >= \"1.2.0\"}\n  \"ounit\" {with-test & >= \"1.0.2\"}\n  \"ppx_sexp_conv\" {build & >= \"v0.9.0\" & < \"v0.13\"}\n  \"re\" {>= \"1.7.2\"}\n  \"sexplib0\" {< \"v0.13\"}\n  \"stringext\" {>= \"1.4.0\"}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"dune\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git+https://github.com/mirage/ocaml-uri.git\"\nurl {\n  src:\n    \"https://github.com/mirage/ocaml-uri/releases/download/v2.2.0/uri-v2.2.0.tbz\"\n  checksum: \"md5=e52e17fc6cc3491ab44994e6ebc5664c\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.7.3",
        "@opam/ppx_sexp_conv@opam:v0.12.0", "@opam/re@opam:1.8.0",
        "@opam/sexplib0@opam:v0.12.0", "@opam/stringext@opam:1.5.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/typerep@opam:v0.12.0": {
      "record": {
        "name": "@opam/typerep",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/typerep-v0.12.0.tar.gz#md5:01bef4eae15bd9830e6c270875c5fcb6",
        "files": [],
        "opam": {
          "name": "typerep",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"typerep\"\nversion: \"v0.12.0\"\nsynopsis: \"Typerep is a library for runtime types\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/typerep\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/typerep/index.html\"\nbug-reports: \"https://github.com/janestreet/typerep/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/typerep.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/typerep-v0.12.0.tar.gz\"\n  checksum: \"md5=01bef4eae15bd9830e6c270875c5fcb6\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "ocaml@4.7.1004"
      ]
    },
    "@opam/time_now@opam:v0.12.0": {
      "record": {
        "name": "@opam/time_now",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/time_now-v0.12.0.tar.gz#md5:73db38082d7e0944a678e87d55f6cf20",
        "files": [],
        "opam": {
          "name": "time_now",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"time_now\"\nversion: \"v0.12.0\"\nsynopsis: \"Reports the current time\"\ndescription: \"\"\"\nProvides a single function to report the current time in nanoseconds\nsince the start of the Unix epoch.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/time_now\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/time_now/index.html\"\nbug-reports: \"https://github.com/janestreet/time_now/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"jst-config\" {>= \"v0.12\" & < \"v0.13\"}\n  \"jane-street-headers\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_optcomp\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/time_now.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/time_now-v0.12.0.tar.gz\"\n  checksum: \"md5=73db38082d7e0944a678e87d55f6cf20\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/jane-street-headers@opam:v0.12.0",
        "@opam/jst-config@opam:v0.12.0", "@opam/ppx_base@opam:v0.12.0",
        "@opam/ppx_optcomp@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/stringext@opam:1.5.0": {
      "record": {
        "name": "@opam/stringext",
        "version": "opam:1.5.0",
        "source":
          "archive:https://github.com/rgrinberg/stringext/archive/1.5.0.zip#md5:867263ea97532f150516677fa994cdf2",
        "files": [],
        "opam": {
          "name": "stringext",
          "version": "1.5.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"stringext\"\nversion: \"1.5.0\"\nsynopsis: \"Extra string functions for OCaml\"\ndescription: \"\"\"\nExtra string functions for OCaml. Mainly splitting. All functions are in the\n`Stringext` module.\"\"\"\nmaintainer: \"rudi.grinberg@gmail.com\"\nauthors: \"Rudi Grinberg\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/rgrinberg/stringext\"\nbug-reports: \"https://github.com/rgrinberg/stringext/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"ounit\" {with-test}\n  \"qtest\" {with-test & >= \"2.2\"}\n  \"base-bytes\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git+https://github.com/rgrinberg/stringext.git\"\nurl {\n  src: \"https://github.com/rgrinberg/stringext/archive/1.5.0.zip\"\n  checksum: \"md5=867263ea97532f150516677fa994cdf2\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-bytes@opam:base",
        "@opam/jbuilder@opam:transition", "ocaml@4.7.1004"
      ]
    },
    "@opam/stdio@opam:v0.12.0": {
      "record": {
        "name": "@opam/stdio",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/stdio-v0.12.0.tar.gz#md5:b261ff2d5667fde960c95e50cff668da",
        "files": [],
        "opam": {
          "name": "stdio",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"stdio\"\nversion: \"v0.12.0\"\nsynopsis: \"Standard IO library for OCaml\"\ndescription: \"\"\"\nStdio implements simple input/output functionalities for OCaml.\n\nIt re-exports the input/output functions of the OCaml standard\nlibraries using a more consistent API.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/stdio\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/stdio/index.html\"\nbug-reports: \"https://github.com/janestreet/stdio/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/stdio.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/stdio-v0.12.0.tar.gz\"\n  checksum: \"md5=b261ff2d5667fde960c95e50cff668da\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "ocaml@4.7.1004"
      ]
    },
    "@opam/splittable_random@opam:v0.12.0": {
      "record": {
        "name": "@opam/splittable_random",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/splittable_random-v0.12.0.tar.gz#md5:d0229d2ed3fff5ab6aeb2ac6b764e68e",
        "files": [],
        "opam": {
          "name": "splittable_random",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"splittable_random\"\nversion: \"v0.12.0\"\nsynopsis: \"PRNG that can be split into independent streams\"\ndescription: \"\"\"\nPRNG that can be split into independent streams\n\nA splittable pseudo-random number generator (SPRNG) functions like a PRNG in that it can\nbe used as a stream of random values; it can also be \"split\" to produce a second,\nindependent stream of random values.\n\nThis library implements a splittable pseudo-random number generator that sacrifices\ncryptographic-quality randomness in favor of performance.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/splittable_random\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/splittable_random/index.html\"\nbug-reports: \"https://github.com/janestreet/splittable_random/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_assert\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_bench\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_inline_test\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_message\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/splittable_random.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/splittable_random-v0.12.0.tar.gz\"\n  checksum: \"md5=d0229d2ed3fff5ab6aeb2ac6b764e68e\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_assert@opam:v0.12.0",
        "@opam/ppx_bench@opam:v0.12.0", "@opam/ppx_inline_test@opam:v0.12.0",
        "@opam/ppx_sexp_message@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/spawn@opam:v0.12.0": {
      "record": {
        "name": "@opam/spawn",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://github.com/janestreet/spawn/releases/download/v0.12.0/spawn-v0.12.0.tbz#md5:f9c770cbe3856e6ed5b92ba3ce7c691c",
        "files": [],
        "opam": {
          "name": "spawn",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"spawn\"\nversion: \"v0.12.0\"\nsynopsis: \"Spawning sub-processes\"\ndescription: \"\"\"\nSpawn is a small library exposing only one functionality: spawning sub-process.\n\nIt has three main goals:\n\n1. provide missing features of Unix.create_process such as providing a\nworking directory\n\n2. provide better errors when a system call fails in the\nsub-process. For instance if a command is not found, you get a proper\n[Unix.Unix_error] exception\n\n3. improve performances by using vfork when available. It is often\nclaimed that nowadays fork is as fast as vfork, however in practice\nfork takes time proportional to the process memory while vfork is\nconstant time. In application using a lot of memory, vfork can be\nthousands of times faster than fork.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"Apache-2.0\"\nhomepage: \"https://github.com/janestreet/spawn\"\ndoc: \"https://janestreet.github.io/spawn/\"\nbug-reports: \"https://github.com/janestreet/spawn/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"jbuilder\" {build & >= \"1.0+beta18.1\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/spawn.git\"\nurl {\n  src:\n    \"https://github.com/janestreet/spawn/releases/download/v0.12.0/spawn-v0.12.0.tbz\"\n  checksum: \"md5=f9c770cbe3856e6ed5b92ba3ce7c691c\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/sexplib0@opam:v0.12.0": {
      "record": {
        "name": "@opam/sexplib0",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/sexplib0-v0.12.0.tar.gz#md5:2486a25d3a94da9a94acc018b5f09061",
        "files": [],
        "opam": {
          "name": "sexplib0",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"sexplib0\"\nversion: \"v0.12.0\"\nsynopsis:\n  \"Library containing the definition of S-expressions and some base converters\"\ndescription: \"\"\"\nPart of Jane Street's Core library\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/sexplib0\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/sexplib0/index.html\"\nbug-reports: \"https://github.com/janestreet/sexplib0/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/sexplib0.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/sexplib0-v0.12.0.tar.gz\"\n  checksum: \"md5=2486a25d3a94da9a94acc018b5f09061\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.7.3", "ocaml@4.7.1004"
      ]
    },
    "@opam/sexplib@opam:v0.12.0": {
      "record": {
        "name": "@opam/sexplib",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/sexplib-v0.12.0.tar.gz#md5:a7f9f8a414aed6cc56901199cda020f6",
        "files": [],
        "opam": {
          "name": "sexplib",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"sexplib\"\nversion: \"v0.12.0\"\nsynopsis: \"Library for serializing OCaml values to and from S-expressions\"\ndescription: \"\"\"\nPart of Jane Street's Core library\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/sexplib\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/sexplib/index.html\"\nbug-reports: \"https://github.com/janestreet/sexplib/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"parsexp\" {>= \"v0.12\" & < \"v0.13\"}\n  \"sexplib0\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"num\"\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/sexplib.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/sexplib-v0.12.0.tar.gz\"\n  checksum: \"md5=a7f9f8a414aed6cc56901199cda020f6\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.7.3",
        "@opam/num@opam:1.1", "@opam/parsexp@opam:v0.12.0",
        "@opam/sexplib0@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/seq@opam:base": {
      "record": {
        "name": "@opam/seq",
        "version": "opam:base",
        "source": "no-source:",
        "files": [
          {
            "name": "seq.install",
            "content": "lib:[\n  \"META.seq\" {\"META\"}\n]\n"
          },
          {
            "name": "META.seq",
            "content":
              "name=\"seq\"\nversion=\"[distributed with OCaml 4.07 or above]\"\ndescription=\"dummy backward-compatibility package for iterators\"\nrequires=\"\"\n"
          }
        ],
        "opam": {
          "name": "seq",
          "version": "base",
          "opam":
            "opam-version: \"2.0\"\nname: \"seq\"\nversion: \"base\"\nsynopsis:\n  \"Compatibility package for OCaml's standard iterator type starting from 4.07.\"\nmaintainer: \" \"\nauthors: \" \"\nhomepage: \" \"\nbug-reports: \"https://caml.inria.fr/mantis/main_page.php\"\ndepends: [\n  \"ocaml\" {>= \"4.07.0\"}\n]\ndev-repo: \"git+https://github.com/ocaml/ocaml.git\"\nextra-files: [\n  [\"seq.install\" \"md5=026b31e1df290373198373d5aaa26e42\"]\n  [\"META.seq\" \"md5=b33c8a1a6c7ed797816ce27df4855107\"]\n]",
          "override": null
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1", "ocaml@4.7.1004" ]
    },
    "@opam/result@opam:1.3": {
      "record": {
        "name": "@opam/result",
        "version": "opam:1.3",
        "source":
          "archive:https://github.com/janestreet/result/releases/download/1.3/result-1.3.tbz#md5:4beebefd41f7f899b6eeba7414e7ae01",
        "files": [],
        "opam": {
          "name": "result",
          "version": "1.3",
          "opam":
            "opam-version: \"2.0\"\nname: \"result\"\nversion: \"1.3\"\nsynopsis: \"Compatibility Result module\"\ndescription: \"\"\"\nProjects that want to use the new result type defined in OCaml >= 4.03\nwhile staying compatible with older version of OCaml should use the\nResult module defined in this library.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"BSD3\"\nhomepage: \"https://github.com/janestreet/result\"\nbug-reports: \"https://github.com/janestreet/result/issues\"\ndepends: [\n  \"ocaml\"\n  \"jbuilder\" {build & >= \"1.0+beta11\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/result.git\"\nurl {\n  src:\n    \"https://github.com/janestreet/result/releases/download/1.3/result-1.3.tbz\"\n  checksum: \"md5=4beebefd41f7f899b6eeba7414e7ae01\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/re@opam:1.8.0": {
      "record": {
        "name": "@opam/re",
        "version": "opam:1.8.0",
        "source":
          "archive:https://github.com/ocaml/ocaml-re/releases/download/1.8.0/re-1.8.0.tbz#md5:765f6f8d3e6ab200866e719ed7e5178d",
        "files": [],
        "opam": {
          "name": "re",
          "version": "1.8.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"re\"\nversion: \"1.8.0\"\nsynopsis: \"RE is a regular expression library for OCaml\"\ndescription: \"\"\"\nPure OCaml regular expressions with:\n* Perl-style regular expressions (module Re.Perl)\n* Posix extended regular expressions (module Re.Posix)\n* Emacs-style regular expressions (module Re.Emacs)\n* Shell-style file globbing (module Re.Glob)\n* Compatibility layer for OCaml's built-in Str module (module Re.Str)\"\"\"\nmaintainer: \"rudi.grinberg@gmail.com\"\nauthors: [\n  \"Jerome Vouillon\"\n  \"Thomas Gazagnaire\"\n  \"Anil Madhavapeddy\"\n  \"Rudi Grinberg\"\n  \"Gabriel Radanne\"\n]\nlicense: \"LGPL-2.0 with OCaml linking exception\"\nhomepage: \"https://github.com/ocaml/ocaml-re\"\nbug-reports: \"https://github.com/ocaml/ocaml-re/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"ounit\" {with-test}\n  \"seq\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-n\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git+https://github.com/ocaml/ocaml-re.git\"\nurl {\n  src:\n    \"https://github.com/ocaml/ocaml-re/releases/download/1.8.0/re-1.8.0.tbz\"\n  checksum: \"md5=765f6f8d3e6ab200866e719ed7e5178d\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "@opam/seq@opam:base", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppxlib@opam:0.5.0": {
      "record": {
        "name": "@opam/ppxlib",
        "version": "opam:0.5.0",
        "source":
          "archive:https://github.com/ocaml-ppx/ppxlib/releases/download/0.5.0/ppxlib-0.5.0.tbz#md5:bb278ff6e819e0e4a4d8a005bb2512a4",
        "files": [],
        "opam": {
          "name": "ppxlib",
          "version": "0.5.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppxlib\"\nversion: \"0.5.0\"\nsynopsis: \"Base library and tools for ppx rewriters\"\ndescription: \"\"\"\nA comprehensive toolbox for ppx development. It features:\n- a OCaml AST / parser / pretty-printer snapshot,to create a full\n   frontend independent of the version of OCaml;\n- a library for library for ppx rewriters in general, and type-driven\n  code generators in particular;\n- a feature-full driver for OCaml AST transformers;\n- a quotation mechanism allowing  to write values representing the\n   OCaml AST in the OCaml syntax;\n- a generator of open recursion classes from type definitions.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/ocaml-ppx/ppxlib\"\ndoc: \"https://ocaml-ppx.github.io/ppxlib/\"\nbug-reports: \"https://github.com/ocaml-ppx/ppxlib/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"base\" {>= \"v0.11.0\" & < \"v0.13\"}\n  \"dune\" {build}\n  \"ocaml-compiler-libs\" {>= \"v0.11.0\"}\n  \"ocaml-migrate-parsetree\" {>= \"1.0.9\"}\n  \"ppx_derivers\" {>= \"1.0\"}\n  \"stdio\" {>= \"v0.11.0\" & < \"v0.13\"}\n  \"ocamlfind\" {with-test}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n]\nrun-test: [\"dune\" \"runtest\" \"-p\" name \"-j\" jobs] {ocaml >= \"4.06\"}\ndev-repo: \"git+https://github.com/ocaml-ppx/ppxlib.git\"\nurl {\n  src:\n    \"https://github.com/ocaml-ppx/ppxlib/releases/download/0.5.0/ppxlib-0.5.0.tbz\"\n  checksum: \"md5=bb278ff6e819e0e4a4d8a005bb2512a4\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ocaml-compiler-libs@opam:v0.11.0",
        "@opam/ocaml-migrate-parsetree@opam:1.2.0",
        "@opam/ppx_derivers@opam:1.0", "@opam/stdio@opam:v0.12.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_variants_conv@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_variants_conv",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_variants_conv-v0.12.0.tar.gz#md5:0661be686b476e1a9c6e891e45fb3581",
        "files": [],
        "opam": {
          "name": "ppx_variants_conv",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_variants_conv\"\nversion: \"v0.12.0\"\nsynopsis:\n  \"Generation of accessor and iteration functions for ocaml variant types\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_variants_conv\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_variants_conv/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_variants_conv/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"variantslib\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_variants_conv.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_variants_conv-v0.12.0.tar.gz\"\n  checksum: \"md5=0661be686b476e1a9c6e891e45fb3581\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppxlib@opam:0.5.0",
        "@opam/variantslib@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_typerep_conv@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_typerep_conv",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_typerep_conv-v0.12.0.tar.gz#md5:4e7d0bef7d4ca860a4d3149f63b7f7f1",
        "files": [],
        "opam": {
          "name": "ppx_typerep_conv",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_typerep_conv\"\nversion: \"v0.12.0\"\nsynopsis: \"Generation of runtime types from type declarations\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_typerep_conv\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_typerep_conv/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_typerep_conv/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"typerep\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_typerep_conv.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_typerep_conv-v0.12.0.tar.gz\"\n  checksum: \"md5=4e7d0bef7d4ca860a4d3149f63b7f7f1\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppxlib@opam:0.5.0",
        "@opam/typerep@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_stable@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_stable",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_stable-v0.12.0.tar.gz#md5:365126c46dbd89fb2bc19b7616df7ab9",
        "files": [],
        "opam": {
          "name": "ppx_stable",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_stable\"\nversion: \"v0.12.0\"\nsynopsis: \"Stable types conversions generator\"\ndescription: \"\"\"\nA ppx extension for easier implementation of conversion functions between almost\nidentical types.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_stable\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_stable/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_stable/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_stable.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_stable-v0.12.0.tar.gz\"\n  checksum: \"md5=365126c46dbd89fb2bc19b7616df7ab9\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_sexp_value@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_sexp_value",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_sexp_value-v0.12.0.tar.gz#md5:83c668e03cf6e25be45ffd2b3f62bc25",
        "files": [],
        "opam": {
          "name": "ppx_sexp_value",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_sexp_value\"\nversion: \"v0.12.0\"\nsynopsis:\n  \"A ppx rewriter that simplifies building s-expressions from ocaml values\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_sexp_value\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_sexp_value/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_sexp_value/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_here\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_sexp_value.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_sexp_value-v0.12.0.tar.gz\"\n  checksum: \"md5=83c668e03cf6e25be45ffd2b3f62bc25\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_here@opam:v0.12.0",
        "@opam/ppx_sexp_conv@opam:v0.12.0", "@opam/ppxlib@opam:0.5.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_sexp_message@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_sexp_message",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_sexp_message-v0.12.0.tar.gz#md5:2f4d96d19e42f233fc0c4f6699e74833",
        "files": [],
        "opam": {
          "name": "ppx_sexp_message",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_sexp_message\"\nversion: \"v0.12.0\"\nsynopsis: \"A ppx rewriter for easy construction of s-expressions\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_sexp_message\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_sexp_message/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_sexp_message/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_here\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_sexp_message.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_sexp_message-v0.12.0.tar.gz\"\n  checksum: \"md5=2f4d96d19e42f233fc0c4f6699e74833\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_here@opam:v0.12.0",
        "@opam/ppx_sexp_conv@opam:v0.12.0", "@opam/ppxlib@opam:0.5.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_sexp_conv@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_sexp_conv",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_sexp_conv-v0.12.0.tar.gz#md5:648ac430b4a74c2297705d260b66778f",
        "files": [],
        "opam": {
          "name": "ppx_sexp_conv",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_sexp_conv\"\nversion: \"v0.12.0\"\nsynopsis: \"[@@deriving] plugin to generate S-expression conversion functions\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_sexp_conv\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_sexp_conv/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_sexp_conv/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"sexplib0\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_sexp_conv.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_sexp_conv-v0.12.0.tar.gz\"\n  checksum: \"md5=648ac430b4a74c2297705d260b66778f\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppxlib@opam:0.5.0",
        "@opam/sexplib0@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_pipebang@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_pipebang",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_pipebang-v0.12.0.tar.gz#md5:2d7e55543768d11cb83fce48272e54d8",
        "files": [],
        "opam": {
          "name": "ppx_pipebang",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_pipebang\"\nversion: \"v0.12.0\"\nsynopsis:\n  \"A ppx rewriter that inlines reverse application operators `|>` and `|!`\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_pipebang\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_pipebang/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_pipebang/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_pipebang.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_pipebang-v0.12.0.tar.gz\"\n  checksum: \"md5=2d7e55543768d11cb83fce48272e54d8\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.7.3",
        "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_optional@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_optional",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_optional-v0.12.0.tar.gz#md5:c678f367dee9b2ca103a4f54b7737917",
        "files": [],
        "opam": {
          "name": "ppx_optional",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_optional\"\nversion: \"v0.12.0\"\nsynopsis: \"Pattern matching on flat options\"\ndescription: \"\"\"\nA ppx rewriter that rewrites simple match statements with an if then\nelse expression.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_optional\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_optional/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_optional/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_optional.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_optional-v0.12.0.tar.gz\"\n  checksum: \"md5=c678f367dee9b2ca103a4f54b7737917\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_optcomp@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_optcomp",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_optcomp-v0.12.0.tar.gz#md5:884401fbb3be785e3a3360e1d43de75a",
        "files": [],
        "opam": {
          "name": "ppx_optcomp",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_optcomp\"\nversion: \"v0.12.0\"\nsynopsis: \"Optional compilation for OCaml\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_optcomp\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_optcomp/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_optcomp/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"stdio\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_optcomp.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_optcomp-v0.12.0.tar.gz\"\n  checksum: \"md5=884401fbb3be785e3a3360e1d43de75a\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppxlib@opam:0.5.0",
        "@opam/stdio@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_module_timer@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_module_timer",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_module_timer-v0.12.0.tar.gz#md5:16262567123c81beeadaa884e53722bd",
        "files": [],
        "opam": {
          "name": "ppx_module_timer",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_module_timer\"\nversion: \"v0.12.0\"\nsynopsis: \"Ppx rewriter that records top-level module startup times\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_module_timer\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_module_timer/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_module_timer/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"stdio\" {>= \"v0.12\" & < \"v0.13\"}\n  \"time_now\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_module_timer.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_module_timer-v0.12.0.tar.gz\"\n  checksum: \"md5=16262567123c81beeadaa884e53722bd\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_base@opam:v0.12.0",
        "@opam/ppxlib@opam:0.5.0", "@opam/stdio@opam:v0.12.0",
        "@opam/time_now@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_let@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_let",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_let-v0.12.0.tar.gz#md5:8ebaa03cb252e29c3152cf32e5769e83",
        "files": [],
        "opam": {
          "name": "ppx_let",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_let\"\nversion: \"v0.12.0\"\nsynopsis: \"Monadic let-bindings\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_let\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_let/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_let/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_let.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_let-v0.12.0.tar.gz\"\n  checksum: \"md5=8ebaa03cb252e29c3152cf32e5769e83\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_js_style@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_js_style",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_js_style-v0.12.0.tar.gz#md5:ecc9f1010c7398e48c7c0d0353d47839",
        "files": [],
        "opam": {
          "name": "ppx_js_style",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_js_style\"\nversion: \"v0.12.0\"\nsynopsis: \"Code style checker for Jane Street Packages\"\ndescription: \"\"\"\nPart of the Jane Street's PPX rewriters collection.\n\nThis packages is a no-op ppx rewriter. It is used as a 'lint' tool to\nenforce some coding conventions across all Jane Street packages.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_js_style\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_js_style/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_js_style/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"octavius\"\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_js_style.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_js_style-v0.12.0.tar.gz\"\n  checksum: \"md5=ecc9f1010c7398e48c7c0d0353d47839\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/octavius@opam:1.2.0",
        "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_jane@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_jane",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_jane-v0.12.0.tar.gz#md5:2159e05a81b90729d1bff50da883dbf8",
        "files": [],
        "opam": {
          "name": "ppx_jane",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_jane\"\nversion: \"v0.12.0\"\nsynopsis: \"Standard Jane Street ppx rewriters\"\ndescription: \"\"\"\nThis package installs a ppx-jane executable, which is a ppx driver\nincluding all standard Jane Street ppx rewriters.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_jane\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_jane/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_jane/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base_quickcheck\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_assert\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_bench\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_bin_prot\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_custom_printf\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_expect\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_fail\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_fields_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_here\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_inline_test\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_let\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_module_timer\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_optcomp\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_optional\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_pipebang\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_message\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_value\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_stable\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_typerep_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_variants_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_jane.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_jane-v0.12.0.tar.gz\"\n  checksum: \"md5=2159e05a81b90729d1bff50da883dbf8\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base_quickcheck@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_assert@opam:v0.12.0",
        "@opam/ppx_base@opam:v0.12.0", "@opam/ppx_bench@opam:v0.12.0",
        "@opam/ppx_bin_prot@opam:v0.12.0",
        "@opam/ppx_custom_printf@opam:v0.12.0",
        "@opam/ppx_expect@opam:v0.12.0", "@opam/ppx_fail@opam:v0.12.0",
        "@opam/ppx_fields_conv@opam:v0.12.0", "@opam/ppx_here@opam:v0.12.0",
        "@opam/ppx_inline_test@opam:v0.12.0", "@opam/ppx_let@opam:v0.12.0",
        "@opam/ppx_module_timer@opam:v0.12.0",
        "@opam/ppx_optcomp@opam:v0.12.0", "@opam/ppx_optional@opam:v0.12.0",
        "@opam/ppx_pipebang@opam:v0.12.0",
        "@opam/ppx_sexp_message@opam:v0.12.0",
        "@opam/ppx_sexp_value@opam:v0.12.0", "@opam/ppx_stable@opam:v0.12.0",
        "@opam/ppx_typerep_conv@opam:v0.12.0",
        "@opam/ppx_variants_conv@opam:v0.12.0", "@opam/ppxlib@opam:0.5.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_inline_test@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_inline_test",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_inline_test-v0.12.0.tar.gz#md5:b9d2642f627b9b72b13a14ae33ec7c2f",
        "files": [],
        "opam": {
          "name": "ppx_inline_test",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_inline_test\"\nversion: \"v0.12.0\"\nsynopsis: \"Syntax extension for writing in-line tests in ocaml code\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_inline_test\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_inline_test/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_inline_test/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_inline_test.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_inline_test-v0.12.0.tar.gz\"\n  checksum: \"md5=b9d2642f627b9b72b13a14ae33ec7c2f\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_here@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_here",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_here-v0.12.0.tar.gz#md5:aaae5233a574ebbbba094880a882b330",
        "files": [],
        "opam": {
          "name": "ppx_here",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_here\"\nversion: \"v0.12.0\"\nsynopsis: \"Expands [%here] into its location\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_here\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_here/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_here/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_here.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_here-v0.12.0.tar.gz\"\n  checksum: \"md5=aaae5233a574ebbbba094880a882b330\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_hash@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_hash",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_hash-v0.12.0.tar.gz#md5:5d88c8b94270a83e218b4d986b7cd79b",
        "files": [],
        "opam": {
          "name": "ppx_hash",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_hash\"\nversion: \"v0.12.0\"\nsynopsis:\n  \"A ppx rewriter that generates hash functions from type expressions and definitions\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_hash\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_hash/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_hash/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_compare\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_hash.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_hash-v0.12.0.tar.gz\"\n  checksum: \"md5=5d88c8b94270a83e218b4d986b7cd79b\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_compare@opam:v0.12.0",
        "@opam/ppx_sexp_conv@opam:v0.12.0", "@opam/ppxlib@opam:0.5.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_fields_conv@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_fields_conv",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_fields_conv-v0.12.0.tar.gz#md5:5bdf701197abc0dd4145a489912e49aa",
        "files": [],
        "opam": {
          "name": "ppx_fields_conv",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_fields_conv\"\nversion: \"v0.12.0\"\nsynopsis: \"Generation of accessor and iteration functions for ocaml records\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_fields_conv\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_fields_conv/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_fields_conv/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"fieldslib\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_fields_conv.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_fields_conv-v0.12.0.tar.gz\"\n  checksum: \"md5=5bdf701197abc0dd4145a489912e49aa\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/fieldslib@opam:v0.12.0",
        "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_fail@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_fail",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_fail-v0.12.0.tar.gz#md5:281876493989812869c8c80e7dd92b48",
        "files": [],
        "opam": {
          "name": "ppx_fail",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_fail\"\nversion: \"v0.12.0\"\nsynopsis: \"Add location to calls to failwiths\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_fail\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_fail/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_fail/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_here\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_fail.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_fail-v0.12.0.tar.gz\"\n  checksum: \"md5=281876493989812869c8c80e7dd92b48\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_here@opam:v0.12.0",
        "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_expect@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_expect",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_expect-v0.12.0.tar.gz#md5:139c7e7a32b9aba0a21e264ecbd470de",
        "files": [],
        "opam": {
          "name": "ppx_expect",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_expect\"\nversion: \"v0.12.0\"\nsynopsis: \"Cram like framework for OCaml\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_expect\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_expect/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_expect/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_assert\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_compare\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_custom_printf\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_fields_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_here\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_inline_test\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_variants_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"stdio\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n  \"re\" {>= \"1.8.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_expect.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_expect-v0.12.0.tar.gz\"\n  checksum: \"md5=139c7e7a32b9aba0a21e264ecbd470de\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_assert@opam:v0.12.0",
        "@opam/ppx_compare@opam:v0.12.0",
        "@opam/ppx_custom_printf@opam:v0.12.0",
        "@opam/ppx_fields_conv@opam:v0.12.0", "@opam/ppx_here@opam:v0.12.0",
        "@opam/ppx_inline_test@opam:v0.12.0",
        "@opam/ppx_sexp_conv@opam:v0.12.0",
        "@opam/ppx_variants_conv@opam:v0.12.0", "@opam/ppxlib@opam:0.5.0",
        "@opam/re@opam:1.8.0", "@opam/stdio@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_enumerate@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_enumerate",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_enumerate-v0.12.0.tar.gz#md5:cb20f7ef24d5ea4abff7dfeb6425f689",
        "files": [],
        "opam": {
          "name": "ppx_enumerate",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_enumerate\"\nversion: \"v0.12.0\"\nsynopsis: \"Generate a list containing all values of a finite type\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_enumerate\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_enumerate/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_enumerate/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_enumerate.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_enumerate-v0.12.0.tar.gz\"\n  checksum: \"md5=cb20f7ef24d5ea4abff7dfeb6425f689\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_derivers@opam:1.0": {
      "record": {
        "name": "@opam/ppx_derivers",
        "version": "opam:1.0",
        "source":
          "archive:https://github.com/ocaml-ppx/ppx_derivers/archive/1.0.tar.gz#md5:4ddce8f43fdb9b0ef0ab6a7cbfebc3e3",
        "files": [],
        "opam": {
          "name": "ppx_derivers",
          "version": "1.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_derivers\"\nversion: \"1.0\"\nsynopsis: \"Shared [@@deriving] plugin registry\"\ndescription: \"\"\"\nPpx_derivers is a tiny package whose sole purpose is to allow\nppx_deriving and ppx_type_conv to inter-operate gracefully when linked\nas part of the same ocaml-migrate-parsetree driver.\"\"\"\nmaintainer: \"jeremie@dimino.org\"\nauthors: \"Jérémie Dimino\"\nlicense: \"BSD3\"\nhomepage: \"https://github.com/ocaml-ppx/ppx_derivers\"\nbug-reports: \"https://github.com/ocaml-ppx/ppx_derivers/issues\"\ndepends: [\n  \"ocaml\"\n  \"jbuilder\" {build & >= \"1.0+beta7\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git://github.com/ocaml-ppx/ppx_derivers.git\"\nurl {\n  src: \"https://github.com/ocaml-ppx/ppx_derivers/archive/1.0.tar.gz\"\n  checksum: \"md5=4ddce8f43fdb9b0ef0ab6a7cbfebc3e3\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_custom_printf@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_custom_printf",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_custom_printf-v0.12.0.tar.gz#md5:e2fb959eb9b8a9b45f6687cc051889c2",
        "files": [],
        "opam": {
          "name": "ppx_custom_printf",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_custom_printf\"\nversion: \"v0.12.0\"\nsynopsis: \"Printf-style format-strings for user-defined string conversion\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_custom_printf\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_custom_printf/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_custom_printf/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_custom_printf.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_custom_printf-v0.12.0.tar.gz\"\n  checksum: \"md5=e2fb959eb9b8a9b45f6687cc051889c2\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_sexp_conv@opam:v0.12.0",
        "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_compare@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_compare",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_compare-v0.12.0.tar.gz#md5:e50fddd9fd7ece75ec8a861e7c1e7e18",
        "files": [],
        "opam": {
          "name": "ppx_compare",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_compare\"\nversion: \"v0.12.0\"\nsynopsis: \"Generation of comparison functions from types\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_compare\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_compare/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_compare/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_compare.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_compare-v0.12.0.tar.gz\"\n  checksum: \"md5=e50fddd9fd7ece75ec8a861e7c1e7e18\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_bin_prot@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_bin_prot",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_bin_prot-v0.12.0.tar.gz#md5:5951c22a0d813b5e0a12895a3cd07504",
        "files": [],
        "opam": {
          "name": "ppx_bin_prot",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_bin_prot\"\nversion: \"v0.12.0\"\nsynopsis: \"Generation of bin_prot readers and writers from types\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_bin_prot\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_bin_prot/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_bin_prot/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"bin_prot\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_here\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_bin_prot.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_bin_prot-v0.12.0.tar.gz\"\n  checksum: \"md5=5951c22a0d813b5e0a12895a3cd07504\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/bin_prot@opam:v0.12.0", "@opam/dune@opam:1.7.3",
        "@opam/ppx_here@opam:v0.12.0", "@opam/ppxlib@opam:0.5.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_bench@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_bench",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_bench-v0.12.0.tar.gz#md5:b76421fe63277b1423bbaa36912f110d",
        "files": [],
        "opam": {
          "name": "ppx_bench",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_bench\"\nversion: \"v0.12.0\"\nsynopsis: \"Syntax extension for writing in-line benchmarks in ocaml code\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_bench\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_bench/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_bench/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"ppx_inline_test\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_bench.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_bench-v0.12.0.tar.gz\"\n  checksum: \"md5=b76421fe63277b1423bbaa36912f110d\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.7.3",
        "@opam/ppx_inline_test@opam:v0.12.0", "@opam/ppxlib@opam:0.5.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_base@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_base",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_base-v0.12.0.tar.gz#md5:e8ee5802005d9cc161320f5bf5d51548",
        "files": [],
        "opam": {
          "name": "ppx_base",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_base\"\nversion: \"v0.12.0\"\nsynopsis: \"Base set of ppx rewriters\"\ndescription: \"\"\"\nppx_base is the set of ppx rewriters used for Base.\n\nNote that Base doesn't need ppx to build, it is only used as a\nverification tool.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_base\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_base/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_base/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"ppx_compare\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_enumerate\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_hash\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_js_style\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_base.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_base-v0.12.0.tar.gz\"\n  checksum: \"md5=e8ee5802005d9cc161320f5bf5d51548\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.7.3",
        "@opam/ppx_compare@opam:v0.12.0", "@opam/ppx_enumerate@opam:v0.12.0",
        "@opam/ppx_hash@opam:v0.12.0", "@opam/ppx_js_style@opam:v0.12.0",
        "@opam/ppx_sexp_conv@opam:v0.12.0", "@opam/ppxlib@opam:0.5.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ppx_assert@opam:v0.12.0": {
      "record": {
        "name": "@opam/ppx_assert",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_assert-v0.12.0.tar.gz#md5:e718b50c405146089fa2c6df61b730ec",
        "files": [],
        "opam": {
          "name": "ppx_assert",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_assert\"\nversion: \"v0.12.0\"\nsynopsis: \"Assert-like extension nodes that raise useful errors on failure\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/ppx_assert\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_assert/index.html\"\nbug-reports: \"https://github.com/janestreet/ppx_assert/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_compare\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_here\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_assert.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_assert-v0.12.0.tar.gz\"\n  checksum: \"md5=e718b50c405146089fa2c6df61b730ec\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_compare@opam:v0.12.0",
        "@opam/ppx_here@opam:v0.12.0", "@opam/ppx_sexp_conv@opam:v0.12.0",
        "@opam/ppxlib@opam:0.5.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/parsexp@opam:v0.12.0": {
      "record": {
        "name": "@opam/parsexp",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/parsexp-v0.12.0.tar.gz#md5:741b2c6f59b9618e3affabaa34d468a2",
        "files": [],
        "opam": {
          "name": "parsexp",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"parsexp\"\nversion: \"v0.12.0\"\nsynopsis: \"S-expression parsing library\"\ndescription: \"\"\"\nThis library provides generic parsers for parsing S-expressions from\nstrings or other medium.\n\nThe library is focused on performances but still provide full generic\nparsers that can be used with strings, bigstrings, lexing buffers,\ncharacter streams or any other sources effortlessly.\n\nIt provides three different class of parsers:\n- the normal parsers, producing [Sexp.t] or [Sexp.t list] values\n- the parsers with positions, building compact position sequences so\n  that one can recover original positions in order to report properly\n  located errors at little cost\n- the Concrete Syntax Tree parsers, produce values of type\n  [Parsexp.Cst.t] which record the concrete layout of the s-expression\n  syntax, including comments\n\nThis library is portable and doesn't provide IO functions. To read\ns-expressions from files or other external sources, you should use\nparsexp_io.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/parsexp\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/parsexp/index.html\"\nbug-reports: \"https://github.com/janestreet/parsexp/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"sexplib0\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/parsexp.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/parsexp-v0.12.0.tar.gz\"\n  checksum: \"md5=741b2c6f59b9618e3affabaa34d468a2\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/sexplib0@opam:v0.12.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ounit@opam:2.0.8": {
      "record": {
        "name": "@opam/ounit",
        "version": "opam:2.0.8",
        "source":
          "archive:https://download.ocamlcore.org/ounit/ounit/2.0.8/ounit-2.0.8.tar.gz#md5:bd12d66c9dbd95a50570bb686b0f10f5",
        "files": [],
        "opam": {
          "name": "ounit",
          "version": "2.0.8",
          "opam":
            "opam-version: \"2.0\"\nname: \"ounit\"\nversion: \"2.0.8\"\nsynopsis:\n  \"Unit testing framework loosely based on HUnit. It is similar to JUnit, and other XUnit testing frameworks\"\nmaintainer: \"https://github.com/ocaml/opam-repository/issues\"\nauthors: [\"Maas-Maarten Zeeman\" \"Sylvain Le Gall\"]\nhomepage: \"http://ounit.forge.ocamlcore.org\"\ndoc: \"http://ounit.forge.ocamlcore.org/api-ounit/index.html\"\nbug-reports:\n  \"https://forge.ocamlcore.org/tracker/?func=browse&group_id=162&atid=730\"\ndepends: [\n  \"ocaml\" {>= \"3.11.0\"}\n  \"ocamlfind\" {build}\n  \"ocamlbuild\" {build}\n  \"base-bytes\"\n]\nflags: light-uninstall\nbuild: [make \"build\"]\ninstall: [make \"install\"]\nremove: [\"ocamlfind\" \"remove\" \"oUnit\"]\ndev-repo: \"git+https://github.com/gildor478/ounit.git\"\nurl {\n  src: \"https://download.ocamlcore.org/ounit/ounit/2.0.8/ounit-2.0.8.tar.gz\"\n  checksum: \"md5=bd12d66c9dbd95a50570bb686b0f10f5\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-bytes@opam:base",
        "@opam/ocamlbuild@opam:0.14.0", "@opam/ocamlfind@opam:1.8.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/opal@opam:0.1.1": {
      "record": {
        "name": "@opam/opal",
        "version": "opam:0.1.1",
        "source":
          "archive:https://github.com/pyrocat101/opal/archive/v0.1.1.tar.gz#md5:d294e29242d9ac2204dc95bb8d73e61b",
        "files": [],
        "opam": {
          "name": "opal",
          "version": "0.1.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"opal\"\nversion: \"0.1.1\"\nsynopsis: \"Self-contained monadic parser combinators for OCaml\"\ndescription:\n  \"Opal is a minimum collection of useful parsers and combinators (~150 loc of OCaml) that makes writing parsers easier. It is designed to be small, self-contained, pure-functional, and only includes most essential parsers, so that one could include single file in the project or just embed it in other OCaml source code files.\"\nmaintainer: \"Linjie Ding <i@pyroc.at>\"\nauthors: \"Linjie Ding <i@pyroc.at>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/pyrocat101/opal\"\nbug-reports: \"https://github.com/pyrocat101/opal/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.01.0\"}\n  \"ocamlfind\" {build}\n]\nflags: light-uninstall\nbuild: [make \"ncl\" \"bcl\"]\ninstall: [make \"libinstall\"]\nremove: [\"ocamlfind\" \"remove\" \"opal\"]\ndev-repo: \"git+https://github.com/pyrocat101/opal.git\"\nurl {\n  src: \"https://github.com/pyrocat101/opal/archive/v0.1.1.tar.gz\"\n  checksum: \"md5=d294e29242d9ac2204dc95bb8d73e61b\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlfind@opam:1.8.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/octavius@opam:1.2.0": {
      "record": {
        "name": "@opam/octavius",
        "version": "opam:1.2.0",
        "source":
          "archive:https://github.com/ocaml-doc/octavius/archive/v1.2.0.tar.gz#md5:3e6049c39045354853d9dc3a197133ac",
        "files": [],
        "opam": {
          "name": "octavius",
          "version": "1.2.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"octavius\"\nversion: \"1.2.0\"\nsynopsis: \"Ocamldoc comment syntax parser\"\ndescription: \"Octavius is a library to parse the `ocamldoc` comment syntax.\"\nmaintainer: \"leo@lpw25.net\"\nauthors: \"Leo White <leo@lpw25.net>\"\nlicense: \"ISC\"\ntags: [\"doc\" \"ocamldoc\" \"org:ocaml-doc\"]\nhomepage: \"https://github.com/ocaml-doc/octavius\"\ndoc: \"http://ocaml-doc.github.io/octavius/\"\nbug-reports: \"https://github.com/ocaml-doc/octavius/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.03.0\"}\n  \"ocamlfind\" {build}\n  \"jbuilder\" {build & >= \"1.0+beta7\"}\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n]\ndev-repo: \"git+http://github.com/ocaml-doc/octavius.git\"\nurl {\n  src: \"https://github.com/ocaml-doc/octavius/archive/v1.2.0.tar.gz\"\n  checksum: \"md5=3e6049c39045354853d9dc3a197133ac\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "@opam/ocamlfind@opam:1.8.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ocamlmod@opam:0.0.9": {
      "record": {
        "name": "@opam/ocamlmod",
        "version": "opam:0.0.9",
        "source":
          "archive:https://download.ocamlcore.org/ocamlmod/ocamlmod/0.0.9/ocamlmod-0.0.9.tar.gz#md5:b52bfbab6bb77f9736bde9c2fe81c508",
        "files": [
          {
            "name": "ocamlmod.install",
            "content":
              "etc: [\n  \"setup.ml\"\n  \"setup.data\"\n  \"setup.log\"\n  \"_oasis_remove_.ml\"\n]\n"
          },
          {
            "name": "_oasis_remove_.ml",
            "content":
              "open Printf\n\nlet () =\n  let dir = Sys.argv.(1) in\n  (try Sys.chdir dir\n   with _ -> eprintf \"Cannot change directory to %s\\n%!\" dir);\n  exit (Sys.command \"ocaml setup.ml -uninstall\")\n"
          }
        ],
        "opam": {
          "name": "ocamlmod",
          "version": "0.0.9",
          "opam":
            "opam-version: \"2.0\"\nname: \"ocamlmod\"\nversion: \"0.0.9\"\nsynopsis: \"Generate OCaml modules from source files\"\nmaintainer: \"opam-devel@lists.ocaml.org\"\nauthors: \"Sylvain Le Gall\"\nlicense: \"LGPL-2.1 with OCaml linking exception\"\nhomepage: \"https://forge.ocamlcore.org/projects/ocamlmod/\"\nbug-reports: \"https://forge.ocamlcore.org/tracker/?group_id=244\"\ndepends: [\n  \"ocaml\"\n  \"ocamlfind\" {build}\n  \"ounit\" {with-test & >= \"2.0.0\"}\n  \"ocamlbuild\" {build}\n]\nbuild: [\n  [\"ocaml\" \"setup.ml\" \"-configure\" \"--prefix\" prefix]\n  [\"ocaml\" \"setup.ml\" \"-build\"]\n  [\"ocaml\" \"setup.ml\" \"-configure\" \"--enable-tests\"] {with-test}\n  [\"ocaml\" \"setup.ml\" \"-build\"] {with-test}\n  [\"ocaml\" \"setup.ml\" \"-test\"] {with-test}\n]\ninstall: [\"ocaml\" \"setup.ml\" \"-install\"]\nremove: [\"ocaml\" \"%{etc}%/ocamlmod/_oasis_remove_.ml\" \"%{etc}%/ocamlmod\"]\ndev-repo: \"darcs+https://forge.ocamlcore.org/anonscm/darcs/ocamlmod/ocamlmod\"\nextra-files: [\n  [\"ocamlmod.install\" \"md5=0d1b822c897681cf54b3e1aed52dda99\"]\n  [\"_oasis_remove_.ml\" \"md5=6100ca146fa97d2196eb49a2631d0796\"]\n]\nurl {\n  src:\n    \"https://download.ocamlcore.org/ocamlmod/ocamlmod/0.0.9/ocamlmod-0.0.9.tar.gz\"\n  checksum: \"md5=b52bfbab6bb77f9736bde9c2fe81c508\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.14.0",
        "@opam/ocamlfind@opam:1.8.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ocamlify@opam:0.0.1": {
      "record": {
        "name": "@opam/ocamlify",
        "version": "opam:0.0.1",
        "source":
          "archive:https://download.ocamlcore.org/ocamlify/ocamlify/0.0.1/ocamlify-0.0.1.tar.gz#md5:bcd97ad0f7203019019997197451dbf0",
        "files": [
          {
            "name": "ocamlify.install",
            "content": "bin: [\"_build/src/ocamlify\"]\n"
          },
          {
            "name": "esy-fix.patch",
            "content":
              "--- ./setup.ml\n+++ ./setup.ml\n@@ -4670,9 +4670,7 @@\n           [\n             \"-classic-display\"; \n             \"-no-log\"; \n-            \"-no-links\";\n-            \"-install-lib-dir\"; \n-            (Filename.concat (standard_library ()) \"ocamlbuild\")\n+            \"-no-links\"\n           ] \n         else\n           [];\n"
          }
        ],
        "opam": {
          "name": "ocamlify",
          "version": "0.0.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"ocamlify\"\nversion: \"0.0.1\"\nsynopsis: \"Include files in OCaml code\"\ndescription: \"\"\"\nOCamlify allows to create OCaml source code by including whole files\ninto OCaml string or string list. The code generated can be compiled\nas a standard OCaml file. It allows embedding external resources as\nOCaml code.\"\"\"\nmaintainer: \"https://github.com/ocaml/opam-repository/issues\"\ndepends: [\n  \"ocaml\"\n  \"ocamlfind\"\n  \"ocamlbuild\" {build}\n]\nbuild: [\n  [\"ocaml\" \"setup.ml\" \"-configure\" \"--prefix\" prefix]\n  [\"ocaml\" \"setup.ml\" \"-build\"]\n]\ninstall: [\"ocaml\" \"setup.ml\" \"-install\"]\nextra-files: [\"ocamlify.install\" \"md5=5ae3ee90457ab5a6051136a36885c67e\"]\nurl {\n  src:\n    \"https://download.ocamlcore.org/ocamlify/ocamlify/0.0.1/ocamlify-0.0.1.tar.gz\"\n  checksum: \"md5=bcd97ad0f7203019019997197451dbf0\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < esy-fix.patch' : 'true'}"
              ],
              [
                "ocaml", "setup.ml", "-configure", "--prefix",
                "#{self.install}"
              ],
              [ "ocaml", "setup.ml", "-build" ]
            ],
            "install": [ [ "ocaml", "setup.ml", "-install" ] ]
          }
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.14.0",
        "@opam/ocamlfind@opam:1.8.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/ocamlfind@opam:1.8.0": {
      "record": {
        "name": "@opam/ocamlfind",
        "version": "opam:1.8.0",
        "source": [
          "archive:http://download.camlcity.org/download/findlib-1.8.0.tar.gz#md5:a710c559667672077a93d34eb6a42e5b",
          "archive:http://download2.camlcity.org/download/findlib-1.8.0.tar.gz#md5:a710c559667672077a93d34eb6a42e5b"
        ],
        "files": [
          {
            "name": "ocaml-stub",
            "content":
              "#!/bin/sh\n\nBINDIR=$(dirname \"$(command -v ocamlc)\")\n\"$BINDIR/ocaml\" -I \"$OCAML_TOPLEVEL_PATH\" \"$@\"\n"
          },
          {
            "name": "ocamlfind.install",
            "content":
              "bin: [\n  \"src/findlib/ocamlfind\" {\"ocamlfind\"}\n  \"?src/findlib/ocamlfind_opt\" {\"ocamlfind\"}\n  \"?tools/safe_camlp4\"\n]\ntoplevel: [\"src/findlib/topfind\"]\n"
          },
          {
            "name": "findlib-1.8.0.patch",
            "content":
              "--- ./Makefile\n+++ ./Makefile\n@@ -57,16 +57,16 @@\n \tcat findlib.conf.in | \\\n \t    $(SH) tools/patch '@SITELIB@' '$(OCAML_SITELIB)' >findlib.conf\n \tif ./tools/cmd_from_same_dir ocamlc; then \\\n-\t\techo 'ocamlc=\"ocamlc.opt\"' >>findlib.conf; \\\n+\t\techo 'ocamlc=\"ocamlc.opt$(EXEC_SUFFIX)\"' >>findlib.conf; \\\n \tfi\n \tif ./tools/cmd_from_same_dir ocamlopt; then \\\n-\t\techo 'ocamlopt=\"ocamlopt.opt\"' >>findlib.conf; \\\n+\t\techo 'ocamlopt=\"ocamlopt.opt$(EXEC_SUFFIX)\"' >>findlib.conf; \\\n \tfi\n \tif ./tools/cmd_from_same_dir ocamldep; then \\\n-\t\techo 'ocamldep=\"ocamldep.opt\"' >>findlib.conf; \\\n+\t\techo 'ocamldep=\"ocamldep.opt$(EXEC_SUFFIX)\"' >>findlib.conf; \\\n \tfi\n \tif ./tools/cmd_from_same_dir ocamldoc; then \\\n-\t\techo 'ocamldoc=\"ocamldoc.opt\"' >>findlib.conf; \\\n+\t\techo 'ocamldoc=\"ocamldoc.opt$(EXEC_SUFFIX)\"' >>findlib.conf; \\\n \tfi\n \n .PHONY: install-doc\n--- ./src/findlib/findlib_config.mlp\n+++ ./src/findlib/findlib_config.mlp\n@@ -24,3 +24,5 @@\n     | \"MacOS\" -> \"\"        (* don't know *)\n     | _ -> failwith \"Unknown Sys.os_type\"\n ;;\n+\n+let exec_suffix = \"@EXEC_SUFFIX@\";;\n--- ./src/findlib/findlib.ml\n+++ ./src/findlib/findlib.ml\n@@ -28,15 +28,20 @@\n let conf_ldconf = ref \"\";;\n let conf_ignore_dups_in = ref ([] : string list);;\n \n-let ocamlc_default = \"ocamlc\";;\n-let ocamlopt_default = \"ocamlopt\";;\n-let ocamlcp_default = \"ocamlcp\";;\n-let ocamloptp_default = \"ocamloptp\";;\n-let ocamlmklib_default = \"ocamlmklib\";;\n-let ocamlmktop_default = \"ocamlmktop\";;\n-let ocamldep_default = \"ocamldep\";;\n-let ocamlbrowser_default = \"ocamlbrowser\";;\n-let ocamldoc_default = \"ocamldoc\";;\n+let add_exec str =\n+  match Findlib_config.exec_suffix with\n+  | \"\" -> str\n+  | a  -> str ^ a ;;\n+let ocamlc_default = add_exec \"ocamlc\";;\n+let ocamlopt_default = add_exec \"ocamlopt\";;\n+let ocamlcp_default = add_exec \"ocamlcp\";;\n+let ocamloptp_default = add_exec \"ocamloptp\";;\n+let ocamlmklib_default = add_exec \"ocamlmklib\";;\n+let ocamlmktop_default = add_exec \"ocamlmktop\";;\n+let ocamldep_default = add_exec \"ocamldep\";;\n+let ocamlbrowser_default = add_exec \"ocamlbrowser\";;\n+let ocamldoc_default = add_exec \"ocamldoc\";;\n+\n \n \n let init_manually \n--- ./src/findlib/fl_package_base.ml\n+++ ./src/findlib/fl_package_base.ml\n@@ -133,7 +133,15 @@\n \t  List.find (fun def -> def.def_var = \"exists_if\") p.package_defs  in\n \tlet files = Fl_split.in_words def.def_value in\n \tList.exists \n-\t  (fun file -> Sys.file_exists (Filename.concat d' file))\n+\t  (fun file ->\n+            let fln = Filename.concat d' file in\n+            let e = Sys.file_exists fln in\n+            (* necessary for ppx executables *)\n+            if e || Sys.os_type <> \"Win32\" || Filename.check_suffix fln \".exe\" then\n+              e\n+            else\n+              Sys.file_exists (fln ^ \".exe\")\n+          )\n \t  files\n       with Not_found -> true in\n \n--- ./src/findlib/fl_split.ml\n+++ ./src/findlib/fl_split.ml\n@@ -126,10 +126,17 @@\n     | '/' | '\\\\' -> true\n     | _ -> false in\n   let norm_dir_win() =\n-    if l >= 1 && s.[0] = '/' then\n-      Buffer.add_char b '\\\\' else Buffer.add_char b s.[0];\n-    if l >= 2 && s.[1] = '/' then\n-      Buffer.add_char b '\\\\' else Buffer.add_char b s.[1];\n+    if l >= 1 then (\n+      if s.[0] = '/' then\n+        Buffer.add_char b '\\\\'\n+      else\n+        Buffer.add_char b s.[0] ;\n+      if l >= 2 then\n+        if s.[1] = '/' then\n+          Buffer.add_char b '\\\\'\n+        else\n+          Buffer.add_char b s.[1];\n+    );\n     for k = 2 to l - 1 do\n       let c = s.[k] in\n       if is_slash c then (\n--- ./src/findlib/frontend.ml\n+++ ./src/findlib/frontend.ml\n@@ -31,10 +31,18 @@\n   else\n     Sys_error (arg ^ \": \" ^ Unix.error_message code)\n \n+let is_win = Sys.os_type = \"Win32\"\n+\n+let () =\n+  match Findlib_config.system with\n+    | \"win32\" | \"win64\" | \"mingw\" | \"cygwin\" | \"mingw64\" | \"cygwin64\" ->\n+      (try set_binary_mode_out stdout true with _ -> ());\n+      (try set_binary_mode_out stderr true with _ -> ());\n+    | _ -> ()\n \n let slashify s =\n   match Findlib_config.system with\n-    | \"mingw\" | \"mingw64\" | \"cygwin\" ->\n+    | \"win32\" | \"win64\" | \"mingw\" | \"cygwin\" | \"mingw64\" | \"cygwin64\" ->\n         let b = Buffer.create 80 in\n         String.iter\n           (function\n@@ -49,7 +57,7 @@\n \n let out_path ?(prefix=\"\") s =\n   match Findlib_config.system with\n-    | \"mingw\" | \"mingw64\" | \"cygwin\" ->\n+   | \"win32\" | \"win64\" | \"mingw\" | \"mingw64\" | \"cygwin\" ->\n \tlet u = slashify s in\n \tprefix ^ \n \t  (if String.contains u ' ' then\n@@ -273,11 +281,9 @@\n \n \n let identify_dir d =\n-  match Sys.os_type with\n-    | \"Win32\" ->\n-\tfailwith \"identify_dir\"   (* not available *)\n-    | _ ->\n-\tlet s = Unix.stat d in\n+  if is_win then\n+    failwith \"identify_dir\";   (* not available *)\n+  let s = Unix.stat d in\n \t(s.Unix.st_dev, s.Unix.st_ino)\n ;;\n \n@@ -459,6 +465,96 @@\n       )\n       packages\n \n+let rewrite_cmd s =\n+  if s = \"\" || not is_win then\n+    s\n+  else\n+    let s =\n+      let l = String.length s in\n+      let b = Buffer.create l in\n+      for i = 0 to pred l do\n+        match s.[i] with\n+        | '/' -> Buffer.add_char b '\\\\'\n+        | x -> Buffer.add_char b x\n+      done;\n+      Buffer.contents b\n+    in\n+    if (Filename.is_implicit s && String.contains s '\\\\' = false) ||\n+      Filename.check_suffix (String.lowercase s) \".exe\" then\n+      s\n+    else\n+      let s' = s ^ \".exe\" in\n+      if Sys.file_exists s' then\n+        s'\n+      else\n+        s\n+\n+let rewrite_cmd s =\n+  if s = \"\" || not is_win then s else\n+  let s =\n+    let l = String.length s in\n+    let b = Buffer.create l in\n+    for i = 0 to pred l do\n+      match s.[i] with\n+      | '/' -> Buffer.add_char b '\\\\'\n+      | x -> Buffer.add_char b x\n+    done;\n+    Buffer.contents b\n+  in\n+  if (Filename.is_implicit s && String.contains s '\\\\' = false) ||\n+     Filename.check_suffix (String.lowercase s) \".exe\" then\n+    s\n+  else\n+    let s' = s ^ \".exe\" in\n+    if Sys.file_exists s' then\n+      s'\n+    else\n+      s\n+\n+let rewrite_pp cmd =\n+  if not is_win then cmd else\n+  let module T = struct exception Keep end in\n+  let is_whitespace = function\n+  | ' ' | '\\011' | '\\012' | '\\n' | '\\r' | '\\t' -> true\n+  | _ -> false in\n+  (* characters that triggers special behaviour (cmd.exe, not unix shell) *)\n+  let is_unsafe_char = function\n+  | '(' | ')' | '%' | '!' | '^' | '<' | '>' | '&' -> true\n+  | _ -> false in\n+  let len = String.length cmd in\n+  let buf = Buffer.create (len + 4) in\n+  let buf_cmd = Buffer.create len in\n+  let rec iter_ws i =\n+    if i >= len then () else\n+    let cur = cmd.[i] in\n+    if is_whitespace cur then (\n+      Buffer.add_char buf cur;\n+      iter_ws (succ i)\n+    )\n+    else\n+      iter_cmd i\n+  and iter_cmd i =\n+    if i >= len then add_buf_cmd () else\n+    let cur = cmd.[i] in\n+    if is_unsafe_char cur || cur = '\"' || cur = '\\'' then\n+      raise T.Keep;\n+    if is_whitespace cur then (\n+      add_buf_cmd ();\n+      Buffer.add_substring buf cmd i (len - i)\n+    )\n+    else (\n+      Buffer.add_char buf_cmd cur;\n+      iter_cmd (succ i)\n+    )\n+  and add_buf_cmd () =\n+    if Buffer.length buf_cmd > 0 then\n+      Buffer.add_string buf (rewrite_cmd (Buffer.contents buf_cmd))\n+  in\n+  try\n+    iter_ws 0;\n+    Buffer.contents buf\n+  with\n+  | T.Keep -> cmd\n \n let process_pp_spec syntax_preds packages pp_opts =\n   (* Returns: pp_command *)\n@@ -549,7 +645,7 @@\n       None -> []\n     | Some cmd ->\n \t[\"-pp\";\n-\t cmd ^ \" \" ^\n+\t (rewrite_cmd cmd) ^ \" \" ^\n \t String.concat \" \" (List.map Filename.quote pp_i_options) ^ \" \" ^\n \t String.concat \" \" (List.map Filename.quote pp_archives) ^ \" \" ^\n \t String.concat \" \" (List.map Filename.quote pp_opts)]\n@@ -625,9 +721,11 @@\n           in\n           try\n             let preprocessor =\n+              rewrite_cmd (\n               resolve_path\n                 ~base ~explicit:true\n-                (package_property predicates pname \"ppx\") in\n+                  (package_property predicates pname \"ppx\") )\n+            in\n             [\"-ppx\"; String.concat \" \" (preprocessor :: options)]\n           with Not_found -> []\n        )\n@@ -895,6 +993,14 @@\n        switch (e.g. -L<path> instead of -L <path>)\n      *)\n \n+(* We may need to remove files on which we do not have complete control.\n+   On Windows, removing a read-only file fails so try to change the\n+   mode of the file first. *)\n+let remove_file fname =\n+  try Sys.remove fname\n+  with Sys_error _ when is_win ->\n+    (try Unix.chmod fname 0o666 with Unix.Unix_error _ -> ());\n+    Sys.remove fname\n \n let ocamlc which () =\n \n@@ -1022,9 +1128,12 @@\n               \n \t      \"-intf\", \n \t      Arg.String (fun s -> pass_files := !pass_files @ [ Intf(slashify s) ]);\n-              \n+\n \t      \"-pp\", \n-\t      Arg.String (fun s -> pp_specified := true; add_spec_fn \"-pp\" s);\n+\t      Arg.String (fun s -> pp_specified := true; add_spec_fn \"-pp\" (rewrite_pp s));\n+\n+              \"-ppx\",\n+              Arg.String (fun s -> add_spec_fn \"-ppx\" (rewrite_pp s));\n \t      \n \t      \"-thread\", \n \t      Arg.Unit (fun _ -> threads := threads_default);\n@@ -1237,7 +1346,7 @@\n     with\n       any ->\n \tclose_out initl;\n-\tSys.remove initl_file_name;\n+\tremove_file initl_file_name;\n \traise any\n   end;\n \n@@ -1245,9 +1354,9 @@\n     at_exit\n       (fun () ->\n \tlet tr f x = try f x with _ -> () in\n-\ttr Sys.remove initl_file_name;\n-\ttr Sys.remove (Filename.chop_extension initl_file_name ^ \".cmi\");\n-\ttr Sys.remove (Filename.chop_extension initl_file_name ^ \".cmo\");\n+\ttr remove_file initl_file_name;\n+\ttr remove_file (Filename.chop_extension initl_file_name ^ \".cmi\");\n+\ttr remove_file (Filename.chop_extension initl_file_name ^ \".cmo\");\n       );\n \n   let exclude_list = [ stdlibdir; threads_dir; vmthreads_dir ] in\n@@ -1493,7 +1602,9 @@\n \t  [ \"-v\", Arg.Unit (fun () -> verbose := Verbose);\n \t    \"-pp\", Arg.String (fun s ->\n \t\t\t\t pp_specified := true;\n-\t\t\t\t options := !options @ [\"-pp\"; s]);\n+\t\t\t\t options := !options @ [\"-pp\"; rewrite_pp s]);\n+            \"-ppx\", Arg.String (fun s ->\n+\t\t\t\t options := !options @ [\"-ppx\"; rewrite_pp s]);\n \t  ]\n       )\n     )\n@@ -1672,7 +1783,9 @@\n \t      Arg.String (fun s -> add_spec_fn \"-I\" (slashify (resolve_path s)));\n \n \t      \"-pp\", Arg.String (fun s -> pp_specified := true;\n-\t\t \t           add_spec_fn \"-pp\" s);\n+                           add_spec_fn \"-pp\" (rewrite_pp s));\n+              \"-ppx\", Arg.String (fun s -> add_spec_fn \"-ppx\" (rewrite_pp s));\n+\n \t    ]\n \t)\n     )\n@@ -1830,7 +1943,10 @@\n       output_string ch_out append;\n       close_out ch_out;\n       close_in ch_in;\n-      Unix.utimes outpath s.Unix.st_mtime s.Unix.st_mtime;\n+      (try Unix.utimes outpath s.Unix.st_mtime s.Unix.st_mtime\n+       with Unix.Unix_error(e,_,_) ->\n+         prerr_endline(\"Warning: setting utimes for \" ^ outpath\n+                       ^ \": \" ^ Unix.error_message e));\n \n       prerr_endline(\"Installed \" ^ outpath);\n     with\n@@ -1882,6 +1998,8 @@\n              Unix.openfile (Filename.concat dir owner_file) [Unix.O_RDONLY] 0 in\n            let f =\n              Unix.in_channel_of_descr fd in\n+           if is_win then\n+             set_binary_mode_in f false;\n            try\n              let line = input_line f in\n              let is_my_file = (line = pkg) in\n@@ -2208,7 +2326,7 @@\n     let lines = read_ldconf !ldconf in\n     let dlldir_norm = Fl_split.norm_dir dlldir in\n     let dlldir_norm_lc = string_lowercase_ascii dlldir_norm in\n-    let ci_filesys = (Sys.os_type = \"Win32\") in\n+    let ci_filesys = is_win in\n     let check_dir d =\n       let d' = Fl_split.norm_dir d in\n       (d' = dlldir_norm) || \n@@ -2356,7 +2474,7 @@\n       List.iter\n         (fun file ->\n            let absfile = Filename.concat dlldir file in\n-           Sys.remove absfile;\n+           remove_file absfile;\n            prerr_endline (\"Removed \" ^ absfile)\n         )\n         dll_files\n@@ -2365,7 +2483,7 @@\n     (* Remove the files from the package directory: *)\n     if Sys.file_exists pkgdir then begin\n       let files = Sys.readdir pkgdir in\n-      Array.iter (fun f -> Sys.remove (Filename.concat pkgdir f)) files;\n+      Array.iter (fun f -> remove_file (Filename.concat pkgdir f)) files;\n       Unix.rmdir pkgdir;\n       prerr_endline (\"Removed \" ^ pkgdir)\n     end\n@@ -2415,7 +2533,9 @@\n \n \n let print_configuration() =\n+  let sl = slashify in\n   let dir s =\n+    let s = sl s in\n     if Sys.file_exists s then\n       s\n     else\n@@ -2453,27 +2573,27 @@\n \t   if md = \"\" then \"the corresponding package directories\" else dir md\n \t  );\n \tPrintf.printf \"The standard library is assumed to reside in:\\n    %s\\n\"\n-\t  (Findlib.ocaml_stdlib());\n+    (sl (Findlib.ocaml_stdlib()));\n \tPrintf.printf \"The ld.conf file can be found here:\\n    %s\\n\"\n-\t  (Findlib.ocaml_ldconf());\n+    (sl (Findlib.ocaml_ldconf()));\n \tflush stdout\n     | Some \"conf\" ->\n-\tprint_endline Findlib_config.config_file\n+  print_endline (sl Findlib_config.config_file)\n     | Some \"path\" ->\n-\tList.iter print_endline (Findlib.search_path())\n+  List.iter ( fun x -> print_endline (sl x)) (Findlib.search_path())\n     | Some \"destdir\" ->\n-\tprint_endline (Findlib.default_location())\n+  print_endline ( sl (Findlib.default_location()))\n     | Some \"metadir\" ->\n-\tprint_endline (Findlib.meta_directory())\n+  print_endline ( sl (Findlib.meta_directory()))\n     | Some \"metapath\" ->\n         let mdir = Findlib.meta_directory() in\n         let ddir = Findlib.default_location() in\n-\tprint_endline \n-          (if mdir <> \"\" then mdir ^ \"/META.%s\" else ddir ^ \"/%s/META\")\n+  print_endline ( sl\n+          (if mdir <> \"\" then mdir ^ \"/META.%s\" else ddir ^ \"/%s/META\"))\n     | Some \"stdlib\" ->\n-\tprint_endline (Findlib.ocaml_stdlib())\n+  print_endline ( sl (Findlib.ocaml_stdlib()))\n     | Some \"ldconf\" ->\n-\tprint_endline (Findlib.ocaml_ldconf())\n+  print_endline ( sl (Findlib.ocaml_ldconf()))\n     | _ ->\n \tassert false\n ;;\n@@ -2481,7 +2601,7 @@\n \n let ocamlcall pkg cmd =\n   let dir = package_directory pkg in\n-  let path = Filename.concat dir cmd in\n+  let path = rewrite_cmd (Filename.concat dir cmd) in\n   begin\n     try Unix.access path [ Unix.X_OK ]\n     with\n@@ -2647,6 +2767,10 @@\n   | Sys_error f ->\n       prerr_endline (\"ocamlfind: \" ^ f);\n       exit 2\n+  | Unix.Unix_error (e, fn, f) ->\n+      prerr_endline (\"ocamlfind: \" ^ fn ^ \" \" ^ f\n+                     ^ \": \" ^ Unix.error_message e);\n+      exit 2\n   | Findlib.No_such_package(pkg,info) ->\n       prerr_endline (\"ocamlfind: Package `\" ^ pkg ^ \"' not found\" ^\n \t\t     (if info <> \"\" then \" - \" ^ info else \"\"));\n--- ./src/findlib/Makefile\n+++ ./src/findlib/Makefile\n@@ -90,6 +90,7 @@\n \tcat findlib_config.mlp | \\\n \t        $(SH) $(TOP)/tools/patch '@CONFIGFILE@' '$(OCAMLFIND_CONF)' | \\\n \t        $(SH) $(TOP)/tools/patch '@STDLIB@' '$(OCAML_CORE_STDLIB)' | \\\n+\t\t\t$(SH) $(TOP)/tools/patch '@EXEC_SUFFIX@' '$(EXEC_SUFFIX)' | \\\n \t\tsed -e 's;@AUTOLINK@;$(OCAML_AUTOLINK);g' \\\n \t\t    -e 's;@SYSTEM@;$(SYSTEM);g' \\\n \t\t     >findlib_config.ml\n@@ -113,7 +114,7 @@\n \t$(OCAMLC) -a -o num_top.cma $(NUMTOP_OBJECTS)\n \n clean:\n-\trm -f *.cmi *.cmo *.cma *.cmx *.a *.o *.cmxa \\\n+\trm -f *.cmi *.cmo *.cma *.cmx *.lib *.a *.o *.cmxa \\\n \t  fl_meta.ml findlib_config.ml findlib.mml topfind.ml topfind \\\n \t  ocamlfind$(EXEC_SUFFIX) ocamlfind_opt$(EXEC_SUFFIX)\n \n@@ -121,7 +122,7 @@\n \tmkdir -p \"$(prefix)$(OCAML_SITELIB)/$(NAME)\"\n \tmkdir -p \"$(prefix)$(OCAMLFIND_BIN)\"\n \ttest $(INSTALL_TOPFIND) -eq 0 || cp topfind \"$(prefix)$(OCAML_CORE_STDLIB)\"\n-\tfiles=`$(SH) $(TOP)/tools/collect_files $(TOP)/Makefile.config findlib.cmi findlib.mli findlib.cma findlib.cmxa findlib.a findlib.cmxs topfind.cmi topfind.mli fl_package_base.mli fl_package_base.cmi fl_metascanner.mli fl_metascanner.cmi fl_metatoken.cmi findlib_top.cma findlib_top.cmxa findlib_top.a findlib_top.cmxs findlib_dynload.cma findlib_dynload.cmxa findlib_dynload.a findlib_dynload.cmxs fl_dynload.mli fl_dynload.cmi META` && \\\n+\tfiles=`$(SH) $(TOP)/tools/collect_files $(TOP)/Makefile.config findlib.cmi findlib.mli findlib.cma findlib.cmxa findlib$(LIB_SUFFIX) findlib.cmxs topfind.cmi topfind.mli fl_package_base.mli fl_package_base.cmi fl_metascanner.mli fl_metascanner.cmi fl_metatoken.cmi findlib_top.cma findlib_top.cmxa findlib_top$(LIB_SUFFIX) findlib_top.cmxs findlib_dynload.cma findlib_dynload.cmxa findlib_dynload$(LIB_SUFFIX) findlib_dynload.cmxs fl_dynload.mli fl_dynload.cmi META` && \\\n \tcp $$files \"$(prefix)$(OCAML_SITELIB)/$(NAME)\"\n \tf=\"ocamlfind$(EXEC_SUFFIX)\"; { test -f ocamlfind_opt$(EXEC_SUFFIX) && f=\"ocamlfind_opt$(EXEC_SUFFIX)\"; }; \\\n \tcp $$f \"$(prefix)$(OCAMLFIND_BIN)/ocamlfind$(EXEC_SUFFIX)\"\n"
          }
        ],
        "opam": {
          "name": "ocamlfind",
          "version": "1.8.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ocamlfind\"\nversion: \"1.8.0\"\nsynopsis: \"A library manager for OCaml\"\ndescription: \"\"\"\nFindlib is a library manager for OCaml. It provides a convention how\nto store libraries, and a file format (\"META\") to describe the\nproperties of libraries. There is also a tool (ocamlfind) for\ninterpreting the META files, so that it is very easy to use libraries\nin programs and scripts.\"\"\"\nmaintainer: \"Thomas Gazagnaire <thomas@gazagnaire.org>\"\nauthors: \"Gerd Stolpmann <gerd@gerd-stolpmann.de>\"\nhomepage: \"http://projects.camlcity.org/projects/findlib.html\"\nbug-reports: \"https://gitlab.camlcity.org/gerd/lib-findlib/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.00.0\"}\n  \"conf-m4\" {build}\n]\nbuild: [\n  [\n    \"./configure\"\n    \"-bindir\"\n    bin\n    \"-sitelib\"\n    lib\n    \"-mandir\"\n    man\n    \"-config\"\n    \"%{lib}%/findlib.conf\"\n    \"-no-custom\"\n    \"-no-topfind\" {ocaml:preinstalled}\n  ]\n  [make \"all\"]\n  [make \"opt\"] {ocaml:native}\n]\ninstall: [\n  [make \"install\"]\n  [\"install\" \"-m\" \"0755\" \"ocaml-stub\" \"%{bin}%/ocaml\"] {ocaml:preinstalled}\n]\nremove: [\n  [\"ocamlfind\" \"remove\" \"bytes\"]\n  [\n    \"./configure\"\n    \"-bindir\"\n    bin\n    \"-sitelib\"\n    lib\n    \"-mandir\"\n    man\n    \"-config\"\n    \"%{lib}%/findlib.conf\"\n    \"-no-topfind\" {ocaml:preinstalled}\n  ]\n  [make \"uninstall\"]\n  [\"rm\" \"-f\" \"%{bin}%/ocaml\"] {ocaml:preinstalled}\n]\ndev-repo: \"git+https://gitlab.camlcity.org/gerd/lib-findlib.git\"\nextra-files: [\n  [\"ocamlfind.install\" \"md5=06f2c282ab52d93aa6adeeadd82a2543\"]\n  [\"ocaml-stub\" \"md5=181f259c9e0bad9ef523e7d4abfdf87a\"]\n]\nurl {\n  src: \"http://download.camlcity.org/download/findlib-1.8.0.tar.gz\"\n  checksum: \"md5=a710c559667672077a93d34eb6a42e5b\"\n  mirrors: \"http://download2.camlcity.org/download/findlib-1.8.0.tar.gz\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < findlib-1.8.0.patch' : 'true'}"
              ],
              [
                "./configure", "-bindir", "#{self.bin}", "-sitelib",
                "#{self.lib}", "-mandir", "#{self.man}", "-config",
                "#{self.lib}/findlib.conf", "-no-custom", "-no-topfind"
              ],
              [ "make", "all" ],
              [ "make", "opt" ]
            ],
            "install": [
              [ "make", "install" ],
              [ "install", "-m", "0755", "ocaml-stub", "#{self.bin}/ocaml" ],
              [ "mkdir", "-p", "#{self.toplevel}" ],
              [
                "install", "-m", "0644", "src/findlib/topfind",
                "#{self.toplevel}/topfind"
              ]
            ],
            "exportedEnv": {
              "OCAML_TOPLEVEL_PATH": {
                "val": "#{self.toplevel}",
                "scope": "global",
                "exclusive": false
              }
            }
          }
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/conf-m4@opam:1", "ocaml@4.7.1004"
      ]
    },
    "@opam/ocamlbuild@opam:0.14.0": {
      "record": {
        "name": "@opam/ocamlbuild",
        "version": "opam:0.14.0",
        "source":
          "archive:https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz#sha256:87b29ce96958096c0a1a8eeafeb6268077b2d11e1bf2b3de0f5ebc9cf8d42e78",
        "files": [
          {
            "name": "ocamlbuild-0.14.0.patch",
            "content":
              "--- ./Makefile\n+++ ./Makefile\n@@ -213,7 +213,7 @@\n \trm -f man/ocamlbuild.1\n \n man/options_man.byte: src/ocamlbuild_pack.cmo\n-\t$(OCAMLC) $^ -I src man/options_man.ml -o man/options_man.byte\n+\t$(OCAMLC) -I +unix unix.cma $^ -I src man/options_man.ml -o man/options_man.byte\n \n clean::\n \trm -f man/options_man.cm*\n--- ./src/command.ml\n+++ ./src/command.ml\n@@ -148,9 +148,10 @@\n   let self = string_of_command_spec_with_calls call_with_tags call_with_target resolve_virtuals in\n   let b = Buffer.create 256 in\n   (* The best way to prevent bash from switching to its windows-style\n-   * quote-handling is to prepend an empty string before the command name. *)\n+   * quote-handling is to prepend an empty string before the command name.\n+   * space seems to work, too - and the ouput is nicer *)\n   if Sys.os_type = \"Win32\" then\n-    Buffer.add_string b \"''\";\n+    Buffer.add_char b ' ';\n   let first = ref true in\n   let put_space () =\n     if !first then\n@@ -260,7 +261,7 @@\n \n let execute_many ?(quiet=false) ?(pretend=false) cmds =\n   add_parallel_stat (List.length cmds);\n-  let degraded = !*My_unix.is_degraded || Sys.os_type = \"Win32\" in\n+  let degraded = !*My_unix.is_degraded in\n   let jobs = !jobs in\n   if jobs < 0 then invalid_arg \"jobs < 0\";\n   let max_jobs = if jobs = 0 then None else Some jobs in\n--- ./src/findlib.ml\n+++ ./src/findlib.ml\n@@ -66,9 +66,6 @@\n     (fun command -> lexer & Lexing.from_string & run_and_read command)\n     command\n \n-let run_and_read command =\n-  Printf.ksprintf run_and_read command\n-\n let rec query name =\n   try\n     Hashtbl.find packages name\n@@ -135,7 +132,8 @@\n   with Not_found -> s\n \n let list () =\n-  List.map before_space (split_nl & run_and_read \"%s list\" ocamlfind)\n+  let cmd = Shell.quote_filename_if_needed ocamlfind ^ \" list\" in\n+  List.map before_space (split_nl & run_and_read cmd)\n \n (* The closure algorithm is easy because the dependencies are already closed\n and sorted for each package. We only have to make the union. We could also\n--- ./src/main.ml\n+++ ./src/main.ml\n@@ -162,6 +162,9 @@\n               Tags.mem \"traverse\" tags\n               || List.exists (Pathname.is_prefix path_name) !Options.include_dirs\n               || List.exists (Pathname.is_prefix path_name) target_dirs)\n+            && ((* beware: !Options.build_dir is an absolute directory *)\n+              Pathname.normalize !Options.build_dir\n+              <> Pathname.normalize (Pathname.pwd/path_name))\n           end\n         end\n       end\n--- ./src/my_std.ml\n+++ ./src/my_std.ml\n@@ -271,13 +271,107 @@\n       try Array.iter (fun x -> if x = basename then raise Exit) a; false\n       with Exit -> true\n \n+let command_plain = function\n+| [| |] -> 0\n+| margv ->\n+  let rec waitpid a b =\n+    match Unix.waitpid a b with\n+    | exception (Unix.Unix_error(Unix.EINTR,_,_)) -> waitpid a b\n+    | x -> x\n+  in\n+  let pid = Unix.(create_process margv.(0) margv stdin stdout stderr) in\n+  let pid', process_status = waitpid [] pid in\n+  assert (pid = pid');\n+  match process_status with\n+  | Unix.WEXITED n -> n\n+  | Unix.WSIGNALED _ -> 2 (* like OCaml's uncaught exceptions *)\n+  | Unix.WSTOPPED _ -> 127\n+\n+(* can't use Lexers because of circular dependency *)\n+let split_path_win str =\n+  let rec aux pos =\n+    try\n+      let i = String.index_from str pos ';' in\n+      let len = i - pos in\n+      if len = 0 then\n+        aux (succ i)\n+      else\n+        String.sub str pos (i - pos) :: aux (succ i)\n+    with Not_found | Invalid_argument _ ->\n+      let len = String.length str - pos in\n+      if len = 0 then [] else [String.sub str pos len]\n+  in\n+  aux 0\n+\n+let windows_shell = lazy begin\n+  let rec iter = function\n+  | [] -> [| \"bash.exe\" ; \"--norc\" ; \"--noprofile\" |]\n+  | hd::tl ->\n+    let dash = Filename.concat hd \"dash.exe\" in\n+    if Sys.file_exists dash then [|dash|] else\n+    let bash = Filename.concat hd \"bash.exe\" in\n+    if Sys.file_exists bash = false then iter tl else\n+    (* if sh.exe and bash.exe exist in the same dir, choose sh.exe *)\n+    let sh = Filename.concat hd \"sh.exe\" in\n+    if Sys.file_exists sh then [|sh|] else [|bash ; \"--norc\" ; \"--noprofile\"|]\n+  in\n+  split_path_win (try Sys.getenv \"PATH\" with Not_found -> \"\") |> iter\n+end\n+\n+let prep_windows_cmd cmd =\n+  (* workaround known ocaml bug, remove later *)\n+  if String.contains cmd '\\t' && String.contains cmd ' ' = false then\n+    \" \" ^ cmd\n+  else\n+    cmd\n+\n+let run_with_shell = function\n+| \"\" -> 0\n+| cmd ->\n+  let cmd = prep_windows_cmd cmd in\n+  let shell = Lazy.force windows_shell in\n+  let qlen = Filename.quote cmd |> String.length in\n+  (* old versions of dash had problems with bs *)\n+  try\n+    if qlen < 7_900 then\n+      command_plain (Array.append shell [| \"-ec\" ; cmd |])\n+    else begin\n+      (* it can still work, if the called command is a cygwin tool *)\n+      let ch_closed = ref false in\n+      let file_deleted = ref false in\n+      let fln,ch =\n+        Filename.open_temp_file\n+          ~mode:[Open_binary]\n+          \"ocamlbuildtmp\"\n+          \".sh\"\n+      in\n+      try\n+        let f_slash = String.map ( fun x -> if x = '\\\\' then '/' else x ) fln in\n+        output_string ch cmd;\n+        ch_closed:= true;\n+        close_out ch;\n+        let ret = command_plain (Array.append shell [| \"-e\" ; f_slash |]) in\n+        file_deleted:= true;\n+        Sys.remove fln;\n+        ret\n+      with\n+      | x ->\n+        if !ch_closed = false then\n+          close_out_noerr ch;\n+        if !file_deleted = false then\n+          (try Sys.remove fln with _ -> ());\n+        raise x\n+    end\n+  with\n+  | (Unix.Unix_error _) as x ->\n+    (* Sys.command doesn't raise an exception, so run_with_shell also won't\n+       raise *)\n+    Printexc.to_string x ^ \":\" ^ cmd |> prerr_endline;\n+    1\n+\n let sys_command =\n-  match Sys.os_type with\n-  | \"Win32\" -> fun cmd ->\n-      if cmd = \"\" then 0 else\n-      let cmd = \"bash --norc -c \" ^ Filename.quote cmd in\n-      Sys.command cmd\n-  | _ -> fun cmd -> if cmd = \"\" then 0 else Sys.command cmd\n+  if Sys.win32 then run_with_shell\n+  else fun cmd -> if cmd = \"\" then 0 else Sys.command cmd\n \n (* FIXME warning fix and use Filename.concat *)\n let filename_concat x y =\n--- ./src/my_std.mli\n+++ ./src/my_std.mli\n@@ -69,3 +69,6 @@\n \n val split_ocaml_version : (int * int * int * string) option\n (** (major, minor, patchlevel, rest) *)\n+\n+val windows_shell : string array Lazy.t\n+val prep_windows_cmd : string -> string\n--- ./src/ocamlbuild_executor.ml\n+++ ./src/ocamlbuild_executor.ml\n@@ -34,6 +34,8 @@\n   job_stdin   : out_channel;\n   job_stderr  : in_channel;\n   job_buffer  : Buffer.t;\n+  job_pid     : int;\n+  job_tmp_file: string option;\n   mutable job_dying : bool;\n };;\n \n@@ -76,6 +78,61 @@\n   in\n   loop 0\n ;;\n+\n+let open_process_full_win cmd env =\n+  let (in_read, in_write) = Unix.pipe () in\n+  let (out_read, out_write) = Unix.pipe () in\n+  let (err_read, err_write) = Unix.pipe () in\n+  Unix.set_close_on_exec in_read;\n+  Unix.set_close_on_exec out_write;\n+  Unix.set_close_on_exec err_read;\n+  let inchan = Unix.in_channel_of_descr in_read in\n+  let outchan = Unix.out_channel_of_descr out_write in\n+  let errchan = Unix.in_channel_of_descr err_read in\n+  let shell = Lazy.force Ocamlbuild_pack.My_std.windows_shell in\n+  let test_cmd =\n+    String.concat \" \" (List.map Filename.quote (Array.to_list shell)) ^\n+    \"-ec \" ^\n+    Filename.quote (Ocamlbuild_pack.My_std.prep_windows_cmd cmd) in\n+  let argv,tmp_file =\n+    if String.length test_cmd < 7_900 then\n+      Array.append\n+        shell\n+        [| \"-ec\" ; Ocamlbuild_pack.My_std.prep_windows_cmd cmd |],None\n+    else\n+    let fln,ch = Filename.open_temp_file ~mode:[Open_binary] \"ocamlbuild\" \".sh\" in\n+    output_string ch (Ocamlbuild_pack.My_std.prep_windows_cmd cmd);\n+    close_out ch;\n+    let fln' = String.map (function '\\\\' -> '/' | c -> c) fln in\n+    Array.append\n+      shell\n+      [| \"-c\" ; fln' |], Some fln in\n+  let pid =\n+    Unix.create_process_env argv.(0) argv env out_read in_write err_write in\n+  Unix.close out_read;\n+  Unix.close in_write;\n+  Unix.close err_write;\n+  (pid, inchan, outchan, errchan,tmp_file)\n+\n+let close_process_full_win (pid,inchan, outchan, errchan, tmp_file) =\n+  let delete tmp_file =\n+    match tmp_file with\n+    | None -> ()\n+    | Some x -> try Sys.remove x with Sys_error _ -> () in\n+  let tmp_file_deleted = ref false in\n+  try\n+    close_in inchan;\n+    close_out outchan;\n+    close_in errchan;\n+    let res = snd(Unix.waitpid [] pid) in\n+    tmp_file_deleted := true;\n+    delete tmp_file;\n+    res\n+  with\n+  | x when tmp_file <> None && !tmp_file_deleted = false ->\n+    delete tmp_file;\n+    raise x\n+\n (* ***)\n (*** execute *)\n (* XXX: Add test for non reentrancy *)\n@@ -130,10 +187,16 @@\n   (*** add_job *)\n   let add_job cmd rest result id =\n     (*display begin fun oc -> fp oc \"Job %a is %s\\n%!\" print_job_id id cmd; end;*)\n-    let (stdout', stdin', stderr') = open_process_full cmd env in\n+    let (pid,stdout', stdin', stderr', tmp_file) =\n+      if Sys.win32 then open_process_full_win cmd env else\n+      let a,b,c = open_process_full cmd env in\n+      -1,a,b,c,None\n+    in\n     incr jobs_active;\n-    set_nonblock (doi stdout');\n-    set_nonblock (doi stderr');\n+    if not Sys.win32 then (\n+      set_nonblock (doi stdout');\n+      set_nonblock (doi stderr');\n+    );\n     let job =\n       { job_id          = id;\n         job_command     = cmd;\n@@ -143,7 +206,9 @@\n         job_stdin       = stdin';\n         job_stderr      = stderr';\n         job_buffer      = Buffer.create 1024;\n-        job_dying       = false }\n+        job_dying       = false;\n+        job_tmp_file    = tmp_file;\n+        job_pid         = pid }\n     in\n     outputs := FDM.add (doi stdout') job (FDM.add (doi stderr') job !outputs);\n     jobs := JS.add job !jobs;\n@@ -199,6 +264,7 @@\n               try\n                 read fd u 0 (Bytes.length u)\n               with\n+              | Unix.Unix_error(Unix.EPIPE,_,_) when Sys.win32 -> 0\n               | Unix.Unix_error(e,_,_)  ->\n                 let msg = error_message e in\n                 display (fun oc -> fp oc\n@@ -241,14 +307,19 @@\n       decr jobs_active;\n \n       (* PR#5371: we would get EAGAIN below otherwise *)\n-      clear_nonblock (doi job.job_stdout);\n-      clear_nonblock (doi job.job_stderr);\n-\n+      if not Sys.win32 then (\n+        clear_nonblock (doi job.job_stdout);\n+        clear_nonblock (doi job.job_stderr);\n+      );\n       do_read ~loop:true (doi job.job_stdout) job;\n       do_read ~loop:true (doi job.job_stderr) job;\n       outputs := FDM.remove (doi job.job_stdout) (FDM.remove (doi job.job_stderr) !outputs);\n       jobs := JS.remove job !jobs;\n-      let status = close_process_full (job.job_stdout, job.job_stdin, job.job_stderr) in\n+      let status =\n+        if Sys.win32 then\n+          close_process_full_win (job.job_pid, job.job_stdout, job.job_stdin, job.job_stderr, job.job_tmp_file)\n+        else\n+          close_process_full (job.job_stdout, job.job_stdin, job.job_stderr) in\n \n       let shown = ref false in\n \n--- ./src/ocamlbuild_unix_plugin.ml\n+++ ./src/ocamlbuild_unix_plugin.ml\n@@ -48,12 +48,22 @@\n   end\n \n let run_and_open s kont =\n+  let s_orig = s in\n+  let s =\n+    (* Be consistent! My_unix.run_and_open uses My_std.sys_command and\n+       sys_command uses bash. *)\n+    if Sys.win32 = false then s else\n+    let l = match Lazy.force My_std.windows_shell |> Array.to_list with\n+    | hd::tl -> (Filename.quote hd)::tl\n+    | _ -> assert false in\n+    \"\\\"\" ^ (String.concat \" \" l) ^ \" -ec \" ^ Filename.quote (\" \" ^ s) ^ \"\\\"\"\n+  in\n   let ic = Unix.open_process_in s in\n   let close () =\n     match Unix.close_process_in ic with\n     | Unix.WEXITED 0 -> ()\n     | Unix.WEXITED _ | Unix.WSIGNALED _ | Unix.WSTOPPED _ ->\n-        failwith (Printf.sprintf \"Error while running: %s\" s) in\n+        failwith (Printf.sprintf \"Error while running: %s\" s_orig) in\n   let res = try\n       kont ic\n     with e -> (close (); raise e)\n--- ./src/options.ml\n+++ ./src/options.ml\n@@ -174,11 +174,24 @@\n     build_dir := Filename.concat (Sys.getcwd ()) s\n   else\n     build_dir := s\n+\n+let slashify =\n+  if Sys.win32 then fun p -> String.map (function '\\\\' -> '/' | x -> x) p\n+  else fun p ->p\n+\n+let sb () =\n+  match Sys.os_type with\n+  | \"Win32\" ->\n+    (try set_binary_mode_out stdout true with _ -> ());\n+  | _ -> ()\n+\n+\n let spec = ref (\n     let print_version () =\n+      sb ();\n       Printf.printf \"ocamlbuild %s\\n%!\" Ocamlbuild_config.version; raise Exit_OK\n     in\n-    let print_vnum () = print_endline Ocamlbuild_config.version; raise Exit_OK in\n+    let print_vnum () = sb (); print_endline Ocamlbuild_config.version; raise Exit_OK in\n   Arg.align\n   [\n    \"-version\", Unit print_version , \" Display the version\";\n@@ -257,8 +270,8 @@\n    \"-build-dir\", String set_build_dir, \"<path> Set build directory (implies no-links)\";\n    \"-install-lib-dir\", Set_string Ocamlbuild_where.libdir, \"<path> Set the install library directory\";\n    \"-install-bin-dir\", Set_string Ocamlbuild_where.bindir, \"<path> Set the install binary directory\";\n-   \"-where\", Unit (fun () -> print_endline !Ocamlbuild_where.libdir; raise Exit_OK), \" Display the install library directory\";\n-   \"-which\", String (fun cmd -> print_endline (find_tool cmd); raise Exit_OK), \"<command> Display path to the tool command\";\n+   \"-where\", Unit (fun () -> sb (); print_endline (slashify !Ocamlbuild_where.libdir); raise Exit_OK), \" Display the install library directory\";\n+   \"-which\", String (fun cmd -> sb (); print_endline (slashify (find_tool cmd)); raise Exit_OK), \"<command> Display path to the tool command\";\n    \"-ocamlc\", set_cmd ocamlc, \"<command> Set the OCaml bytecode compiler\";\n    \"-plugin-ocamlc\", set_cmd plugin_ocamlc, \"<command> Set the OCaml bytecode compiler \\\n      used when building myocamlbuild.ml (only)\";\n--- ./src/pathname.ml\n+++ ./src/pathname.ml\n@@ -84,6 +84,26 @@\n   | x :: xs -> x :: normalize_list xs\n \n let normalize x =\n+  let x =\n+    if Sys.win32 = false then\n+      x\n+    else\n+      let len = String.length x in\n+      let b = Bytes.create len in\n+      for i = 0 to pred len do\n+        match x.[i] with\n+        | '\\\\' -> Bytes.set b i '/'\n+        | c -> Bytes.set b i c\n+      done;\n+      if len > 1 then (\n+        let c1 = Bytes.get b 0 in\n+        let c2 = Bytes.get b 1 in\n+        if c2 = ':' && c1 >= 'a' && c1 <= 'z' &&\n+           ( len = 2 || Bytes.get b 2 = '/') then\n+          Bytes.set b 0 (Char.uppercase_ascii c1)\n+      );\n+      Bytes.unsafe_to_string b\n+  in\n   if Glob.eval not_normal_form_re x then\n     let root, paths = split x in\n     join root (normalize_list paths)\n--- ./src/shell.ml\n+++ ./src/shell.ml\n@@ -24,12 +24,26 @@\n     | 'a'..'z' | 'A'..'Z' | '0'..'9' | '.' | '-' | '/' | '_' | ':' | '@' | '+' | ',' -> loop (pos + 1)\n     | _ -> false in\n   loop 0\n+\n+let generic_quote quotequote s =\n+  let l = String.length s in\n+  let b = Buffer.create (l + 20) in\n+  Buffer.add_char b '\\'';\n+  for i = 0 to l - 1 do\n+    if s.[i] = '\\''\n+    then Buffer.add_string b quotequote\n+    else Buffer.add_char b  s.[i]\n+  done;\n+  Buffer.add_char b '\\'';\n+  Buffer.contents b\n+let unix_quote = generic_quote \"'\\\\''\"\n+\n let quote_filename_if_needed s =\n   if is_simple_filename s then s\n   (* We should probably be using [Filename.unix_quote] except that function\n    * isn't exported. Users on Windows will have to live with not being able to\n    * install OCaml into c:\\o'caml. Too bad. *)\n-  else if Sys.os_type = \"Win32\" then Printf.sprintf \"'%s'\" s\n+  else if Sys.os_type = \"Win32\" then unix_quote s\n   else Filename.quote s\n let chdir dir =\n   reset_filesys_cache ();\n@@ -37,7 +51,7 @@\n let run args target =\n   reset_readdir_cache ();\n   let cmd = String.concat \" \" (List.map quote_filename_if_needed args) in\n-  if !*My_unix.is_degraded || Sys.os_type = \"Win32\" then\n+  if !*My_unix.is_degraded then\n     begin\n       Log.event cmd target Tags.empty;\n       let st = sys_command cmd in\n"
          }
        ],
        "opam": {
          "name": "ocamlbuild",
          "version": "0.14.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ocamlbuild\"\nversion: \"0.14.0\"\nsynopsis:\n  \"OCamlbuild is a build system with builtin rules to easily build most OCaml projects.\"\nmaintainer: \"Gabriel Scherer <gabriel.scherer@gmail.com>\"\nauthors: [\"Nicolas Pouillard\" \"Berke Durak\"]\nlicense: \"LGPL-2 with OCaml linking exception\"\nhomepage: \"https://github.com/ocaml/ocamlbuild/\"\ndoc: \"https://github.com/ocaml/ocamlbuild/blob/master/manual/manual.adoc\"\nbug-reports: \"https://github.com/ocaml/ocamlbuild/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.03\"}\n]\nconflicts: [\n  \"base-ocamlbuild\"\n  \"ocamlfind\" {< \"1.6.2\"}\n]\nbuild: [\n  [\n    make\n    \"-f\"\n    \"configure.make\"\n    \"all\"\n    \"OCAMLBUILD_PREFIX=%{prefix}%\"\n    \"OCAMLBUILD_BINDIR=%{bin}%\"\n    \"OCAMLBUILD_LIBDIR=%{lib}%\"\n    \"OCAMLBUILD_MANDIR=%{man}%\"\n    \"OCAML_NATIVE=%{ocaml:native}%\"\n    \"OCAML_NATIVE_TOOLS=%{ocaml:native}%\"\n  ]\n  [make \"check-if-preinstalled\" \"all\" \"opam-install\"]\n]\ndev-repo: \"git+https://github.com/ocaml/ocamlbuild.git\"\nurl {\n  src: \"https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz\"\n  checksum:\n    \"sha256=87b29ce96958096c0a1a8eeafeb6268077b2d11e1bf2b3de0f5ebc9cf8d42e78\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < ocamlbuild-0.14.0.patch' : 'true'}"
              ],
              [
                "make", "-f", "configure.make", "all",
                "OCAMLBUILD_PREFIX=#{self.install}",
                "OCAMLBUILD_BINDIR=#{self.bin}",
                "OCAMLBUILD_LIBDIR=#{self.lib}",
                "OCAMLBUILD_MANDIR=#{self.man}", "OCAMLBUILD_NATIVE=true",
                "OCAMLBUILD_NATIVE_TOOLS=true"
              ],
              [
                "make", "check-if-preinstalled", "all",
                "#{os == 'windows' ? 'install' : 'opam-install'}"
              ]
            ]
          }
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1", "ocaml@4.7.1004" ]
    },
    "@opam/ocaml-migrate-parsetree@opam:1.2.0": {
      "record": {
        "name": "@opam/ocaml-migrate-parsetree",
        "version": "opam:1.2.0",
        "source":
          "archive:https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.2.0/ocaml-migrate-parsetree-v1.2.0.tbz#md5:cc6fb09ad6f99156c7dba47711c62c6f",
        "files": [],
        "opam": {
          "name": "ocaml-migrate-parsetree",
          "version": "1.2.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ocaml-migrate-parsetree\"\nversion: \"1.2.0\"\nsynopsis: \"Convert OCaml parsetrees between different versions\"\ndescription: \"\"\"\nConvert OCaml parsetrees between different versions\n\nThis library converts parsetrees, outcometree and ast mappers between\ndifferent OCaml versions.  High-level functions help making PPX\nrewriters independent of a compiler version.\"\"\"\nmaintainer: \"frederic.bour@lakaban.net\"\nauthors: [\n  \"Frédéric Bour <frederic.bour@lakaban.net>\"\n  \"Jérémie Dimino <jeremie@dimino.org>\"\n]\nlicense: \"LGPL-2.1\"\ntags: [\"syntax\" \"org:ocamllabs\"]\nhomepage: \"https://github.com/ocaml-ppx/ocaml-migrate-parsetree\"\ndoc: \"https://ocaml-ppx.github.io/ocaml-migrate-parsetree/\"\nbug-reports: \"https://github.com/ocaml-ppx/ocaml-migrate-parsetree/issues\"\ndepends: [\n  \"result\"\n  \"ppx_derivers\"\n  \"dune\" {build & >= \"1.6.0\"}\n  \"ocaml\" {>= \"4.02.3\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/ocaml-ppx/ocaml-migrate-parsetree.git\"\nurl {\n  src:\n    \"https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.2.0/ocaml-migrate-parsetree-v1.2.0.tbz\"\n  checksum: \"md5=cc6fb09ad6f99156c7dba47711c62c6f\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.7.3",
        "@opam/ppx_derivers@opam:1.0", "@opam/result@opam:1.3",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ocaml-compiler-libs@opam:v0.11.0": {
      "record": {
        "name": "@opam/ocaml-compiler-libs",
        "version": "opam:v0.11.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.11/files/ocaml-compiler-libs-v0.11.0.tar.gz#md5:e170c16186aa55b7e8b11e461418a10a",
        "files": [],
        "opam": {
          "name": "ocaml-compiler-libs",
          "version": "v0.11.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ocaml-compiler-libs\"\nversion: \"v0.11.0\"\nsynopsis: \"OCaml compiler libraries repackaged\"\ndescription: \"\"\"\nThis packages exposes the OCaml compiler libraries repackages under\nthe toplevel names Ocaml_common, Ocaml_bytecomp, ...\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"Apache-2.0\"\nhomepage: \"https://github.com/janestreet/ocaml-compiler-libs\"\nbug-reports: \"https://github.com/janestreet/ocaml-compiler-libs/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"jbuilder\" {build & >= \"1.0+beta12\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ocaml-compiler-libs.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.11/files/ocaml-compiler-libs-v0.11.0.tar.gz\"\n  checksum: \"md5=e170c16186aa55b7e8b11e461418a10a\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/oasis@opam:0.4.11": {
      "record": {
        "name": "@opam/oasis",
        "version": "opam:0.4.11",
        "source":
          "archive:https://download.ocamlcore.org/oasis/oasis/0.4.11/oasis-0.4.11.tar.gz#md5:98492f4657c2c5b30e3b1bc945e58419",
        "files": [
          {
            "name": "oasis.install",
            "content":
              "etc: [\n  \"setup.ml\"\n  \"setup.data\"\n  \"setup.log\"\n]\n"
          },
          {
            "name": "oasis-0.4.11.patch",
            "content":
              "--- ./myocamlbuild.ml\n+++ ./myocamlbuild.ml\n@@ -107,7 +107,7 @@\n ;;\n \n (* OASIS_START *)\n-(* DO NOT EDIT (digest: abd4c3624ec7c742aae7dbd96c89cd14) *)\n+(* DO NOT EDIT (digest: f54b1f8d97dfa848f6d79c1c3a40cf79) *)\n module OASISGettext = struct\n # 22 \"src/oasis/OASISGettext.ml\"\n \n@@ -279,6 +279,28 @@\n     else\n       s\n \n+  let exists f str =\n+    let rec iter i =\n+      if i < 0 then\n+        false\n+      else if f str.[i] then\n+        true\n+      else\n+        iter (pred i)\n+    in\n+      iter (String.length str - 1)\n+\n+  let is_digit c =\n+    '0' <= c && c <= '9'\n+\n+  let is_alpha c =\n+    ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')\n+\n+  let is_whitespace =\n+    function\n+      | ' ' | '\\r' | '\\n' | '\\t' -> true\n+      |  _  -> false\n+\n end\n \n module OASISUtils = struct\n@@ -542,7 +564,7 @@\n end\n \n \n-# 437 \"myocamlbuild.ml\"\n+# 459 \"myocamlbuild.ml\"\n module BaseEnvLight = struct\n # 22 \"src/base/BaseEnvLight.ml\"\n \n@@ -622,7 +644,7 @@\n end\n \n \n-# 517 \"myocamlbuild.ml\"\n+# 539 \"myocamlbuild.ml\"\n module MyOCamlbuildFindlib = struct\n # 22 \"src/plugins/ocamlbuild/MyOCamlbuildFindlib.ml\"\n \n@@ -699,7 +721,9 @@\n     with Not_found -> s\n \n   (* ocamlfind command *)\n-  let ocamlfind x = S[Sh (exec_from_conf \"ocamlfind\"); x]\n+  let ocamlfind x = S[Sh (\n+    Ocamlbuild_pack.Shell.quote_filename_if_needed\n+      (exec_from_conf \"ocamlfind\") ); x]\n \n   (* This lists all supported packages. *)\n   let find_packages () =\n@@ -983,7 +1007,7 @@\n end\n \n \n-# 878 \"myocamlbuild.ml\"\n+# 902 \"myocamlbuild.ml\"\n open Ocamlbuild_plugin;;\n let package_default =\n   {\n@@ -1283,7 +1307,7 @@\n \n let dispatch_default = MyOCamlbuildBase.dispatch_default conf package_default;;\n \n-# 1179 \"myocamlbuild.ml\"\n+# 1203 \"myocamlbuild.ml\"\n (* OASIS_STOP *)\n \n open Ocamlbuild_plugin;;\n--- ./setup.ml\n+++ ./setup.ml\n@@ -21,9 +21,9 @@\n (******************************************************************************)\n \n (* OASIS_START *)\n-(* DO NOT EDIT (digest: 6bf336bd3a817bf7523ab66c3f46186c) *)\n+(* DO NOT EDIT (digest: 4859873bfec85860f75d16694b510ed0) *)\n (*\n-   Regenerated by OASIS v0.4.11~HEAD\n+   Regenerated by OASIS v0.4.10\n    Visit http://oasis.forge.ocamlcore.org for more information and\n    documentation about functions used in this file.\n *)\n@@ -198,6 +198,28 @@\n     else\n       s\n \n+  let exists f str =\n+    let rec iter i =\n+      if i < 0 then\n+        false\n+      else if f str.[i] then\n+        true\n+      else\n+        iter (pred i)\n+    in\n+      iter (String.length str - 1)\n+\n+  let is_digit c =\n+    '0' <= c && c <= '9'\n+\n+  let is_alpha c =\n+    ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')\n+\n+  let is_whitespace =\n+    function\n+      | ' ' | '\\r' | '\\n' | '\\t' -> true\n+      |  _  -> false\n+\n end\n \n module OASISUtils = struct\n@@ -473,6 +495,118 @@\n \n   module Unix = OASISUnixPath\n \n+  let bash_cmd = ref ( fun () -> \"\" )\n+\n+  let use_bash () = ( !bash_cmd () ) <> \"\"\n+\n+\n+  (* generic quote and unixquote are taken from ocaml source *)\n+  let generic_quote quotequote s =\n+    let l = String.length s in\n+    let b = Buffer.create (l + 20) in\n+      Buffer.add_char b '\\'';\n+      for i = 0 to l - 1 do\n+        if s.[i] = '\\'' then\n+          Buffer.add_string b quotequote\n+        else\n+          Buffer.add_char b  s.[i]\n+      done;\n+      Buffer.add_char b '\\'';\n+      Buffer.contents b\n+\n+  let unixquote = generic_quote \"'\\\\''\"\n+\n+  let win = Sys.os_type = \"Win32\"\n+\n+  let quote str =\n+    if win && use_bash () then\n+      unixquote str\n+    else\n+      quote str\n+\n+  (* uniform_path (only called, if Sys.os_type = \"Win32\")\n+   * - enforces uniform path seperators\n+   * - strips trailing slashes (exceptions in case of C:\\ and / )\n+   * - removes (some) unnecessary file components like ./././\n+   *)\n+\n+  let get_naccu accu str first pos =\n+    (* I assume c//d is identic to c/d\n+     * the only exception (Network devices \\\\xyz\\asdf)\n+     * is covered in uniform_path\n+     *)\n+    if first = pos then\n+      accu\n+    else\n+      let nlen = pos - first in\n+      let nstr = String.sub str first nlen in\n+        (* test/././ is the same as test *)\n+        if nlen = 1 && nstr = \".\" then\n+          accu\n+        (* a/b/../ is the same as a *)\n+        else if nlen = 2 && nstr = \"..\" then\n+          match accu with\n+            | []      -> [ nstr ]\n+            | \"..\"::_ -> nstr::accu\n+            | hd::tl  -> tl\n+        else\n+          nstr::accu\n+\n+  let is_path_sep = function\n+    | '\\\\' | '/' -> true\n+    | _ -> false\n+\n+\n+  let uniform_path path_sep = function\n+    | \"\" -> \"\" (* Raise an exception? Or an possible intermediate result?\n+               * Filename.basename and dirname also don't raise exceptions *)\n+    | str ->\n+        let rec iter accu str len first pos =\n+          if pos >= len then\n+            List.rev (get_naccu accu str first pos)\n+          else\n+            let next = succ pos in\n+              match is_path_sep str.[pos] with\n+                | true -> iter (get_naccu accu str first pos) str len next next\n+                | false -> iter accu str len first next\n+        in\n+          let is_unix_root = is_path_sep str.[0] in\n+          let len = String.length str in\n+          let next_sep = len > 1 && is_path_sep str.[1] in\n+          let is_network_root = is_unix_root && next_sep in\n+          let is_currel = str.[0] = '.' && ( next_sep || len = 1 ) in\n+          let l = iter [] str len 0 0 in\n+          (* Trailing slashes are normally stripped.\n+           * This is not possible in case of root folders\n+           * Sys.file_exists \"C:\" is false, Sys.file_exists \"C:\\\\\" true\n+           *)\n+          let l_min =\n+            match l with\n+              | [] -> [ \"\" ]\n+              | _ -> l\n+          in\n+          let l =\n+            if is_network_root then\n+              \"\"::\"\"::l_min\n+            else if is_unix_root then\n+              \"\"::l_min\n+            else if is_currel then\n+              \".\"::l\n+            else\n+              match l with\n+                | s :: [] ->\n+                    (* root folders like C:\\ *)\n+                    if String.length s = 2 && s.[1] = ':' &&\n+                      len > 2 && is_path_sep str.[2]\n+                    then\n+                      s :: [ \"\" ]\n+                    else\n+                      l\n+                | _ -> l\n+          in\n+            String.concat path_sep l\n+\n+\n \n   let make =\n     function\n@@ -486,22 +620,31 @@\n     match Sys.os_type with\n     | \"Unix\" | \"Cygwin\" -> ufn\n     | \"Win32\" ->\n-      make\n-        (List.map\n-           (fun p ->\n-              if p = Unix.current_dir_name then\n-                current_dir_name\n-              else if p = Unix.parent_dir_name then\n-                parent_dir_name\n+      let path_sep =\n+        if use_bash () then\n+          \"/\"\n               else\n-                p)\n-           (OASISString.nsplit ufn '/'))\n+          \"\\\\\"\n+      in\n+      uniform_path path_sep ufn\n     | os_type ->\n       OASISUtils.failwithf\n         (f_ \"Don't know the path format of os_type %S when translating unix \\\n              filename. %S\")\n         os_type ufn\n \n+  (* see findlib's src/findlib/frontend.ml for details *)\n+  let ocamlfind_unquote dir =\n+    match Sys.os_type with\n+    | \"Cygwin\"\n+    | \"Win32\" ->\n+      let len = String.length dir in\n+      if len < 3 || dir.[0] <> '\"' || dir.[len - 1] <> '\"' ||\n+         String.contains dir ' ' = false then\n+        dir\n+      else\n+        String.sub dir 1 (len - 2)\n+    | _ -> dir\n \n end\n \n@@ -1084,8 +1227,8 @@\n \n \n   (* Range of allowed characters *)\n-  let is_digit c = '0' <= c && c <= '9'\n-  let is_alpha c = ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')\n+  let is_digit = OASISString.is_digit\n+  let is_alpha = OASISString.is_alpha\n   let is_special = function | '.' | '+' | '-' | '~' -> true | _ -> false\n \n \n@@ -2513,6 +2656,7 @@\n       ~ctxt\n       ~is_native\n       ~source_file_exists\n+      ~ext_obj\n       (cs, bs, obj) =\n \n     let find_module ext modul =\n@@ -2526,12 +2670,12 @@\n         | [ m ] -> (find_module \".cmi\" m,\n             find_module \".cmo\" m,\n             find_module \".cmx\" m,\n-            find_module \".o\" m,\n+            find_module ext_obj m,\n             fun x -> x)\n         | _ -> ([cs.cs_name ^ \".cmi\"],\n             [cs.cs_name ^ \".cmo\"],\n             [cs.cs_name ^ \".cmx\"],\n-            [cs.cs_name ^ \".o\"],\n+            [cs.cs_name ^ ext_obj],\n             OASISUnixPath.concat bs.bs_path)\n     in\n     List.map (List.map f) (\n@@ -2891,26 +3035,170 @@\n   open OASISUtils\n   open OASISMessage\n \n+  let is_dubious_char = function\n+    | '+' | '~' | ':' | '.' | '-' | '_' | '/' | '\\\\' -> false\n+    | c ->\n+      OASISString.is_digit c = false &&\n+      OASISString.is_alpha c = false\n+\n+\n+  let win_quote_needed str =\n+    let f = function\n+      | 'a' .. 'z'  | 'A' .. 'Z' | '0' .. '9'\n+      | '_' | '-' | '~' | '.' | ':' | ',' | '\\\\' -> false\n+      | _ -> true\n+    in\n+      str = \"\" || OASISString.exists f str\n+\n+  let is_simple_command str =\n+    String.length str > 0 &&\n+    not (OASISString.exists is_dubious_char str)\n+\n+  let is_path_sep = function\n+    | '/' | '\\\\' -> true\n+    | _ -> false\n+\n+  let starts_with_absolute_path cmd =\n+    let len = String.length cmd in\n+      if len < 3 then\n+        false\n+      else\n+        let c0 = cmd.[0] in\n+        let c1 = cmd.[1] in\n+          if is_path_sep c0 && is_path_sep c1 then (* network devices: \"//\" *)\n+            true\n+          else if len = 3 then\n+            false\n+          else  (* C:\\.... *)\n+            OASISString.is_alpha c0 && c1 = ':' && is_path_sep cmd.[2]\n \n-  (* TODO: I don't like this quote, it is there because $(rm) foo expands to\n-   * 'rm -f' foo...\n-  *)\n-  let run ~ctxt ?f_exit_code ?(quote=true) cmd args =\n+  let exe_exts = lazy\n+    begin\n+      let exts =\n+        try\n+          OASISString.nsplit\n+            (Sys.getenv \"PATHEXT\")\n+            ';'\n+        with\n+          | Not_found -> []\n+      in\n+      let exts' =\n+        List.filter\n+          ( fun a -> a <> \"\" && a.[0] = '.' && a <> \".exe\" )\n+          (List.map OASISString.lowercase_ascii exts)\n+      in\n+        \".exe\"::exts'\n+    end\n+\n+  let exe_file_exists fln =\n+    Sys.file_exists fln ||\n+    List.exists\n+      (fun a -> Sys.file_exists ( fln ^ a ) )\n+      (Lazy.force exe_exts)\n+\n+\n+  let quote_anyway cmd =\n+    if Sys.os_type <> \"Win32\" then\n+      false\n+    else if is_simple_command cmd then\n+      true\n+    else\n+      OASISString.exists OASISString.is_whitespace cmd &&\n+        starts_with_absolute_path cmd &&\n+        exe_file_exists cmd\n+\n+\n+  let run_bash ~ctxt ?f_exit_code ?(quote=true) cmd args =\n+    let fn = Filename.temp_file \"oasis-\" \".sh\" in\n+    let fn_deleted = ref false in\n+      try\n+        begin\n+          let ch = open_out_bin fn in\n+          let ch_closed = ref false in\n+            try\n+              begin\n     let cmd =\n-      if quote then\n-        if Sys.os_type = \"Win32\" then\n-          if String.contains cmd ' ' then\n-            (* Double the 1st double quote... win32... sigh *)\n-            \"\\\"\"^(Filename.quote cmd)\n+                  if quote || quote_anyway cmd then\n+                    OASISHostPath.quote (OASISHostPath.of_unix cmd)\n+                  else\n+                    cmd\n+                in\n+                  output_string ch cmd;\n+                  List.iter\n+                    ( fun s -> output_char ch ' '; output_string ch s )\n+                    args ;\n+                  output_char ch '\\n';\n+                  ch_closed:=true ;\n+                  close_out ch;\n+                  let bash = !OASISHostPath.bash_cmd () in\n+                  let add_quotes = ref false in\n+                  let shell_cmd =\n+                    if Sys.os_type <> \"Win32\" then\n+                      Filename.quote bash\n+                    else\n+                      if win_quote_needed bash = false then\n+                        bash\n+                      else\n+                        begin\n+                          add_quotes := true;\n+                          Filename.quote bash\n+                        end\n+                  in\n+                  let cmdline_orig = String.concat \" \" (cmd :: args) in\n+                  let cmdline =\n+                    let s = shell_cmd ^ \" \" ^ (Filename.quote fn) in\n+                      if !add_quotes then\n+                        \"\\\"\" ^ s ^ \"\\\"\"\n           else\n+                        s\n+                  in\n+                    info ~ctxt (f_ \"Running command '%s'\") cmdline_orig;\n+                    let ret = Sys.command cmdline in\n+                      fn_deleted := true;\n+                      Sys.remove fn;\n+                      match f_exit_code, ret with\n+                        | None, 0 -> ()\n+                        | None, i ->\n+                            failwithf\n+                              (f_ \"Command '%s' terminated with error code %d\")\n+                              cmdline_orig i\n+                        | Some f, i ->\n+                            f i\n+              end\n+            with\n+              | x when !ch_closed = false ->\n+                  close_out_noerr ch;\n+                  raise x\n+        end\n+      with\n+        | x when !fn_deleted = false ->\n+            (try Sys.remove fn with _ -> () ) ;\n+            raise x\n+\n+  let run_default ~ctxt ?f_exit_code ?(quote=true) cmd args =\n+    let add_quotes = ref false in\n+    let cmd =\n+      if quote || quote_anyway cmd then\n+        if Sys.os_type = \"Win32\" then\n+          begin\n+            if win_quote_needed cmd = false then\n             cmd\n         else\n+              begin\n+                add_quotes := true;\n+                Filename.quote cmd\n+              end\n+          end\n+        else\n           Filename.quote cmd\n       else\n         cmd\n     in\n     let cmdline =\n-      String.concat \" \" (cmd :: args)\n+      let s = String.concat \" \" (cmd :: args) in\n+        match !add_quotes with\n+          | true -> \"\\\"\" ^ s ^ \"\\\"\"\n+          | false -> s\n     in\n     info ~ctxt (f_ \"Running command '%s'\") cmdline;\n     match f_exit_code, Sys.command cmdline with\n@@ -2922,6 +3210,13 @@\n       | Some f, i ->\n         f i\n \n+  let run ~ctxt ?f_exit_code ?quote cmd args =\n+    if OASISHostPath.use_bash () &&\n+       (Sys.os_type <> \"Win32\" || not (Filename.check_suffix cmd \".bat\"))\n+    then\n+      run_bash ~ctxt ?f_exit_code ?quote cmd args\n+    else\n+      run_default ~ctxt ?f_exit_code ?quote cmd args\n \n   let run_read_output ~ctxt ?f_exit_code cmd args =\n     let fn =\n@@ -3032,7 +3327,7 @@\n     ) alternatives\n \n \n-  let which ~ctxt prg =\n+  let which ?(plain=false) ?ctxt prg =\n     let path_sep =\n       match Sys.os_type with\n         | \"Win32\" ->\n@@ -3044,11 +3339,19 @@\n     let exec_ext =\n       match Sys.os_type with\n         | \"Win32\" ->\n-          \"\" :: (OASISString.nsplit (Sys.getenv \"PATHEXT\") path_sep)\n+          \"\" :: (List.map\n+                   OASISString.lowercase_ascii\n+                   (OASISString.nsplit (Sys.getenv \"PATHEXT\") path_sep))\n         | _ ->\n           [\"\"]\n     in\n+    let p =\n     find_file ~case_sensitive:false [path_lst; [prg]] exec_ext\n+    in\n+    if plain then\n+      p\n+    else\n+      OASISHostPath.of_unix p\n \n \n   (**/**)\n@@ -3065,35 +3368,54 @@\n       dn\n \n \n-  let q = Filename.quote\n+  let q s = OASISHostPath.quote (OASISHostPath.of_unix s)\n   (**/**)\n \n-\n   let cp ~ctxt ?(recurse=false) src tgt =\n     if recurse then\n-      match Sys.os_type with\n-        | \"Win32\" ->\n-          OASISExec.run ~ctxt\n-            \"xcopy\" [q src; q tgt; \"/E\"]\n-        | _ ->\n-          OASISExec.run ~ctxt\n-            \"cp\" [\"-r\"; q src; q tgt]\n+      (*\n+        'xcopy /E' and 'cp -r' don't have the same semantic!\n+        -dir2 does exist:\n+          xcopy dir dir2 /E -> copys content of dir into dir2 (dir2/dir doesn't exist!)\n+          cp -r dir dir2    -> copys dir to dir2 (dir2/dir does exist!)\n+        -dir2 doesn't exist:\n+          xcopy dir dir2 /E -> request on command line, if dir2 is an directory or file.\n+          cp -r dir dir2    -> dir and dir2 have the same content (dir2/dir doesn't exist)\n+        Probably, there are even more differences,....\n+      *)\n+      if Sys.os_type = \"Win32\" && OASISHostPath.use_bash () = false then\n+        let tgt_real =\n+          if Sys.file_exists tgt = false then\n+            begin\n+              OASISExec.run ~ctxt \"md\" [q tgt];\n+              tgt\n+            end\n     else\n-      OASISExec.run ~ctxt\n-        (match Sys.os_type with\n-          | \"Win32\" -> \"copy\"\n-          | _ -> \"cp\")\n-        [q src; q tgt]\n-\n+            let base = Filename.basename src in\n+            if base = \".\" then\n+              tgt\n+            else\n+              let tgt_real = Filename.concat tgt base in\n+              if Sys.file_exists tgt_real = false then\n+                OASISExec.run ~ctxt \"md\" [q tgt_real];\n+              tgt_real\n+        in\n+        OASISExec.run ~ctxt \"xcopy\" [q src; q tgt_real; \"/E\" ; \"/Q\" ; \"/Y\"]\n+      else\n+        OASISExec.run ~ctxt \"cp\" [\"-r\"; q src; q tgt]\n+    else if Sys.os_type = \"Win32\" && OASISHostPath.use_bash () = false then\n+      OASISExec.run ~ctxt \"copy\" [q src; q tgt ; \"/Y\"]\n+    else\n+      OASISExec.run ~ctxt \"cp\" [q src; q tgt]\n \n   let mkdir ~ctxt tgt =\n     OASISExec.run ~ctxt\n-      (match Sys.os_type with\n-        | \"Win32\" -> \"md\"\n-        | _ -> \"mkdir\")\n+      ( if Sys.os_type = \"Win32\" && not (OASISHostPath.use_bash ()) then\n+          \"md\"\n+        else\n+          \"mkdir\" )\n       [q tgt]\n \n-\n   let rec mkdir_parent ~ctxt f tgt =\n     let tgt =\n       fix_dir tgt\n@@ -3119,10 +3441,9 @@\n \n   let rmdir ~ctxt tgt =\n     if Sys.readdir tgt = [||] then begin\n-      match Sys.os_type with\n-        | \"Win32\" ->\n+      if Sys.os_type = \"Win32\" && OASISHostPath.use_bash () = false then\n           OASISExec.run ~ctxt \"rd\" [q tgt]\n-        | _ ->\n+      else\n           OASISExec.run ~ctxt \"rm\" [\"-r\"; q tgt]\n     end else begin\n       OASISMessage.error ~ctxt\n@@ -3176,7 +3497,7 @@\n end\n \n \n-# 3159 \"setup.ml\"\n+# 3480 \"setup.ml\"\n module BaseEnvLight = struct\n # 22 \"src/base/BaseEnvLight.ml\"\n \n@@ -3256,7 +3577,7 @@\n end\n \n \n-# 3239 \"setup.ml\"\n+# 3560 \"setup.ml\"\n module BaseContext = struct\n # 22 \"src/base/BaseContext.ml\"\n \n@@ -3347,7 +3668,7 @@\n   let var_lxr = Genlex.make_lexer []\n \n \n-  let rec var_expand str =\n+  let rec var_expand ?(quoted=false) str =\n     let buff =\n       Buffer.create ((String.length str) * 2)\n     in\n@@ -3375,7 +3696,11 @@\n              | [Genlex.Ident \"ocaml_escaped\"; Genlex.String s] ->\n                String.escaped s\n              | [Genlex.Ident nm] ->\n-               var_get nm\n+                 let s = var_get nm in\n+                 if quoted then\n+                   OASISHostPath.quote s\n+                 else\n+                   s\n              | _ ->\n                failwithf\n                  (f_ \"Unknown expression '%s' in variable expansion of %s.\")\n@@ -3913,9 +4238,11 @@\n     in\n     let findlib_dir pkg =\n       let dir =\n+        OASISHostPath.of_unix (\n+          OASISHostPath.ocamlfind_unquote (\n         OASISExec.run_read_one_line ~ctxt:!BaseContext.default\n           (ocamlfind ())\n-          [\"query\"; \"-format\"; \"%d\"; pkg]\n+              [\"query\"; \"-format\"; \"%d\"; pkg] ) )\n       in\n       if Sys.file_exists dir && Sys.is_directory dir then\n         dir\n@@ -4045,6 +4372,9 @@\n       match nm with\n         | \"ocaml_version\" ->\n           \"version\", chop_version_suffix\n+        | \"standard_library\"\n+        | \"standard_library_default\" ->\n+            nm, ( fun x -> OASISHostPath.of_unix x)\n         | _ -> nm, (fun x -> x)\n     in\n     var_redefine\n@@ -4184,15 +4514,43 @@\n \n \n   let (/) a b =\n-    if os_type () = Sys.os_type then\n+    let os = os_type () in\n+    if os = Sys.os_type then\n+      if Sys.os_type = \"Win32\" && OASISHostPath.use_bash () then\n+        OASISUnixPath.concat a b\n+      else\n       Filename.concat a b\n-    else if os_type () = \"Unix\" || os_type () = \"Cygwin\" then\n+    else if os = \"Unix\" || os = \"Cygwin\" then\n       OASISUnixPath.concat a b\n     else\n-      OASISUtils.failwithf (f_ \"Cannot handle os_type %s filename concat\")\n-        (os_type ())\n+      OASISUtils.failwithf (f_ \"Cannot handle os_type %s filename concat\") os\n   (**/**)\n \n+  let auto_bash =\n+    lazy (\n+      try\n+        let bash = OASISFileUtil.which ~plain:true \"bash\" in\n+        let sh = Filename.concat (Filename.dirname bash) \"sh.exe\" in\n+        if Sys.file_exists sh then\n+          sh\n+        else\n+          bash\n+      with\n+      | Not_found | Sys_error _ -> \"\" )\n+\n+  let auto_bash () =\n+    if Sys.os_type <> \"Win32\" then\n+      \"\"\n+    else\n+      Lazy.force auto_bash\n+\n+  let bash_cmd =\n+    var_define\n+     ~short_desc:(fun () -> s_ \"Enforced bash shell:\")\n+      ~cli:CLIAuto\n+      ~arg_help:\"program\"\n+      \"use_bash\"\n+      auto_bash\n \n   let prefix =\n     p \"prefix\"\n@@ -4200,10 +4558,30 @@\n       (fun () ->\n          match os_type () with\n            | \"Win32\" ->\n+            let getenv w =\n+              try\n+                Some(Sys.getenv w)\n+              with\n+              | Not_found -> None\n+            in\n+            let s =\n+              if Sys.word_size = 64 then\n+                getenv \"ProgramW6432\"\n+              else\n+                None\n+            in\n+            let s =\n+              if s = None then\n+                getenv \"PROGRAMFILES\"\n+              else\n+                s\n+            in\n              let program_files =\n-               Sys.getenv \"PROGRAMFILES\"\n+              match s with\n+              | None -> \"C:\\\\Program Files\"\n+              | Some x -> x\n              in\n-             program_files/(pkg_name ())\n+            OASISHostPath.of_unix (program_files/(pkg_name ()))\n            | _ ->\n              \"/usr/local\")\n \n@@ -4289,7 +4667,15 @@\n   let docdir =\n     p \"docdir\"\n       (fun () -> s_ \"Documentation root\")\n-      (fun () -> \"$datarootdir\"/\"doc\"/\"$pkg_name\")\n+      (fun () ->\n+        (* TODO: (Windows only?) \"$pkg_name\" is not always substituted\n+         * (at least if datarootdir contains spaces or other garbage)\n+         * I haven't looked up why.\n+         *)\n+        match os_type () with\n+          | \"Win32\" -> \"$datarootdir\"/\"doc\"/ ( pkg_name () )\n+          | _ -> \"$datarootdir\"/\"doc\"/\"$pkg_name\"\n+      )\n \n \n   let htmldir =\n@@ -4363,9 +4749,10 @@\n       ~short_desc:(fun () -> s_ \"Remove a file.\")\n       \"rm\"\n       (fun () ->\n-         match os_type () with\n-           | \"Win32\" -> \"del\"\n-           | _ -> \"rm -f\")\n+         if not (OASISHostPath.use_bash ()) && os_type () = \"Win32\" then\n+           \"del\"\n+         else\n+           \"rm -f\" )\n \n \n   let rmdir =\n@@ -4373,9 +4760,10 @@\n       ~short_desc:(fun () -> s_ \"Remove a directory.\")\n       \"rmdir\"\n       (fun () ->\n-         match os_type () with\n-           | \"Win32\" -> \"rd\"\n-           | _ -> \"rm -rf\")\n+         if not (OASISHostPath.use_bash ()) && os_type () = \"Win32\" then\n+           \"rd\"\n+         else\n+           \"rm -rf\")\n \n \n   let debug =\n@@ -4439,14 +4827,26 @@\n            let has_native_dynlink =\n              let ocamlfind = ocamlfind () in\n              try\n-               let fn =\n+               (* -format %d/%a doesn't work, because ocamlfind quotes %d\n+                  * and %a separatly *)\n+               let fn1 =\n+                 OASISHostPath.ocamlfind_unquote (\n+                   OASISExec.run_read_one_line\n+                     ~ctxt:!BaseContext.default\n+                     ocamlfind\n+                     [\"query\"; \"-predicates\"; \"native\"; \"dynlink\";\n+                      \"-format\"; \"%d\"] )\n+               in\n+               let fn2 =\n+                 OASISHostPath.ocamlfind_unquote (\n                  OASISExec.run_read_one_line\n                    ~ctxt:!BaseContext.default\n                    ocamlfind\n                    [\"query\"; \"-predicates\"; \"native\"; \"dynlink\";\n-                    \"-format\"; \"%d/%a\"]\n+                      \"-format\"; \"%a\"]\n+                 )\n                in\n-               Sys.file_exists fn\n+               fn1 <> \"\" && fn2 <> \"\" && Sys.file_exists (Filename.concat fn1 fn2)\n              with _ ->\n                false\n            in\n@@ -4473,6 +4873,8 @@\n     rpkg := Some pkg;\n     List.iter (fun f -> f pkg.oasis_version) !var_cond\n \n+  let () =\n+    OASISHostPath.bash_cmd := bash_cmd\n end\n \n module BaseFileAB = struct\n@@ -4748,6 +5150,7 @@\n         ~source_file_exists:(fun fn ->\n           OASISFileUtil.file_exists_case (OASISHostPath.of_unix fn))\n         ~is_native:(bool_of_string (is_native ()))\n+        ~ext_obj:(ext_obj())\n         (cs, bs, obj)\n     in\n     let evs =\n@@ -4773,7 +5176,7 @@\n     OASISExec.run ~ctxt:!BaseContext.default ~quote:false\n       (var_expand cmd)\n       (List.map\n-         var_expand\n+         (var_expand ~quoted:true)\n          (args @ (Array.to_list extra_args)))\n \n \n@@ -5047,9 +5450,27 @@\n \n   let configure ~ctxt t args =\n     (* Run configure *)\n+\n+    (* use-bash is an exception. It's already needed to run the\n+       pre-configure script. *)\n+    let rec f = function\n+      | [] ->\n+        begin\n+          try\n+            let x = Sys.getenv \"USE_BASH\" in\n+              OASISHostPath.bash_cmd := (fun () -> x);\n+          with\n+            _ -> ()\n+        end\n+      | \"--use-bash\"::x::_ ->\n+          OASISHostPath.bash_cmd := (fun () -> x);\n+      | _::tl -> f tl\n+    in\n+      f (Array.to_list args);\n     BaseCustom.hook\n       t.package.conf_custom\n       (fun () ->\n+           OASISHostPath.bash_cmd := BaseStandardVar.bash_cmd;\n          (* Reload if preconf has changed it *)\n          begin\n            try\n@@ -5679,7 +6100,7 @@\n end\n \n \n-# 5662 \"setup.ml\"\n+# 6083 \"setup.ml\"\n module InternalConfigurePlugin = struct\n # 22 \"src/plugins/internal/InternalConfigurePlugin.ml\"\n \n@@ -5959,12 +6380,21 @@\n   let install_findlib_ev = \"install-findlib\"\n \n \n-  (* TODO: this can be more generic and used elsewhere. *)\n-  let win32_max_command_line_length = 8000\n-\n-\n   let split_install_command ocamlfind findlib_name meta files =\n-    if Sys.os_type = \"Win32\" then\n+    if Sys.os_type <> \"Win32\" then\n+      [\"install\" :: findlib_name :: meta :: files]\n+    else\n+      let f s =\n+        OASISHostPath.quote ( OASISHostPath.of_unix s )\n+      in\n+      let files = List.map f files in\n+      let meta = f meta  in\n+      let win32_max_command_line_length =\n+        if OASISHostPath.use_bash () = false then\n+          7900\n+        else\n+          30000\n+      in\n       (* Arguments for the first command: *)\n       let first_args = [\"install\"; findlib_name; meta] in\n       (* Arguments for remaining commands: *)\n@@ -6022,10 +6452,11 @@\n                     let cmds = split other_args others in\n                     cmd :: cmds\n       in\n+      if files = [] then\n+        [ first_args ]\n+      else\n       (* The first command does not use -add: *)\n       split first_args files\n-    else\n-      [\"install\" :: findlib_name :: meta :: files]\n \n \n   let install =\n@@ -6446,7 +6877,10 @@\n       if ev = install_file_ev then begin\n         if OASISFileUtil.file_exists_case data then begin\n           info (f_ \"Removing file '%s'\") data;\n-          Sys.remove data\n+          (try Sys.remove data\n+          with Sys_error _ when\n+              Sys.os_type = \"Win32\" &&\n+              Filename.basename data = \"setup.ml\" -> ());\n         end else begin\n           warning (f_ \"File '%s' doesn't exist anymore\") data\n         end\n@@ -6482,7 +6916,7 @@\n end\n \n \n-# 6465 \"setup.ml\"\n+# 6899 \"setup.ml\"\n module OCamlbuildCommon = struct\n # 22 \"src/plugins/ocamlbuild/OCamlbuildCommon.ml\"\n \n@@ -6497,11 +6931,7 @@\n   open OASISTypes\n \n \n-  type args =\n-    {\n-      plugin_tags: string option;\n-      extra: string list;\n-    }\n+  type extra_args = string list\n \n \n   let ocamlbuild_clean_ev = \"ocamlbuild-clean\"\n@@ -6543,14 +6973,7 @@\n           ]\n         else\n           [];\n-\n-        args.extra;\n-\n-        begin\n-          match args.plugin_tags with\n-          | Some t -> [\"-plugin-tag\"; Filename.quote t]\n-          | None -> []\n-        end;\n+        args;\n \n         if bool_of_string (debug ()) then\n           [\"-tag\"; \"debug\"]\n@@ -6581,9 +7004,7 @@\n     (* Run if never called with these args *)\n     if not (BaseLog.exists ~ctxt ocamlbuild_clean_ev extra_cli) then\n       begin\n-        OASISExec.run\n-          ~ctxt (ocamlbuild ())\n-          (fix_args {extra = [\"-clean\"]; plugin_tags = None} extra_argv);\n+        OASISExec.run ~ctxt (ocamlbuild ()) (fix_args [\"-clean\"] extra_argv);\n         BaseLog.register ~ctxt ocamlbuild_clean_ev extra_cli;\n         at_exit\n           (fun () ->\n@@ -6615,7 +7036,7 @@\n         | [] ->\n           dir\n     in\n-    search_args \"_build\" (fix_args {extra = []; plugin_tags = None} extra_argv)\n+    search_args \"_build\" (fix_args [] extra_argv)\n \n \n end\n@@ -6641,7 +7062,7 @@\n   let cond_targets_hook = ref (fun lst -> lst)\n \n \n-  let build ~ctxt args pkg argv =\n+  let build ~ctxt extra_args pkg argv =\n     (* Return the filename in build directory *)\n     let in_build_dir fn =\n       Filename.concat\n@@ -6789,14 +7210,14 @@\n     (* Run a list of target... *)\n     run_ocamlbuild\n       ~ctxt\n-      {args with extra = List.flatten (List.map snd cond_targets) @ args.extra}\n+      (List.flatten (List.map snd cond_targets) @ extra_args)\n       argv;\n     (* ... and register events *)\n     List.iter check_and_register (List.flatten (List.map fst cond_targets))\n \n \n-  let clean ~ctxt pkg args  =\n-    run_clean ~ctxt args;\n+  let clean ~ctxt pkg extra_args  =\n+    run_clean ~ctxt extra_args;\n     List.iter\n       (function\n          | Library (cs, _, _) ->\n@@ -6827,7 +7248,7 @@\n \n   type run_t =\n     {\n-      args: args;\n+      extra_args: string list;\n       run_path: unix_filename;\n     }\n \n@@ -6849,8 +7270,7 @@\n           cs.cs_name^\".docdir\";\n         ]\n     in\n-    run_ocamlbuild ~ctxt\n-      {run.args with extra = index_html :: run.args.extra} argv;\n+    run_ocamlbuild ~ctxt (index_html :: run.extra_args) argv;\n     List.iter\n       (fun glb ->\n          match OASISFileUtil.glob ~ctxt (Filename.concat tgt_dir glb) with\n@@ -6868,7 +7288,7 @@\n end\n \n \n-# 6851 \"setup.ml\"\n+# 7271 \"setup.ml\"\n module CustomPlugin = struct\n # 22 \"src/plugins/custom/CustomPlugin.ml\"\n \n@@ -7000,15 +7420,13 @@\n end\n \n \n-# 6983 \"setup.ml\"\n+# 7403 \"setup.ml\"\n open OASISTypes;;\n \n let setup_t =\n   {\n      BaseSetup.configure = InternalConfigurePlugin.configure;\n-     build =\n-       OCamlbuildPlugin.build\n-         {OCamlbuildCommon.plugin_tags = None; extra = [\"-use-ocamlfind\"]};\n+     build = OCamlbuildPlugin.build [\"-use-ocamlfind\"];\n      test =\n        [\n           (\"devel\",\n@@ -7126,11 +7544,7 @@\n           (\"api-oasis\",\n             OCamlbuildDocPlugin.doc_build\n               {\n-                 OCamlbuildDocPlugin.args =\n-                   {\n-                      OCamlbuildCommon.plugin_tags = None;\n-                      extra = [\"-use-ocamlfind\"]\n-                   };\n+                 OCamlbuildDocPlugin.extra_args = [\"-use-ocamlfind\"];\n                  run_path = \"src/\"\n               })\n        ];\n@@ -7254,11 +7668,7 @@\n           (\"api-oasis\",\n             OCamlbuildDocPlugin.doc_clean\n               {\n-                 OCamlbuildDocPlugin.args =\n-                   {\n-                      OCamlbuildCommon.plugin_tags = None;\n-                      extra = [\"-use-ocamlfind\"]\n-                   };\n+                 OCamlbuildDocPlugin.extra_args = [\"-use-ocamlfind\"];\n                  run_path = \"src/\"\n               })\n        ];\n@@ -11805,9 +12215,9 @@\n           schema_data = PropList.Data.create ();\n           plugin_data = []\n        };\n-     oasis_fn = None;\n-     oasis_version = \"0.4.11~HEAD\";\n-     oasis_digest = None;\n+     oasis_fn = Some \"_oasis\";\n+     oasis_version = \"0.4.10\";\n+     oasis_digest = Some \"M\\233\\243N\\025\\208\\179b\\202K\\232\\t\\132~\\222\\226\";\n      oasis_exec = None;\n      oasis_setup_args = [];\n      setup_update = false\n@@ -11815,7 +12225,7 @@\n \n let setup () = BaseSetup.setup setup_t;;\n \n-# 11799 \"setup.ml\"\n+# 12209 \"setup.ml\"\n let setup_t = BaseCompat.Compat_0_4.adapt_setup_t setup_t\n open BaseCompat.Compat_0_4\n (* OASIS_STOP *)\n--- ./src/base/BaseBuilt.ml\n+++ ./src/base/BaseBuilt.ml\n@@ -165,6 +165,7 @@\n       ~source_file_exists:(fun fn ->\n         OASISFileUtil.file_exists_case (OASISHostPath.of_unix fn))\n       ~is_native:(bool_of_string (is_native ()))\n+      ~ext_obj:(ext_obj())\n       (cs, bs, obj)\n   in\n   let evs =\n--- ./src/base/BaseCheck.ml\n+++ ./src/base/BaseCheck.ml\n@@ -118,9 +118,11 @@\n   in\n   let findlib_dir pkg =\n     let dir =\n+      OASISHostPath.of_unix (\n+        OASISHostPath.ocamlfind_unquote (\n       OASISExec.run_read_one_line ~ctxt:!BaseContext.default\n         (ocamlfind ())\n-        [\"query\"; \"-format\"; \"%d\"; pkg]\n+            [\"query\"; \"-format\"; \"%d\"; pkg] ) )\n     in\n     if Sys.file_exists dir && Sys.is_directory dir then\n       dir\n--- ./src/base/BaseCustom.ml\n+++ ./src/base/BaseCustom.ml\n@@ -31,7 +31,7 @@\n   OASISExec.run ~ctxt:!BaseContext.default ~quote:false\n     (var_expand cmd)\n     (List.map\n-       var_expand\n+       (var_expand ~quoted:true)\n        (args @ (Array.to_list extra_args)))\n \n \n--- ./src/base/BaseEnv.ml\n+++ ./src/base/BaseEnv.ml\n@@ -69,7 +69,7 @@\n let var_lxr = Genlex.make_lexer []\n \n \n-let rec var_expand str =\n+let rec var_expand ?(quoted=false) str =\n   let buff =\n     Buffer.create ((String.length str) * 2)\n   in\n@@ -97,7 +97,11 @@\n            | [Genlex.Ident \"ocaml_escaped\"; Genlex.String s] ->\n              String.escaped s\n            | [Genlex.Ident nm] ->\n-             var_get nm\n+               let s = var_get nm in\n+               if quoted then\n+                 OASISHostPath.quote s\n+               else\n+                 s\n            | _ ->\n              failwithf\n                (f_ \"Unknown expression '%s' in variable expansion of %s.\")\n--- ./src/base/BaseEnv.mli\n+++ ./src/base/BaseEnv.mli\n@@ -73,8 +73,9 @@\n \n (** Expand variable that can be found in string. Variable follow definition of\n     variable for [Buffer.add_substitute].\n+    quoted is false by default\n *)\n-val var_expand: string -> string\n+val var_expand: ?quoted:bool -> string -> string\n \n \n (** Get variable. *)\n--- ./src/base/BaseOCamlcConfig.ml\n+++ ./src/base/BaseOCamlcConfig.ml\n@@ -116,6 +116,9 @@\n     match nm with\n       | \"ocaml_version\" ->\n         \"version\", chop_version_suffix\n+      | \"standard_library\"\n+      | \"standard_library_default\" ->\n+          nm, ( fun x -> OASISHostPath.of_unix x)\n       | _ -> nm, (fun x -> x)\n   in\n   var_redefine\n--- ./src/base/BaseSetup.ml\n+++ ./src/base/BaseSetup.ml\n@@ -93,9 +93,27 @@\n \n let configure ~ctxt t args =\n   (* Run configure *)\n+\n+  (* use-bash is an exception. It's already needed to run the\n+     pre-configure script. *)\n+  let rec f = function\n+    | [] ->\n+      begin\n+        try\n+          let x = Sys.getenv \"USE_BASH\" in\n+            OASISHostPath.bash_cmd := (fun () -> x);\n+        with\n+          _ -> ()\n+      end\n+    | \"--use-bash\"::x::_ ->\n+        OASISHostPath.bash_cmd := (fun () -> x);\n+    | _::tl -> f tl\n+  in\n+    f (Array.to_list args);\n   BaseCustom.hook\n     t.package.conf_custom\n     (fun () ->\n+         OASISHostPath.bash_cmd := BaseStandardVar.bash_cmd;\n        (* Reload if preconf has changed it *)\n        begin\n          try\n--- ./src/base/BaseStandardVar.ml\n+++ ./src/base/BaseStandardVar.ml\n@@ -135,15 +135,43 @@\n \n \n let (/) a b =\n-  if os_type () = Sys.os_type then\n+  let os = os_type () in\n+  if os = Sys.os_type then\n+    if Sys.os_type = \"Win32\" && OASISHostPath.use_bash () then\n+      OASISUnixPath.concat a b\n+    else\n     Filename.concat a b\n-  else if os_type () = \"Unix\" || os_type () = \"Cygwin\" then\n+  else if os = \"Unix\" || os = \"Cygwin\" then\n     OASISUnixPath.concat a b\n   else\n-    OASISUtils.failwithf (f_ \"Cannot handle os_type %s filename concat\")\n-      (os_type ())\n+    OASISUtils.failwithf (f_ \"Cannot handle os_type %s filename concat\") os\n (**/**)\n \n+let auto_bash =\n+  lazy (\n+    try\n+      let bash = OASISFileUtil.which ~plain:true \"bash\" in\n+      let sh = Filename.concat (Filename.dirname bash) \"sh.exe\" in\n+      if Sys.file_exists sh then\n+        sh\n+      else\n+        bash\n+    with\n+    | Not_found | Sys_error _ -> \"\" )\n+\n+let auto_bash () =\n+  if Sys.os_type <> \"Win32\" then\n+    \"\"\n+  else\n+    Lazy.force auto_bash\n+\n+let bash_cmd =\n+  var_define\n+   ~short_desc:(fun () -> s_ \"Enforced bash shell:\")\n+    ~cli:CLIAuto\n+    ~arg_help:\"program\"\n+    \"use_bash\"\n+    auto_bash\n \n let prefix =\n   p \"prefix\"\n@@ -151,10 +179,30 @@\n     (fun () ->\n        match os_type () with\n          | \"Win32\" ->\n+          let getenv w =\n+            try\n+              Some(Sys.getenv w)\n+            with\n+            | Not_found -> None\n+          in\n+          let s =\n+            if Sys.word_size = 64 then\n+              getenv \"ProgramW6432\"\n+            else\n+              None\n+          in\n+          let s =\n+            if s = None then\n+              getenv \"PROGRAMFILES\"\n+            else\n+              s\n+          in\n            let program_files =\n-             Sys.getenv \"PROGRAMFILES\"\n+            match s with\n+            | None -> \"C:\\\\Program Files\"\n+            | Some x -> x\n            in\n-           program_files/(pkg_name ())\n+          OASISHostPath.of_unix (program_files/(pkg_name ()))\n          | _ ->\n            \"/usr/local\")\n \n@@ -240,7 +288,15 @@\n let docdir =\n   p \"docdir\"\n     (fun () -> s_ \"Documentation root\")\n-    (fun () -> \"$datarootdir\"/\"doc\"/\"$pkg_name\")\n+    (fun () ->\n+      (* TODO: (Windows only?) \"$pkg_name\" is not always substituted\n+       * (at least if datarootdir contains spaces or other garbage)\n+       * I haven't looked up why.\n+       *)\n+      match os_type () with\n+        | \"Win32\" -> \"$datarootdir\"/\"doc\"/ ( pkg_name () )\n+        | _ -> \"$datarootdir\"/\"doc\"/\"$pkg_name\"\n+    )\n \n \n let htmldir =\n@@ -314,9 +370,10 @@\n     ~short_desc:(fun () -> s_ \"Remove a file.\")\n     \"rm\"\n     (fun () ->\n-       match os_type () with\n-         | \"Win32\" -> \"del\"\n-         | _ -> \"rm -f\")\n+       if not (OASISHostPath.use_bash ()) && os_type () = \"Win32\" then\n+         \"del\"\n+       else\n+         \"rm -f\" )\n \n \n let rmdir =\n@@ -324,9 +381,10 @@\n     ~short_desc:(fun () -> s_ \"Remove a directory.\")\n     \"rmdir\"\n     (fun () ->\n-       match os_type () with\n-         | \"Win32\" -> \"rd\"\n-         | _ -> \"rm -rf\")\n+       if not (OASISHostPath.use_bash ()) && os_type () = \"Win32\" then\n+         \"rd\"\n+       else\n+         \"rm -rf\")\n \n \n let debug =\n@@ -390,14 +448,26 @@\n          let has_native_dynlink =\n            let ocamlfind = ocamlfind () in\n            try\n-             let fn =\n+             (* -format %d/%a doesn't work, because ocamlfind quotes %d\n+                * and %a separatly *)\n+             let fn1 =\n+               OASISHostPath.ocamlfind_unquote (\n+                 OASISExec.run_read_one_line\n+                   ~ctxt:!BaseContext.default\n+                   ocamlfind\n+                   [\"query\"; \"-predicates\"; \"native\"; \"dynlink\";\n+                    \"-format\"; \"%d\"] )\n+             in\n+             let fn2 =\n+               OASISHostPath.ocamlfind_unquote (\n                OASISExec.run_read_one_line\n                  ~ctxt:!BaseContext.default\n                  ocamlfind\n                  [\"query\"; \"-predicates\"; \"native\"; \"dynlink\";\n-                  \"-format\"; \"%d/%a\"]\n+                    \"-format\"; \"%a\"]\n+               )\n              in\n-             Sys.file_exists fn\n+             fn1 <> \"\" && fn2 <> \"\" && Sys.file_exists (Filename.concat fn1 fn2)\n            with _ ->\n              false\n          in\n@@ -424,3 +494,5 @@\n   rpkg := Some pkg;\n   List.iter (fun f -> f pkg.oasis_version) !var_cond\n \n+let () =\n+  OASISHostPath.bash_cmd := bash_cmd\n--- ./src/base/BaseStandardVar.mli\n+++ ./src/base/BaseStandardVar.mli\n@@ -73,6 +73,9 @@\n val systhread_supported:      unit -> string\n \n \n+\n+val bash_cmd:                 unit -> string\n+\n (** {2 Paths}\n \n     See {{:http://www.gnu.org/prep/standards/html_node/Directory-Variables.html} GNU standards}.\n--- ./src/dynrun/OASISDynRun.ml\n+++ ./src/dynrun/OASISDynRun.ml\n@@ -56,7 +56,12 @@\n \n   let setup ~ctxt setup_t =\n     let tmp_setup_fn =\n-      Filename.temp_file (setup_t.package.name^\"-setup\") \".ml\" in\n+      if Sys.os_type <> \"Win32\" then\n+        Filename.temp_file (setup_t.package.name^\"-setup\") \".ml\"\n+      else\n+        (* dirty hack, because otherwise to_unix will fail *)\n+        Filename.temp_file ~temp_dir:\".\" (\"tmp-\"^setup_t.package.name^\"-setup\") \".ml\"\n+    in\n     let restored = ref false in\n     let cleanup ~ctxt () =\n       if not !restored then begin\n--- ./src/oasis/OASISCustom.ml\n+++ ./src/oasis/OASISCustom.ml\n@@ -38,14 +38,14 @@\n   let pre_command =\n     new_field_conditional schm (\"Pre\"^nm^\"Command\")\n       ~default:None\n-      (opt command_line)\n+      (opt command_line_warn)\n       hlp_pre\n       (fun pkg -> (sync pkg).pre_command)\n   in\n   let post_command =\n     new_field_conditional schm (\"Post\"^nm^\"Command\")\n       ~default:None\n-      (opt command_line)\n+      (opt command_line_warn)\n       hlp_post\n       (fun pkg -> (sync pkg).post_command)\n   in\n--- ./src/oasis/OASISExec.ml\n+++ ./src/oasis/OASISExec.ml\n@@ -25,26 +25,170 @@\n open OASISUtils\n open OASISMessage\n \n+let is_dubious_char = function\n+  | '+' | '~' | ':' | '.' | '-' | '_' | '/' | '\\\\' -> false\n+  | c ->\n+    OASISString.is_digit c = false &&\n+    OASISString.is_alpha c = false\n \n-(* TODO: I don't like this quote, it is there because $(rm) foo expands to\n- * 'rm -f' foo...\n-*)\n-let run ~ctxt ?f_exit_code ?(quote=true) cmd args =\n+\n+let win_quote_needed str =\n+  let f = function\n+    | 'a' .. 'z'  | 'A' .. 'Z' | '0' .. '9'\n+    | '_' | '-' | '~' | '.' | ':' | ',' | '\\\\' -> false\n+    | _ -> true\n+  in\n+    str = \"\" || OASISString.exists f str\n+\n+let is_simple_command str =\n+  String.length str > 0 &&\n+  not (OASISString.exists is_dubious_char str)\n+\n+let is_path_sep = function\n+  | '/' | '\\\\' -> true\n+  | _ -> false\n+\n+let starts_with_absolute_path cmd =\n+  let len = String.length cmd in\n+    if len < 3 then\n+      false\n+    else\n+      let c0 = cmd.[0] in\n+      let c1 = cmd.[1] in\n+        if is_path_sep c0 && is_path_sep c1 then (* network devices: \"//\" *)\n+          true\n+        else if len = 3 then\n+          false\n+        else  (* C:\\.... *)\n+          OASISString.is_alpha c0 && c1 = ':' && is_path_sep cmd.[2]\n+\n+let exe_exts = lazy\n+  begin\n+    let exts =\n+      try\n+        OASISString.nsplit\n+          (Sys.getenv \"PATHEXT\")\n+          ';'\n+      with\n+        | Not_found -> []\n+    in\n+    let exts' =\n+      List.filter\n+        ( fun a -> a <> \"\" && a.[0] = '.' && a <> \".exe\" )\n+        (List.map OASISString.lowercase_ascii exts)\n+    in\n+      \".exe\"::exts'\n+  end\n+\n+let exe_file_exists fln =\n+  Sys.file_exists fln ||\n+  List.exists\n+    (fun a -> Sys.file_exists ( fln ^ a ) )\n+    (Lazy.force exe_exts)\n+\n+\n+let quote_anyway cmd =\n+  if Sys.os_type <> \"Win32\" then\n+    false\n+  else if is_simple_command cmd then\n+    true\n+  else\n+    OASISString.exists OASISString.is_whitespace cmd &&\n+      starts_with_absolute_path cmd &&\n+      exe_file_exists cmd\n+\n+\n+let run_bash ~ctxt ?f_exit_code ?(quote=true) cmd args =\n+  let fn = Filename.temp_file \"oasis-\" \".sh\" in\n+  let fn_deleted = ref false in\n+    try\n+      begin\n+        let ch = open_out_bin fn in\n+        let ch_closed = ref false in\n+          try\n+            begin\n   let cmd =\n-    if quote then\n-      if Sys.os_type = \"Win32\" then\n-        if String.contains cmd ' ' then\n-          (* Double the 1st double quote... win32... sigh *)\n-          \"\\\"\"^(Filename.quote cmd)\n+                if quote || quote_anyway cmd then\n+                  OASISHostPath.quote (OASISHostPath.of_unix cmd)\n+                else\n+                  cmd\n+              in\n+                output_string ch cmd;\n+                List.iter\n+                  ( fun s -> output_char ch ' '; output_string ch s )\n+                  args ;\n+                output_char ch '\\n';\n+                ch_closed:=true ;\n+                close_out ch;\n+                let bash = !OASISHostPath.bash_cmd () in\n+                let add_quotes = ref false in\n+                let shell_cmd =\n+                  if Sys.os_type <> \"Win32\" then\n+                    Filename.quote bash\n+                  else\n+                    if win_quote_needed bash = false then\n+                      bash\n+                    else\n+                      begin\n+                        add_quotes := true;\n+                        Filename.quote bash\n+                      end\n+                in\n+                let cmdline_orig = String.concat \" \" (cmd :: args) in\n+                let cmdline =\n+                  let s = shell_cmd ^ \" \" ^ (Filename.quote fn) in\n+                    if !add_quotes then\n+                      \"\\\"\" ^ s ^ \"\\\"\"\n         else\n+                      s\n+                in\n+                  info ~ctxt (f_ \"Running command '%s'\") cmdline_orig;\n+                  let ret = Sys.command cmdline in\n+                    fn_deleted := true;\n+                    Sys.remove fn;\n+                    match f_exit_code, ret with\n+                      | None, 0 -> ()\n+                      | None, i ->\n+                          failwithf\n+                            (f_ \"Command '%s' terminated with error code %d\")\n+                            cmdline_orig i\n+                      | Some f, i ->\n+                          f i\n+            end\n+          with\n+            | x when !ch_closed = false ->\n+                close_out_noerr ch;\n+                raise x\n+      end\n+    with\n+      | x when !fn_deleted = false ->\n+          (try Sys.remove fn with _ -> () ) ;\n+          raise x\n+\n+let run_default ~ctxt ?f_exit_code ?(quote=true) cmd args =\n+  let add_quotes = ref false in\n+  let cmd =\n+    if quote || quote_anyway cmd then\n+      if Sys.os_type = \"Win32\" then\n+        begin\n+          if win_quote_needed cmd = false then\n           cmd\n       else\n+            begin\n+              add_quotes := true;\n+              Filename.quote cmd\n+            end\n+        end\n+      else\n         Filename.quote cmd\n     else\n       cmd\n   in\n   let cmdline =\n-    String.concat \" \" (cmd :: args)\n+    let s = String.concat \" \" (cmd :: args) in\n+      match !add_quotes with\n+        | true -> \"\\\"\" ^ s ^ \"\\\"\"\n+        | false -> s\n   in\n   info ~ctxt (f_ \"Running command '%s'\") cmdline;\n   match f_exit_code, Sys.command cmdline with\n@@ -56,6 +200,13 @@\n     | Some f, i ->\n       f i\n \n+let run ~ctxt ?f_exit_code ?quote cmd args =\n+  if OASISHostPath.use_bash () &&\n+     (Sys.os_type <> \"Win32\" || not (Filename.check_suffix cmd \".bat\"))\n+  then\n+    run_bash ~ctxt ?f_exit_code ?quote cmd args\n+  else\n+    run_default ~ctxt ?f_exit_code ?quote cmd args\n \n let run_read_output ~ctxt ?f_exit_code cmd args =\n   let fn =\n--- ./src/oasis/OASISFileTemplate.ml\n+++ ./src/oasis/OASISFileTemplate.ml\n@@ -496,6 +496,12 @@\n       if Sys.file_exists bak then begin\n         info ~ctxt (f_ \"Restore file '%s' with backup file '%s'.\")\n           fn bak;\n+        if Sys.os_type = \"Win32\" then (\n+          try\n+            Sys.remove fn\n+          with\n+          | Sys_error _ -> ()\n+        );\n         Sys.rename bak fn\n       end else begin\n         warning ~ctxt\n--- ./src/oasis/OASISFileUtil.ml\n+++ ./src/oasis/OASISFileUtil.ml\n@@ -84,7 +84,7 @@\n   ) alternatives\n \n \n-let which ~ctxt prg =\n+let which ?(plain=false) ?ctxt prg =\n   let path_sep =\n     match Sys.os_type with\n       | \"Win32\" ->\n@@ -96,11 +96,19 @@\n   let exec_ext =\n     match Sys.os_type with\n       | \"Win32\" ->\n-        \"\" :: (OASISString.nsplit (Sys.getenv \"PATHEXT\") path_sep)\n+        \"\" :: (List.map\n+                 OASISString.lowercase_ascii\n+                 (OASISString.nsplit (Sys.getenv \"PATHEXT\") path_sep))\n       | _ ->\n         [\"\"]\n   in\n+  let p =\n   find_file ~case_sensitive:false [path_lst; [prg]] exec_ext\n+  in\n+  if plain then\n+    p\n+  else\n+    OASISHostPath.of_unix p\n \n \n (**/**)\n@@ -117,35 +125,54 @@\n     dn\n \n \n-let q = Filename.quote\n+let q s = OASISHostPath.quote (OASISHostPath.of_unix s)\n (**/**)\n \n-\n let cp ~ctxt ?(recurse=false) src tgt =\n   if recurse then\n-    match Sys.os_type with\n-      | \"Win32\" ->\n-        OASISExec.run ~ctxt\n-          \"xcopy\" [q src; q tgt; \"/E\"]\n-      | _ ->\n-        OASISExec.run ~ctxt\n-          \"cp\" [\"-r\"; q src; q tgt]\n+    (*\n+      'xcopy /E' and 'cp -r' don't have the same semantic!\n+      -dir2 does exist:\n+        xcopy dir dir2 /E -> copys content of dir into dir2 (dir2/dir doesn't exist!)\n+        cp -r dir dir2    -> copys dir to dir2 (dir2/dir does exist!)\n+      -dir2 doesn't exist:\n+        xcopy dir dir2 /E -> request on command line, if dir2 is an directory or file.\n+        cp -r dir dir2    -> dir and dir2 have the same content (dir2/dir doesn't exist)\n+      Probably, there are even more differences,....\n+    *)\n+    if Sys.os_type = \"Win32\" && OASISHostPath.use_bash () = false then\n+      let tgt_real =\n+        if Sys.file_exists tgt = false then\n+          begin\n+            OASISExec.run ~ctxt \"md\" [q tgt];\n+            tgt\n+          end\n   else\n-    OASISExec.run ~ctxt\n-      (match Sys.os_type with\n-        | \"Win32\" -> \"copy\"\n-        | _ -> \"cp\")\n-      [q src; q tgt]\n-\n+          let base = Filename.basename src in\n+          if base = \".\" then\n+            tgt\n+          else\n+            let tgt_real = Filename.concat tgt base in\n+            if Sys.file_exists tgt_real = false then\n+              OASISExec.run ~ctxt \"md\" [q tgt_real];\n+            tgt_real\n+      in\n+      OASISExec.run ~ctxt \"xcopy\" [q src; q tgt_real; \"/E\" ; \"/Q\" ; \"/Y\"]\n+    else\n+      OASISExec.run ~ctxt \"cp\" [\"-r\"; q src; q tgt]\n+  else if Sys.os_type = \"Win32\" && OASISHostPath.use_bash () = false then\n+    OASISExec.run ~ctxt \"copy\" [q src; q tgt ; \"/Y\"]\n+  else\n+    OASISExec.run ~ctxt \"cp\" [q src; q tgt]\n \n let mkdir ~ctxt tgt =\n   OASISExec.run ~ctxt\n-    (match Sys.os_type with\n-      | \"Win32\" -> \"md\"\n-      | _ -> \"mkdir\")\n+    ( if Sys.os_type = \"Win32\" && not (OASISHostPath.use_bash ()) then\n+        \"md\"\n+      else\n+        \"mkdir\" )\n     [q tgt]\n \n-\n let rec mkdir_parent ~ctxt f tgt =\n   let tgt =\n     fix_dir tgt\n@@ -171,10 +198,9 @@\n \n let rmdir ~ctxt tgt =\n   if Sys.readdir tgt = [||] then begin\n-    match Sys.os_type with\n-      | \"Win32\" ->\n+    if Sys.os_type = \"Win32\" && OASISHostPath.use_bash () = false then\n         OASISExec.run ~ctxt \"rd\" [q tgt]\n-      | _ ->\n+    else\n         OASISExec.run ~ctxt \"rm\" [\"-r\"; q tgt]\n   end else begin\n     OASISMessage.error ~ctxt\n--- ./src/oasis/OASISFileUtil.mli\n+++ ./src/oasis/OASISFileUtil.mli\n@@ -44,8 +44,7 @@\n \n (** Find real filename of an executable.\n *)\n-val which: ctxt:OASISContext.t -> host_filename -> host_filename\n-\n+val which: ?plain:bool -> ?ctxt:OASISContext.t -> host_filename -> host_filename\n \n (** Copy a file.\n *)\n--- ./src/oasis/OASISHostPath.ml\n+++ ./src/oasis/OASISHostPath.ml\n@@ -27,6 +27,118 @@\n \n module Unix = OASISUnixPath\n \n+let bash_cmd = ref ( fun () -> \"\" )\n+\n+let use_bash () = ( !bash_cmd () ) <> \"\"\n+\n+\n+(* generic quote and unixquote are taken from ocaml source *)\n+let generic_quote quotequote s =\n+  let l = String.length s in\n+  let b = Buffer.create (l + 20) in\n+    Buffer.add_char b '\\'';\n+    for i = 0 to l - 1 do\n+      if s.[i] = '\\'' then\n+        Buffer.add_string b quotequote\n+      else\n+        Buffer.add_char b  s.[i]\n+    done;\n+    Buffer.add_char b '\\'';\n+    Buffer.contents b\n+\n+let unixquote = generic_quote \"'\\\\''\"\n+\n+let win = Sys.os_type = \"Win32\"\n+\n+let quote str =\n+  if win && use_bash () then\n+    unixquote str\n+  else\n+    quote str\n+\n+(* uniform_path (only called, if Sys.os_type = \"Win32\")\n+ * - enforces uniform path seperators\n+ * - strips trailing slashes (exceptions in case of C:\\ and / )\n+ * - removes (some) unnecessary file components like ./././\n+ *)\n+\n+let get_naccu accu str first pos =\n+  (* I assume c//d is identic to c/d\n+   * the only exception (Network devices \\\\xyz\\asdf)\n+   * is covered in uniform_path\n+   *)\n+  if first = pos then\n+    accu\n+  else\n+    let nlen = pos - first in\n+    let nstr = String.sub str first nlen in\n+      (* test/././ is the same as test *)\n+      if nlen = 1 && nstr = \".\" then\n+        accu\n+      (* a/b/../ is the same as a *)\n+      else if nlen = 2 && nstr = \"..\" then\n+        match accu with\n+          | []      -> [ nstr ]\n+          | \"..\"::_ -> nstr::accu\n+          | hd::tl  -> tl\n+      else\n+        nstr::accu\n+\n+let is_path_sep = function\n+  | '\\\\' | '/' -> true\n+  | _ -> false\n+\n+\n+let uniform_path path_sep = function\n+  | \"\" -> \"\" (* Raise an exception? Or an possible intermediate result?\n+             * Filename.basename and dirname also don't raise exceptions *)\n+  | str ->\n+      let rec iter accu str len first pos =\n+        if pos >= len then\n+          List.rev (get_naccu accu str first pos)\n+        else\n+          let next = succ pos in\n+            match is_path_sep str.[pos] with\n+              | true -> iter (get_naccu accu str first pos) str len next next\n+              | false -> iter accu str len first next\n+      in\n+        let is_unix_root = is_path_sep str.[0] in\n+        let len = String.length str in\n+        let next_sep = len > 1 && is_path_sep str.[1] in\n+        let is_network_root = is_unix_root && next_sep in\n+        let is_currel = str.[0] = '.' && ( next_sep || len = 1 ) in\n+        let l = iter [] str len 0 0 in\n+        (* Trailing slashes are normally stripped.\n+         * This is not possible in case of root folders\n+         * Sys.file_exists \"C:\" is false, Sys.file_exists \"C:\\\\\" true\n+         *)\n+        let l_min =\n+          match l with\n+            | [] -> [ \"\" ]\n+            | _ -> l\n+        in\n+        let l =\n+          if is_network_root then\n+            \"\"::\"\"::l_min\n+          else if is_unix_root then\n+            \"\"::l_min\n+          else if is_currel then\n+            \".\"::l\n+          else\n+            match l with\n+              | s :: [] ->\n+                  (* root folders like C:\\ *)\n+                  if String.length s = 2 && s.[1] = ':' &&\n+                    len > 2 && is_path_sep str.[2]\n+                  then\n+                    s :: [ \"\" ]\n+                  else\n+                    l\n+              | _ -> l\n+        in\n+          String.concat path_sep l\n+\n+\n \n let make =\n   function\n@@ -40,22 +152,31 @@\n   match Sys.os_type with\n   | \"Unix\" | \"Cygwin\" -> ufn\n   | \"Win32\" ->\n-    make\n-      (List.map\n-         (fun p ->\n-            if p = Unix.current_dir_name then\n-              current_dir_name\n-            else if p = Unix.parent_dir_name then\n-              parent_dir_name\n+    let path_sep =\n+      if use_bash () then\n+        \"/\"\n             else\n-              p)\n-         (OASISString.nsplit ufn '/'))\n+        \"\\\\\"\n+    in\n+    uniform_path path_sep ufn\n   | os_type ->\n     OASISUtils.failwithf\n       (f_ \"Don't know the path format of os_type %S when translating unix \\\n            filename. %S\")\n       os_type ufn\n \n+(* see findlib's src/findlib/frontend.ml for details *)\n+let ocamlfind_unquote dir =\n+  match Sys.os_type with\n+  | \"Cygwin\"\n+  | \"Win32\" ->\n+    let len = String.length dir in\n+    if len < 3 || dir.[0] <> '\"' || dir.[len - 1] <> '\"' ||\n+       String.contains dir ' ' = false then\n+      dir\n+    else\n+      String.sub dir 1 (len - 2)\n+  | _ -> dir\n \n (* END EXPORT *)\n \n--- ./src/oasis/OASISHostPath.mli\n+++ ./src/oasis/OASISHostPath.mli\n@@ -29,6 +29,27 @@\n open OASISTypes\n \n \n+(**\n+    The function should return an unix like shell,\n+    that will be used to execute external commands.\n+\n+    The default function returns an empty string.\n+    (system default will be used)\n+*)\n+val bash_cmd : (unit -> host_filename) ref\n+\n+(** True, if bash_cmd_program will return a non-empty\n+    host_filename *)\n+val use_bash: unit -> bool\n+\n+\n+(**\n+   On windows, the Unix quote function\n+   will be used, if use_base () is true.\n+   Otherwise identic to Filename.quote\n+*)\n+val quote: string -> string\n+\n (** Create a filename out of its components.\n *)\n val make: host_filename list -> host_filename\n@@ -57,5 +78,9 @@\n val add_extension: host_filename -> string -> host_filename\n \n \n+(** Unquote functions for filenames from 'ocamlfind query ...' *)\n+val ocamlfind_unquote: string -> string\n+\n+\n (** Map for host filename. {b Not exported.} *)\n module Map: OASISUtils.MapExt.S with type key = host_filename\n--- ./src/oasis/OASISObject.ml\n+++ ./src/oasis/OASISObject.ml\n@@ -54,6 +54,7 @@\n     ~ctxt\n     ~is_native\n     ~source_file_exists\n+    ~ext_obj\n     (cs, bs, obj) =\n \n   let find_module ext modul =\n@@ -67,12 +68,12 @@\n       | [ m ] -> (find_module \".cmi\" m,\n           find_module \".cmo\" m,\n           find_module \".cmx\" m,\n-          find_module \".o\" m,\n+          find_module ext_obj m,\n           fun x -> x)\n       | _ -> ([cs.cs_name ^ \".cmi\"],\n           [cs.cs_name ^ \".cmo\"],\n           [cs.cs_name ^ \".cmx\"],\n-          [cs.cs_name ^ \".o\"],\n+          [cs.cs_name ^ ext_obj],\n           OASISUnixPath.concat bs.bs_path)\n   in\n   List.map (List.map f) (\n--- ./src/oasis/OASISObject.mli\n+++ ./src/oasis/OASISObject.mli\n@@ -49,6 +49,7 @@\n   ctxt:OASISContext.t ->\n   is_native:bool ->\n   source_file_exists:(unix_filename -> bool) ->\n+  ext_obj:string ->\n   common_section * build_section * object_ ->\n   unix_filename list list\n \n--- ./src/oasis/OASISString.ml\n+++ ./src/oasis/OASISString.ml\n@@ -169,18 +169,34 @@\n   else\n     s\n \n-(* END EXPORT *)\n+let exists f str =\n+  let rec iter i =\n+    if i < 0 then\n+      false\n+    else if f str.[i] then\n+      true\n+    else\n+      iter (pred i)\n+  in\n+    iter (String.length str - 1)\n \n-(*  TODO: replace lowercase_ascii, capitalize_ascii and uncapitalize_ascii\n-    functions by String.*_ascii function when OCaml minimal version will be\n-    4.03.0.\n- *)\n+let is_digit c =\n+  '0' <= c && c <= '9'\n+\n+let is_alpha c =\n+  ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')\n \n let is_whitespace =\n   function\n     | ' ' | '\\r' | '\\n' | '\\t' -> true\n     |  _  -> false\n \n+(* END EXPORT *)\n+\n+(*  TODO: replace lowercase_ascii, capitalize_ascii and uncapitalize_ascii\n+    functions by String.*_ascii function when OCaml minimal version will be\n+    4.03.0.\n+ *)\n \n let tokenize ?(is_whitespace=is_whitespace) ?(tokens=[]) str =\n   let lst = ref [] in\n--- ./src/oasis/OASISValues.ml\n+++ ./src/oasis/OASISValues.ml\n@@ -494,6 +494,38 @@\n            space_separated.print (cmd :: args))\n     }\n \n+let command_line_warn =\n+  let c = command_line in\n+  let is_unix_centric_operator = function\n+    | \"&&\" | \";\" | \"||\" -> true\n+    | _ -> false\n+  in\n+\n+  let parse = ( fun ~ctxt s ->\n+                let (cmd,args) as cmd_args = c.parse ~ctxt s in\n+                  if String.length cmd > 0 && cmd.[0] <> '$' then\n+                    begin\n+                      OASISMessage.warning\n+                        ~ctxt\n+                        \"External commands may differ from platform to platform (%s)\"\n+                        cmd\n+                    end;\n+                  if List.exists is_unix_centric_operator args then\n+                    begin\n+                      OASISMessage.warning\n+                        ~ctxt\n+                        \"Command line '%s' seems to be *nix specific\"\n+                        (String.concat \"\" (cmd::args))\n+                    end;\n+                  cmd_args )\n+  in\n+    {\n+      parse ;\n+      update = c.update;\n+      print = c.print;\n+    }\n+\n+\n \n let command_line_options =\n   { parse = (fun ~ctxt:_ s -> POSIXShell.split s);\n--- ./src/oasis/OASISValues.mli\n+++ ./src/oasis/OASISValues.mli\n@@ -183,6 +183,9 @@\n val command_line: (string * string list) t\n \n \n+(** As above, but emmit warnings by dubious constructs *)\n+val command_line_warn : (string * string list) t\n+\n (** Arguments of command line programs.  See {!OASISUtils.POSIX.split}\n     for more information. *)\n val command_line_options: string list t\n--- ./src/oasis/OASISVersion.ml\n+++ ./src/oasis/OASISVersion.ml\n@@ -38,8 +38,8 @@\n \n \n (* Range of allowed characters *)\n-let is_digit c = '0' <= c && c <= '9'\n-let is_alpha c = ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')\n+let is_digit = OASISString.is_digit\n+let is_alpha = OASISString.is_alpha\n let is_special = function | '.' | '+' | '-' | '~' -> true | _ -> false\n \n \n--- ./src/plugins/custom/CustomPlugin.ml\n+++ ./src/plugins/custom/CustomPlugin.ml\n@@ -200,7 +200,7 @@\n       schema\n       id\n       nm\n-      command_line\n+      command_line_warn\n       (* TODO: remove when fun () -> s_ be replaced *)\n       (fun () -> s_ hlp)\n       data (fun _ t -> t.cmd_main)\n@@ -211,7 +211,7 @@\n       id\n       (nm^\"Clean\")\n       ~default:None\n-      (opt command_line)\n+      (opt command_line_warn)\n       (* TODO: remove when fun () -> s_ be replaced *)\n       (fun () -> s_ hlp_clean)\n       data (fun _ t -> t.cmd_clean)\n@@ -222,7 +222,7 @@\n       id\n       (nm^\"Distclean\")\n       ~default:None\n-      (opt command_line)\n+      (opt command_line_warn)\n       (* TODO: remove when fun () -> s_ be replaced *)\n       (fun () -> s_ hlp_distclean)\n       data (fun _ t -> t.cmd_distclean)\n@@ -426,7 +426,7 @@\n       id\n       \"Clean\"\n       ~default:None\n-      (opt command_line)\n+      (opt command_line_warn)\n       (fun () ->\n          s_ \"Run command to clean test step.\")\n       test_data (fun _ t -> t.cmd_clean)\n@@ -437,7 +437,7 @@\n       id\n       \"Distclean\"\n       ~default:None\n-      (opt command_line)\n+      (opt command_line_warn)\n       (fun () ->\n          s_ \"Run command to distclean test step.\")\n       test_data (fun _ t -> t.cmd_distclean)\n--- ./src/plugins/extra/devfiles/DevFilesPlugin.ml\n+++ ./src/plugins/extra/devfiles/DevFilesPlugin.ml\n@@ -201,7 +201,7 @@\n           Printf.bprintf buff\n             \"setup.exe: setup.ml%s\\n\\\n              \\tocamlfind ocamlopt -o $@%s setup.ml || ocamlfind ocamlc -o $@%s setup.ml || true\\n\\\n-             \\t$(RM) setup.cmi setup.cmo setup.cmx setup.o setup.cmt\\n\\n\"\n+             \\t$(RM) setup.cmi setup.cmo setup.cmx setup.o setup.obj setup.cmt\\n\\n\"\n             makefile_setup_deps packages packages;\n         end;\n         Buffer.add_string buff (\".PHONY: \"^(String.concat \" \" targets)^\"\\n\");\n@@ -226,7 +226,7 @@\n             Printf.sprintf\n               \"if [ ! -e setup.exe ] || [ _oasis -nt setup.exe ] || [ setup.ml -nt setup.exe ] || [ configure -nt setup.exe ]; then\\n  \\\n                ocamlfind ocamlopt -o setup.exe%s setup.ml || ocamlfind ocamlc -o setup.exe%s setup.ml || exit 1\\n  \\\n-               rm -f setup.cmi setup.cmo setup.cmx setup.o setup.cmt\\n\\\n+               rm -f setup.cmi setup.cmo setup.cmx setup.o setup.obj setup.cmt\\n\\\n                fi\\n\\\n                ./setup.exe -configure \\\"$@\\\"\"\n               packages packages\n--- ./src/plugins/internal/InternalInstallPlugin.ml\n+++ ./src/plugins/internal/InternalInstallPlugin.ml\n@@ -47,12 +47,21 @@\n let install_findlib_ev = \"install-findlib\"\n \n \n-(* TODO: this can be more generic and used elsewhere. *)\n-let win32_max_command_line_length = 8000\n-\n-\n let split_install_command ocamlfind findlib_name meta files =\n-  if Sys.os_type = \"Win32\" then\n+  if Sys.os_type <> \"Win32\" then\n+    [\"install\" :: findlib_name :: meta :: files]\n+  else\n+    let f s =\n+      OASISHostPath.quote ( OASISHostPath.of_unix s )\n+    in\n+    let files = List.map f files in\n+    let meta = f meta  in\n+    let win32_max_command_line_length =\n+      if OASISHostPath.use_bash () = false then\n+        7900\n+      else\n+        30000\n+    in\n     (* Arguments for the first command: *)\n     let first_args = [\"install\"; findlib_name; meta] in\n     (* Arguments for remaining commands: *)\n@@ -110,10 +119,11 @@\n                   let cmds = split other_args others in\n                   cmd :: cmds\n     in\n+    if files = [] then\n+      [ first_args ]\n+    else\n     (* The first command does not use -add: *)\n     split first_args files\n-  else\n-    [\"install\" :: findlib_name :: meta :: files]\n \n \n let install =\n@@ -534,7 +544,10 @@\n     if ev = install_file_ev then begin\n       if OASISFileUtil.file_exists_case data then begin\n         info (f_ \"Removing file '%s'\") data;\n-        Sys.remove data\n+        (try Sys.remove data\n+        with Sys_error _ when\n+            Sys.os_type = \"Win32\" &&\n+            Filename.basename data = \"setup.ml\" -> ());\n       end else begin\n         warning (f_ \"File '%s' doesn't exist anymore\") data\n       end\n--- ./src/plugins/ocamlbuild/MyOCamlbuildFindlib.ml\n+++ ./src/plugins/ocamlbuild/MyOCamlbuildFindlib.ml\n@@ -93,7 +93,9 @@\n   with Not_found -> s\n \n (* ocamlfind command *)\n-let ocamlfind x = S[Sh (exec_from_conf \"ocamlfind\"); x]\n+let ocamlfind x = S[Sh (\n+  Ocamlbuild_pack.Shell.quote_filename_if_needed\n+    (exec_from_conf \"ocamlfind\") ); x]\n \n (* This lists all supported packages. *)\n let find_packages () =\n--- ./src/plugins/ocamlbuild/OCamlbuildCommon.ml\n+++ ./src/plugins/ocamlbuild/OCamlbuildCommon.ml\n@@ -82,7 +82,7 @@\n \n       begin\n         match args.plugin_tags with\n-        | Some t -> [\"-plugin-tag\"; Filename.quote t]\n+        | Some t -> [\"-plugin-tag\"; OASISHostPath.quote t]\n         | None -> []\n       end;\n \n--- ./src/plugins/omake/OMakeEquip.ml\n+++ ./src/plugins/omake/OMakeEquip.ml\n@@ -197,6 +197,15 @@\n   subst [] ' ' 0\n \n \n+let file_exists_case fln =\n+  if Sys.file_exists fln = false then\n+    false\n+  else\n+    let dir = Filename.dirname fln in\n+    let base = Filename.basename fln in\n+    let files = Array.to_list (Sys.readdir dir) in\n+    List.mem base files\n+\n let fixup_module_case dir name =\n   let name_cap = OASISUnixPath.capitalize_file name in\n   let name_uncap = OASISUnixPath.uncapitalize_file name in\n@@ -205,7 +214,7 @@\n       List.find\n         (fun (name,ext) ->\n            let file = OASISUnixPath.concat dir (name ^ ext) in\n-           Sys.file_exists\n+           file_exists_case\n              (OASISHostPath.of_unix file)\n         )\n         [ name_cap, \".ml\";\n--- ./test/fake-ocamlfind/FakeOCamlfind.ml\n+++ ./test/fake-ocamlfind/FakeOCamlfind.ml\n@@ -30,4 +30,18 @@\n   in\n   let args = Sys.argv in\n     args.(0) <- real_ocamlfind;\n+    if Sys.os_type <> \"Win32\" then\n     Unix.execv real_ocamlfind args\n+    else\n+      let pid =\n+        Unix.create_process\n+          args.(0)\n+          args\n+          Unix.stdin\n+          Unix.stdout\n+          Unix.stderr\n+      in\n+      match snd (Unix.waitpid [] pid) with\n+      | Unix.WEXITED n -> exit n\n+      | Unix.WSIGNALED _ -> exit 2 (* like OCaml's uncaught exceptions *)\n+      | Unix.WSTOPPED _ -> exit 1\n--- ./test/test-common/TestCommon.ml\n+++ ./test/test-common/TestCommon.ml\n@@ -222,6 +222,17 @@\n       ~ctxt ?chdir ?foutput ?env ?exit_code ~use_stderr:true\n       cmd args\n \n+let file_exists_strict sfs fln =\n+  if sfs#file_exists fln = false then\n+    false\n+  else if Sys.os_type <> \"Win32\" then\n+    true\n+  else\n+    let fln_s = sfs#string_of_filename fln in\n+    let dir = Filename.dirname fln_s in\n+    let base = Filename.basename fln_s in\n+    let dirs = Array.to_list (Sys.readdir dir) in\n+    List.mem base dirs\n \n let assert_oasis_cli\n     ~ctxt\n--- ./test/test-common/TestFullUtils.ml\n+++ ./test/test-common/TestFullUtils.ml\n@@ -35,11 +35,11 @@\n \n \n let exec fn =\n-  if Sys.os_type = \"Win32\" then\n-    fn^\".exe\"\n-  else\n+  if Sys.os_type <> \"Win32\" ||\n+     Filename.check_suffix (OASISString.lowercase_ascii fn) \".exe\" then\n     fn\n-\n+  else\n+    fn ^ \".exe\"\n \n (* Print a short version of the filename *)\n let fn_printer ~root fn = FilePath.make_relative root fn\n@@ -192,9 +192,14 @@\n \n \n (* Create tree structure for a test project and copy it there. *)\n-let setup_test_directories test_ctxt ~is_native ~native_dynlink dn =\n+let setup_test_directories ?tmpdir_prefix test_ctxt ~is_native ~native_dynlink dn =\n   (* Create a temporary directory. *)\n-  let tmpdir = bracket_tmpdir test_ctxt in\n+  let prefix =\n+    match tmpdir_prefix with\n+      | None -> \"ounit-\"\n+      | Some x -> x\n+  in\n+  let tmpdir = bracket_tmpdir ~prefix test_ctxt in\n \n   (* Copy sources in this temporary directory. *)\n   let src_dir =\n@@ -256,7 +261,7 @@\n (* Precompile setup.ml to speedup the tests, if possible. *)\n let rec precompile_setup_ml test_ctxt t =\n   let setup_exe =\n-    Filename.concat t.precompile_dir (Filename.chop_extension setup_ml)\n+    exec (Filename.concat t.precompile_dir (Filename.chop_extension setup_ml))\n   in\n   let full_setup_ml = in_src_dir t setup_ml in\n \n@@ -280,16 +285,17 @@\n     let timer = timer_start \"precompile_setup_ml\" in\n     let exit_code =\n       FileUtil.cp ~force:FileUtil.Force [full_setup_ml] t.precompile_dir;\n-      Sys.command (\"ocamlfind ocamlc -o \"^setup_exe^\" \"\n-                   ^(Filename.concat t.precompile_dir setup_ml))\n+      let f1 = Filename.quote setup_exe in\n+      let f2 = Filename.quote (Filename.concat t.precompile_dir setup_ml) in\n+        Sys.command (\"ocamlfind ocamlc -o \"^f1^\" \"^f2)\n     in\n     timer_stop test_ctxt timer;\n     if exit_code = 0 then begin\n       (* Compilation succeed, update the digest *)\n-      logf test_ctxt `Info \"Compilation of setup.ml succeeds.\";\n+      logf test_ctxt `Info \"Compilation of setup.ml (%S) succeeds.\" setup_exe;\n       `Done_for (Digest.file full_setup_ml)\n     end else begin\n-      logf test_ctxt `Warning \"Compilation of setup.ml doesn't succeed.\";\n+      logf test_ctxt `Warning \"Compilation of setup.ml (%S) doesn't succeed.\" setup_exe;\n       `Not_possible\n     end\n   in\n@@ -308,7 +314,7 @@\n \n       | `Done_for digest ->\n           if (Digest.file full_setup_ml) = digest then begin\n-            Some (exec setup_exe)\n+            Some (setup_exe)\n           end else begin\n             t.setup_ml_precompiled <- compile ();\n             precompile_setup_ml test_ctxt t\n@@ -538,6 +544,10 @@\n   | InstalledBin of filename list\n \n \n+\n+let system =\n+  (BaseOCamlcConfig.var_define \"system\") ()\n+\n (* Register a set of files expected to be built. *)\n let register_installed_files test_ctxt t installed_files_lst =\n   let rec file_list =\n@@ -605,7 +615,12 @@\n                acc\n            | \"a\" ->\n                let fn =\n-                 if is_win32 then FilePath.replace_extension fn \"lib\" else fn\n+                 if not is_win32 then\n+                   fn\n+                 else\n+                   match system with\n+                     | \"mingw\" | \"mingw64\" -> fn\n+                     | _ -> FilePath.replace_extension fn \"lib\"\n                in\n                  if (* library matching the .cmxa *)\n                    t.is_native ||\n@@ -617,7 +632,7 @@\n                    (* no .a matching bytecode only library. *)\n                    acc\n            | \"so\" when is_win32 ->\n-               (FilePath.replace_extension fn \".dll\") :: acc\n+               (FilePath.replace_extension fn \"dll\") :: acc\n            | \"html\" when\n                FilePath.basename fn = \"index_extensions.html\" \n                && OASISVersion.StringVersion.compare t.ocaml_version \"4.02\" < 0 ->\n--- ./test/test-main/TestOASISLibrary.ml\n+++ ./test/test-main/TestOASISLibrary.ml\n@@ -44,7 +44,7 @@\n                   ~ctxt\n                   (cs, bs, lib)\n                   (fun fn ->\n-                     sfs#file_exists (OASISFileSystem.of_unix_filename fn))\n+                     file_exists_strict sfs (OASISFileSystem.of_unix_filename fn))\n               in\n               (List.flatten (List.rev_map snd lst)) @ acc\n             | Object _ | Executable _ | Flag _ | SrcRepo _ | Test _ | Doc _ ->\n--- ./test/test-main/TestOASISObject.ml\n+++ ./test/test-main/TestOASISObject.ml\n@@ -44,7 +44,7 @@\n                   ~ctxt\n                   (cs, bs, obj)\n                   (fun fn ->\n-                     sfs#file_exists (OASISFileSystem.of_unix_filename fn))\n+                     file_exists_strict sfs (OASISFileSystem.of_unix_filename fn))\n               in\n               (List.flatten (List.rev_map snd lst)) @ acc\n             | Library _ | Executable _ | Flag _ | SrcRepo _ | Test _ | Doc _ ->\n--- ./test/test-main/TestPluginOCamlbuild.ml\n+++ ./test/test-main/TestPluginOCamlbuild.ml\n@@ -27,6 +27,26 @@\n open OASISFileTemplate\n open TestFullUtils\n \n+let fln_normalize =\n+  if Sys.os_type <> \"Win32\" then\n+    fun a -> a\n+  else\n+    fun str ->\n+      let str =\n+        let str_lower = OASISString.lowercase_ascii str in\n+        if Filename.check_suffix str_lower \".exe\" then\n+          Filename.chop_extension str ^ \".exe\"\n+        else\n+          str\n+      in\n+      let len = String.length str in\n+      let b = Buffer.create len in\n+      for i = 0 to len - 1 do\n+        match String.get str i with\n+        | '/' -> Buffer.add_char b '\\\\'\n+        | c -> Buffer.add_char b c\n+      done;\n+      Buffer.contents b\n \n let all_tests =\n   [\n@@ -52,10 +72,12 @@\n        let env = BaseEnvLight.load ~filename:(in_src_dir t \"setup.data\") () in\n        let () =\n          assert_equal ~printer:(Printf.sprintf \"%S\")\n-           fake_ocamlfind\n-           (BaseEnvLight.var_get \"ocamlfind\" env);\n+           (fln_normalize fake_ocamlfind)\n+           (fln_normalize (BaseEnvLight.var_get \"ocamlfind\" env));\n          run_ocaml_setup_ml ~extra_env test_ctxt t [\"-build\"]\n        in\n+       (* ocamlbuild is called with -no-log on win32 *)\n+       skip_if (Sys.os_type = \"Win32\") \"UNIX test\";\n        let build_log =\n          file_content (in_src_dir t (Filename.concat \"_build\" \"_log\"))\n        in\n@@ -63,11 +85,15 @@\n          List.iter\n            (fun line ->\n               if OASISString.contains ~what:\"ocamlfind\" line then\n+                let what =\n+                  Ocamlbuild_pack.Shell.quote_filename_if_needed\n+                    fake_ocamlfind\n+                in\n                 assert_bool\n                   (Printf.sprintf\n                      \"line %S should starts with %S\"\n                      line fake_ocamlfind)\n-                  (OASISString.starts_with ~what:fake_ocamlfind line))\n+                  (OASISString.starts_with ~what line))\n            (OASISString.nsplit build_log '\\n'));\n \n     \"use-ocamlfind\",\n"
          }
        ],
        "opam": {
          "name": "oasis",
          "version": "0.4.11",
          "opam":
            "opam-version: \"2.0\"\nname: \"oasis\"\nversion: \"0.4.11\"\nsynopsis: \"Tooling for building OCaml libraries and applications\"\ndescription: \"\"\"\nOASIS generates a full configure, build and install system for your\napplication. It starts with a simple `_oasis` file at the toplevel of\nyour project and creates everything required.\n\nOASIS leverages existing OCaml tooling to perform most of it's work.\nIn fact, it might be more appropriate to think of it as simply the\nglue that binds these other subsystems together and coordinates the\nwork that they do. It should support the following tools:\n\n* OCamlbuild\n* OMake\n* OCamlMakefile (todo),\n* ocaml-autoconf (todo)\n\nIt also features a do-it-yourself command line invocation and an\ninternal configure/install scheme. Libraries are managed through\nfindlib. It has been tested on GNU Linux and Windows.\n\nIt also allows to have standard entry points and description. It helps\nto integrates your libraries and software with third parties tools\nlike OPAM.\"\"\"\nmaintainer: \"Sylvain Le Gall <sylvain@le-gall.net>\"\nauthors: \"Sylvain Le Gall\"\nlicense: \"LGPL-2.1 with OCaml linking exception\"\nhomepage: \"http://oasis.forge.ocamlcore.org/\"\nbug-reports: \"https://github.com/ocaml/oasis/issues\"\ndepends: [\n  \"ocaml\" {>= \"3.12.1\"}\n  \"base-unix\"\n  \"ocamlbuild\"\n  \"ocamlfind\" {build & >= \"1.3.1\"}\n  \"ocamlify\" {build}\n  \"ocamlmod\" {build}\n]\ndepopts: [\"benchmark\"]\nconflicts: [\n  \"benchmark\" {< \"1.2\"}\n  \"oasis-mirage\" {= \"0.3.0\"}\n  \"oasis-mirage\" {= \"0.3.0a\"}\n]\nbuild: [\n  [\"ocaml\" \"setup.ml\" \"-configure\" \"--prefix\" prefix]\n  [\"ocaml\" \"setup.ml\" \"-build\"]\n  [\"ocaml\" \"setup.ml\" \"-doc\"] {with-doc}\n]\ninstall: [\"ocaml\" \"setup.ml\" \"-install\"]\nremove: [\"ocaml\" \"%{etc}%/oasis/setup.ml\" \"-C\" \"%{etc}%/oasis\" \"-uninstall\"]\ndev-repo: \"git://github.com/ocaml/oasis.git\"\nextra-files: [\"oasis.install\" \"md5=ecc97c692bb2f70fe50124a88d705fde\"]\nurl {\n  src:\n    \"https://download.ocamlcore.org/oasis/oasis/0.4.11/oasis-0.4.11.tar.gz\"\n  checksum: \"md5=98492f4657c2c5b30e3b1bc945e58419\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < oasis-0.4.11.patch' : 'true'}"
              ],
              [
                "ocaml", "setup.ml", "-configure", "--prefix",
                "#{self.install}"
              ],
              [ "ocaml", "setup.ml", "-build" ]
            ],
            "install": [ [ "ocaml", "setup.ml", "-install" ] ]
          }
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-unix@opam:base",
        "@opam/ocamlbuild@opam:0.14.0", "@opam/ocamlfind@opam:1.8.0",
        "@opam/ocamlify@opam:0.0.1", "@opam/ocamlmod@opam:0.0.9",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/num@opam:1.1": {
      "record": {
        "name": "@opam/num",
        "version": "opam:1.1",
        "source":
          "archive:https://github.com/ocaml/num/archive/v1.1.tar.gz#md5:710cbe18b144955687a03ebab439ff2b",
        "files": [
          {
            "name": "findlib-install.patch",
            "content":
              "From 7688bb4fea24463c92e9c4870acc08495a4c77cb Mon Sep 17 00:00:00 2001\nFrom: David Allsopp <david.allsopp@metastack.com>\nDate: Wed, 10 Jan 2018 15:20:46 +0000\nSubject: [PATCH] Provide findlib-install target\n\nAllows installing the entire library using ocamlfind.\n---\n Makefile     | 10 +++++++++-\n src/META     | 17 -----------------\n src/META.in  | 19 +++++++++++++++++++\n src/Makefile | 17 +++++++++++++++--\n 4 files changed, 43 insertions(+), 20 deletions(-)\n delete mode 100644 src/META\n create mode 100644 src/META.in\n\ndiff --git a/Makefile b/Makefile\nindex 6a5d08f..b40e588 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -14,8 +14,16 @@ install:\n \t$(MAKE) -C src install\n \t$(MAKE) -C toplevel install\n \n+findlib-install:\n+\t$(MAKE) -C src findlib-install\n+\t$(MAKE) -C toplevel install\n+\n uninstall:\n \t$(MAKE) -C src uninstall\n \t$(MAKE) -C toplevel uninstall\n \n-.PHONY: all test clean install uninstall\n+findlib-uninstall:\n+\t$(MAKE) -C src findlib-uninstall\n+\t$(MAKE) -C toplevel uninstall\n+\n+.PHONY: all test clean install uninstall findlib-install findlib-uninstall\ndiff --git a/src/META b/src/META\ndeleted file mode 100644\nindex 66ac170..0000000\n--- a/src/META\n+++ /dev/null\n@@ -1,17 +0,0 @@\n-# This META is the one provided by findlib when the \"num\" library was\n-# part of the core OCaml distribution.  For backward compatibility,\n-# it installs into OCaml's standard library directory, not in a subdirectory\n-\n-requires = \"num.core\"\n-requires(toploop) = \"num.core,num-top\"\n-version = \"1.0\"\n-description = \"Arbitrary-precision rational arithmetic\"\n-package \"core\" (\n-  directory = \"^\"\n-  version = \"1.0\"\n-  browse_interfaces = \"\"\n-  archive(byte) = \"nums.cma\"\n-  archive(native) = \"nums.cmxa\"\n-  plugin(byte) = \"nums.cma\"\n-  plugin(native) = \"nums.cmxs\"\n-)\ndiff --git a/src/META.in b/src/META.in\nnew file mode 100644\nindex 0000000..b5678b7\n--- /dev/null\n+++ b/src/META.in\n@@ -0,0 +1,19 @@\n+# This META is the one provided by findlib when the \"num\" library was\n+# part of the core OCaml distribution.  For backward compatibility,\n+# it is installed into OCaml's standard library directory. If the\n+# directory line below is removed, then it's installed in a\n+# subdirectory, as normal for a findlib package.\n+\n+requires = \"num.core\"\n+requires(toploop) = \"num.core,num-top\"\n+version = \"1.0\"\n+description = \"Arbitrary-precision rational arithmetic\"\n+package \"core\" (\n+  directory = \"^\"\n+  version = \"1.0\"\n+  browse_interfaces = \"\"\n+  archive(byte) = \"nums.cma\"\n+  archive(native) = \"nums.cmxa\"\n+  plugin(byte) = \"nums.cma\"\n+  plugin(native) = \"nums.cmxs\"\n+)\ndiff --git a/src/Makefile b/src/Makefile\nindex 97dc074..ff271fe 100644\n--- a/src/Makefile\n+++ b/src/Makefile\n@@ -80,21 +80,34 @@ endif\n ifeq \"$(NATDYNLINK)\" \"true\"\n TOINSTALL+=nums.cmxs\n endif\n+ifeq \"$(SUPPORTS_SHARED_LIBRARIES)\" \"true\"\n TOINSTALL_STUBS=dllnums.$(SO)\n+else\n+TOINSTALL_STUBS=\n+endif\n \n install:\n+\tcp META.in META\n \t$(OCAMLFIND) install num META\n+\trm -f META\n \t$(INSTALL_DATA) $(TOINSTALL) $(STDLIBDIR)\n ifeq \"$(SUPPORTS_SHARED_LIBRARIES)\" \"true\"\n \t$(INSTALL_DLL) $(TOINSTALL_STUBS) $(STDLIBDIR)/stublibs\n endif\n \n-uninstall:\n+findlib-install:\n+\tgrep -Fv '^' META.in > META\n+\t$(OCAMLFIND) install num META $(TOINSTALL) $(TOINSTALL_STUBS)\n+\trm -f META\n+\n+findlib-uninstall:\n+\t$(OCAMLFIND) remove num\n+\n+uninstall: findlib-uninstall\n \tcd $(STDLIBDIR) && rm -f $(TOINSTALL)\n ifeq \"$(SUPPORTS_SHARED_LIBRARIES)\" \"true\"\n \tcd $(STDLIBDIR)/stublibs && rm -f $(TOINSTALL_STUBS) \n endif\n-\t$(OCAMLFIND) remove num\n \n clean:\n \trm -f *.cm[ioxta] *.cmx[as] *.cmti *.$(O) *.$(A) *.$(SO)\n-- \n2.14.1\n\n"
          },
          {
            "name": "installation-warning.patch",
            "content":
              "From db8d748b2cad0adc2698e9fcf28727083a711bae Mon Sep 17 00:00:00 2001\nFrom: David Allsopp <david.allsopp@metastack.com>\nDate: Wed, 24 Jan 2018 16:01:56 +0000\nSubject: [PATCH] Warn about installations broken by previous faulty package\n\n---\n Makefile | 33 +++++++++++++++++++++++++++++++++\n 1 file changed, 33 insertions(+)\n\ndiff --git a/Makefile b/Makefile\nindex b40e588..d4dcd70 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -14,9 +14,42 @@ install:\n \t$(MAKE) -C src install\n \t$(MAKE) -C toplevel install\n \n+OCAMLFIND_DIR:=$(dir $(shell command -v ocamlfind 2>/dev/null))\n+OCAMLC_DIR:=$(dir $(shell command -v ocamlc 2>/dev/null))\n+NUM_INSTALLED:=$(shell ocamlfind query num 2>/dev/null)\n+\n+ifeq ($(NUM_INSTALLED),)\n+# The num findlib package is not already present - wohoo!\n+OUR_FAULT=no\n+else\n+ifeq ($(OCAMLFIND_DIR),$(OCAMLC_DIR))\n+# The num findlib package is present, but ocamlc and ocamlfind are in the\n+# same place, which means that either we're looking at a system-installed\n+# ocamlfind (which isn't supported), or the user has done something else\n+# nefarious and doesn't deserve our sympathy (or, at least, our potentially\n+# unhelpful advice)\n+OUR_FAULT=no\n+else\n+# The num findlib package package is present, and ocamlc and ocamlfind reside\n+# in different directories, which means that we're almost certainly looking at\n+# a system switch which has been damaged by a previous num package installation\n+# on an OS which didn't protect the system lib directory.\n+OUR_FAULT=probably\n+endif\n+endif\n+\n findlib-install:\n+ifeq ($(OUR_FAULT),no)\n \t$(MAKE) -C src findlib-install\n \t$(MAKE) -C toplevel install\n+else\n+\t@echo \"\\033[0;31m[ERROR]\\033[m It appears that the num library was previously installed to your system\"\n+\t@echo \"        compiler's lib directory, probably by a faulty opam package.\"\n+\t@echo \"        You will need to remove arith_flags.*, arith_status.*, big_int.*,\"\n+\t@echo \"        int_misc.*, nat.*, num.*, ratio.*, nums.*, libnums.* and\"\n+\t@echo \"        stublibs/dllnums.* from $(shell ocamlc -where).\"\n+\t@false\n+endif\n \n uninstall:\n \t$(MAKE) -C src uninstall\n-- \n2.14.1\n\n"
          },
          {
            "name": "num-1.1.patch",
            "content":
              "--- ./src/Makefile\n+++ ./src/Makefile\n@@ -80,7 +80,7 @@\n ifeq \"$(NATDYNLINK)\" \"true\"\n TOINSTALL+=nums.cmxs\n endif\n ifeq \"$(SUPPORTS_SHARED_LIBRARIES)\" \"true\"\n-TOINSTALL_STUBS=dllnums.$(SO)\n+TOINSTALL_STUBS=dllnums$(EXT_DLL)\n else\n TOINSTALL_STUBS=\n@@ -112,7 +112,7 @@\n endif\n \n clean:\n-\trm -f *.cm[ioxta] *.cmx[as] *.cmti *.$(O) *.$(A) *.$(SO)\n+\trm -f *.cm[ioxta] *.cmx[as] *.cmti *.$(O) *.$(A) *$(EXE_DLL)\n \n depend:\n \t$(OCAMLDEP) -slash *.mli *.ml > .depend\n"
          }
        ],
        "opam": {
          "name": "num",
          "version": "1.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"num\"\nversion: \"1.1\"\nsynopsis:\n  \"The legacy Num library for arbitrary-precision integer and rational arithmetic\"\nmaintainer: \"Xavier Leroy <xavier.leroy@inria.fr>\"\nauthors: [\"Valérie Ménissier-Morain\" \"Pierre Weis\" \"Xavier Leroy\"]\nlicense: \"LGPL 2.1 with OCaml linking exception\"\nhomepage: \"https://github.com/ocaml/num/\"\nbug-reports: \"https://github.com/ocaml/num/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.06.0\"}\n  \"ocamlfind\" {build & >= \"1.7.3\"}\n]\nconflicts: [\"base-num\"]\nbuild: make\ninstall: [\n  make\n  \"install\" {!ocaml:preinstalled}\n  \"findlib-install\" {ocaml:preinstalled}\n]\nremove: [\n  make\n  \"uninstall\" {!ocaml:preinstalled}\n  \"findlib-uninstall\" {ocaml:preinstalled}\n]\npatches: [\"findlib-install.patch\" \"installation-warning.patch\"]\ndev-repo: \"git+https://github.com/ocaml/num.git\"\nextra-files: [\n  [\"installation-warning.patch\" \"md5=93c92bf6da6bae09d068da42b1bbaaac\"]\n  [\"findlib-install.patch\" \"md5=3163a4c3f8dd084653eeb64d95311a2a\"]\n]\nurl {\n  src: \"https://github.com/ocaml/num/archive/v1.1.tar.gz\"\n  checksum: \"md5=710cbe18b144955687a03ebab439ff2b\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < num-1.1.patch' : 'true'}"
              ],
              [ "make" ]
            ],
            "install": [ [ "make", "findlib-install" ] ],
            "exportedEnv": {
              "CAML_LD_LIBRARY_PATH": {
                "val":
                  "#{self.install / 'lib' / 'num' : $CAML_LD_LIBRARY_PATH}",
                "scope": "global",
                "exclusive": false
              }
            }
          }
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlfind@opam:1.8.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/merlin-extend@opam:0.3": {
      "record": {
        "name": "@opam/merlin-extend",
        "version": "opam:0.3",
        "source":
          "archive:https://github.com/let-def/merlin-extend/archive/v0.3.tar.gz#md5:9c6dfd4f53328f02f12fcc265f4e2dda",
        "files": [
          {
            "name": "merlin-extend-winfix.patch",
            "content":
              "--- ./extend_helper.ml\n+++ ./extend_helper.ml\n@@ -1,13 +1,6 @@\n-(*pp cppo -V OCAML:`ocamlc -version` *)\n open Parsetree\n open Extend_protocol\n \n-#if OCAML_VERSION < (4, 3, 0)\n-# define CONST_STRING Asttypes.Const_string\n-#else\n-# define CONST_STRING Parsetree.Pconst_string\n-#endif\n-\n (** Default implementation for [Reader_def.print_outcome] using\n     [Oprint] from compiler-libs *)\n let print_outcome_using_oprint ppf = function\n@@ -28,7 +21,7 @@\n       pstr_loc = Location.none;\n       pstr_desc = Pstr_eval ({\n           pexp_loc = Location.none;\n-          pexp_desc = Pexp_constant (CONST_STRING (msg, None));\n+          pexp_desc = Pexp_constant (Parsetree.Pconst_string (msg, None));\n           pexp_attributes = [];\n         }, []);\n     }]\n@@ -112,7 +105,7 @@\n   let msg = match payload with\n     | PStr [{\n         pstr_desc = Pstr_eval ({\n-            pexp_desc = Pexp_constant (CONST_STRING (msg, _));\n+            pexp_desc = Pexp_constant (Parsetree.Pconst_string (msg, _));\n           }, _);\n       }] -> msg\n     | _ -> \"Warning: extension produced an incorrect syntax-error node\"\n"
          }
        ],
        "opam": {
          "name": "merlin-extend",
          "version": "0.3",
          "opam":
            "opam-version: \"2.0\"\nname: \"merlin-extend\"\nversion: \"0.3\"\nsynopsis: \"A protocol to provide custom frontend to Merlin\"\ndescription: \"\"\"\nThis protocol allows to replace the OCaml frontend of Merlin.\nIt extends what used to be done with the `-pp' flag to handle a few more cases.\"\"\"\nmaintainer: \"Frederic Bour <frederic.bour@lakaban.net>\"\nauthors: \"Frederic Bour <frederic.bour@lakaban.net>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/let-def/merlin-extend\"\nbug-reports: \"https://github.com/let-def/merlin-extend\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"ocamlfind\" {build}\n  \"cppo\" {build}\n]\nflags: light-uninstall\nbuild: make\ninstall: [make \"install\"]\nremove: [\"ocamlfind\" \"remove\" \"merlin_extend\"]\ndev-repo: \"git+https://github.com/let-def/merlin-extend.git\"\nurl {\n  src: \"https://github.com/let-def/merlin-extend/archive/v0.3.tar.gz\"\n  checksum: \"md5=9c6dfd4f53328f02f12fcc265f4e2dda\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < merlin-extend-winfix.patch' : 'true'}"
              ],
              [ "make" ]
            ]
          }
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/cppo@opam:1.6.5",
        "@opam/ocamlfind@opam:1.8.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/merlin@opam:3.2.2": {
      "record": {
        "name": "@opam/merlin",
        "version": "opam:3.2.2",
        "source":
          "archive:https://github.com/ocaml/merlin/releases/download/v3.2.2/merlin-v3.2.2.tbz#md5:ede35b65f8ac9c440cfade5445662c54",
        "files": [],
        "opam": {
          "name": "merlin",
          "version": "3.2.2",
          "opam":
            "opam-version: \"2.0\"\nname: \"merlin\"\nversion: \"3.2.2\"\nsynopsis: \"Installation with Opam\"\ndescription: \"\"\"\nIf you have a working [Opam](https://opam.ocaml.org/) installation, Merlin is only two commands away:\n\n```shell\nopam install merlin\nopam user-setup install\n```\n\n[opam-user-setup](https://github.com/OCamlPro/opam-user-setup) takes care of configuring Emacs and Vim to make best use of your current install.\n\nYou can also [configure the editor](#editor-setup) yourself, if you prefer.\"\"\"\nmaintainer: \"defree@gmail.com\"\nauthors: \"The Merlin team\"\nhomepage: \"https://github.com/ocaml/merlin\"\nbug-reports: \"https://github.com/ocaml/merlin/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.1\" & < \"4.08\"}\n  \"dune\" {build}\n  \"ocamlfind\" {>= \"1.5.2\"}\n  \"yojson\"\n  \"craml\" {with-test}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n]\npost-messages:\n  \"\"\"\nmerlin installed.\n\nQuick setup for VIM\n-------------------\nAppend this to your .vimrc to add merlin to vim's runtime-path:\n  let g:opamshare = substitute(system('opam config var share'),'\\\\n$','','''')\n  execute \"set rtp+=\" . g:opamshare . \"/merlin/vim\"\n\nAlso run the following line in vim to index the documentation:\n  :execute \"helptags \" . g:opamshare . \"/merlin/vim/doc\"\n\nQuick setup for EMACS\n-------------------\nAdd opam emacs directory to your load-path by appending this to your .emacs:\n  (let ((opam-share (ignore-errors (car (process-lines \"opam\" \"config\" \"var\" \"share\")))))\n   (when (and opam-share (file-directory-p opam-share))\n    ;; Register Merlin\n    (add-to-list 'load-path (expand-file-name \"emacs/site-lisp\" opam-share))\n    (autoload 'merlin-mode \"merlin\" nil t nil)\n    ;; Automatically start it in OCaml buffers\n    (add-hook 'tuareg-mode-hook 'merlin-mode t)\n    (add-hook 'caml-mode-hook 'merlin-mode t)\n    ;; Use opam switch to lookup ocamlmerlin binary\n    (setq merlin-command 'opam)))\n\nTake a look at https://github.com/ocaml/merlin for more information\n\nQuick setup with opam-user-setup\n--------------------------------\n\nOpam-user-setup support Merlin.\n\n  $ opam user-setup install\n\nshould take care of basic setup.\nSee https://github.com/OCamlPro/opam-user-setup\"\"\"\n    {success & !user-setup:installed}\ndev-repo: \"git+https://github.com/ocaml/merlin.git\"\nurl {\n  src:\n    \"https://github.com/ocaml/merlin/releases/download/v3.2.2/merlin-v3.2.2.tbz\"\n  checksum: \"md5=ede35b65f8ac9c440cfade5445662c54\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.7.3",
        "@opam/ocamlfind@opam:1.8.0", "@opam/yojson@opam:1.7.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/menhir@opam:20181113": {
      "record": {
        "name": "@opam/menhir",
        "version": "opam:20181113",
        "source":
          "archive:https://gitlab.inria.fr/fpottier/menhir/repository/20181113/archive.tar.gz#md5:69ce441a06ea131cd43e7b44c4303f3c",
        "files": [],
        "opam": {
          "name": "menhir",
          "version": "20181113",
          "opam":
            "opam-version: \"2.0\"\nname: \"menhir\"\nversion: \"20181113\"\nsynopsis: \"An LR(1) parser generator\"\nmaintainer: \"francois.pottier@inria.fr\"\nauthors: [\n  \"François Pottier <francois.pottier@inria.fr>\"\n  \"Yann Régis-Gianas <yrg@pps.univ-paris-diderot.fr>\"\n]\nhomepage: \"http://gitlab.inria.fr/fpottier/menhir\"\nbug-reports: \"menhir@inria.fr\"\ndepends: [\n  \"ocaml\" {>= \"4.02\"}\n  \"ocamlfind\" {build}\n  \"ocamlbuild\" {build}\n]\nbuild: [\n  make\n  \"-f\"\n  \"Makefile\"\n  \"PREFIX=%{prefix}%\"\n  \"USE_OCAMLFIND=true\"\n  \"docdir=%{doc}%/menhir\"\n  \"libdir=%{lib}%/menhir\"\n  \"mandir=%{man}%/man1\"\n]\ninstall: [\n  make\n  \"-f\"\n  \"Makefile\"\n  \"install\"\n  \"PREFIX=%{prefix}%\"\n  \"docdir=%{doc}%/menhir\"\n  \"libdir=%{lib}%/menhir\"\n  \"mandir=%{man}%/man1\"\n]\nremove: [\n  make\n  \"-f\"\n  \"Makefile\"\n  \"uninstall\"\n  \"PREFIX=%{prefix}%\"\n  \"docdir=%{doc}%/menhir\"\n  \"libdir=%{lib}%/menhir\"\n  \"mandir=%{man}%/man1\"\n]\ndev-repo: \"git+https://gitlab.inria.fr/fpottier/menhir.git\"\nurl {\n  src:\n    \"https://gitlab.inria.fr/fpottier/menhir/repository/20181113/archive.tar.gz\"\n  checksum: [\n    \"md5=69ce441a06ea131cd43e7b44c4303f3c\"\n    \"sha512=4ddefcd71d305bfb933a4056da57e36c13c99ec6dfcc4695814798fbbd78b4d65828381ebcb0e58c4c0394105ac763af3d475474e05e408f7080315bc3cf6176\"\n  ]\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.14.0",
        "@opam/ocamlfind@opam:1.8.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/lwt@opam:4.1.0": {
      "record": {
        "name": "@opam/lwt",
        "version": "opam:4.1.0",
        "source":
          "archive:https://github.com/ocsigen/lwt/archive/4.1.0.tar.gz#md5:e919bee206f18b3d49250ecf9584fde7",
        "files": [],
        "opam": {
          "name": "lwt",
          "version": "4.1.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"lwt\"\nversion: \"4.1.0\"\nsynopsis: \"Promises, concurrency, and parallelized I/O\"\ndescription: \"\"\"\nA promise is a value that may become determined in the future.\n\nLwt provides typed, composable promises. Promises that are resolved by I/O are\nresolved by Lwt in parallel.\n\nMeanwhile, OCaml code, including code creating and waiting on promises, runs in\na single thread by default. This reduces the need for locks or other\nsynchronization primitives. Code can be run in parallel on an opt-in basis.\"\"\"\nmaintainer: [\n  \"Anton Bachin <antonbachin@yahoo.com>\"\n  \"Mauricio Fernandez <mfp@acm.org>\"\n  \"Simon Cruanes <simon.cruanes.2007@m4x.org>\"\n]\nauthors: [\"Jérôme Vouillon\" \"Jérémie Dimino\"]\nlicense: \"LGPL with OpenSSL linking exception\"\nhomepage: \"https://github.com/ocsigen/lwt\"\ndoc: \"https://ocsigen.org/lwt/manual/\"\nbug-reports: \"https://github.com/ocsigen/lwt/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.0\"}\n  \"cppo\" {build & >= \"1.1.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta14\"}\n  \"ocamlfind\" {build & >= \"1.7.3-1\"}\n  \"result\"\n]\ndepopts: [\"base-threads\" \"base-unix\" \"conf-libev\"]\nconflicts: [\n  \"ocaml-variants\" {= \"4.02.1+BER\"}\n]\nbuild: [\n  [\"ocaml\" \"src/util/configure.ml\" \"-use-libev\" \"%{conf-libev:installed}%\"]\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n]\nmessages: [\n  \"For the PPX, please install package lwt_ppx\" {!lwt_ppx:installed}\n  \"For the Camlp4 syntax, please install package lwt_camlp4\"\n    {camlp4:installed & !lwt_camlp4:installed}\n  \"For Lwt_log and Lwt_daemon, please install package lwt_log\"\n    {!lwt_log:installed}\n]\ndev-repo: \"git+https://github.com/ocsigen/lwt.git\"\nurl {\n  src: \"https://github.com/ocsigen/lwt/archive/4.1.0.tar.gz\"\n  checksum: \"md5=e919bee206f18b3d49250ecf9584fde7\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/cppo@opam:1.6.5",
        "@opam/jbuilder@opam:transition", "@opam/ocamlfind@opam:1.8.0",
        "@opam/result@opam:1.3", "ocaml@4.7.1004"
      ]
    },
    "@opam/jst-config@opam:v0.12.0": {
      "record": {
        "name": "@opam/jst-config",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/jst-config-v0.12.0.tar.gz#md5:c91b626b2187d29fade6d61d4413c735",
        "files": [],
        "opam": {
          "name": "jst-config",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"jst-config\"\nversion: \"v0.12.0\"\nsynopsis: \"Compile-time configuration for Jane Street libraries\"\ndescription: \"\"\"\nDefines compile-time constants used in Jane Street libraries such as Base, Core, and\nAsync.\n\nThis package has an unstable interface; it is intended only to share configuration between\ndifferent packages from Jane Street. Future updates may not be backward-compatible, and we\ndo not recommend using this package directly.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/jst-config\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/jst-config/index.html\"\nbug-reports: \"https://github.com/janestreet/jst-config/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_assert\" {>= \"v0.12\" & < \"v0.13\"}\n  \"stdio\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\ndepopts: [\"base-native-int63\"]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/jst-config.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/jst-config-v0.12.0.tar.gz\"\n  checksum: \"md5=c91b626b2187d29fade6d61d4413c735\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_assert@opam:v0.12.0",
        "@opam/stdio@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/jbuilder@opam:transition": {
      "record": {
        "name": "@opam/jbuilder",
        "version": "opam:transition",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "jbuilder",
          "version": "transition",
          "opam":
            "opam-version: \"2.0\"\nname: \"jbuilder\"\nversion: \"transition\"\nsynopsis:\n  \"This is a transition package, jbuilder is now named dune. Use the dune\"\ndescription: \"package instead.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/ocaml/dune\"\nbug-reports: \"https://github.com/ocaml/dune/issues\"\ndepends: [\"ocaml\" \"dune\"]\npost-messages:\n  \"Jbuilder has been renamed and the jbuilder package is now a transition package. Use the dune package instead.\"\ndev-repo: \"git+https://github.com/ocaml/dune.git\"",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.7.3", "ocaml@4.7.1004"
      ]
    },
    "@opam/jane-street-headers@opam:v0.12.0": {
      "record": {
        "name": "@opam/jane-street-headers",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/jane-street-headers-v0.12.0.tar.gz#md5:d939c1bcf9ae050c684e19c2ea069acb",
        "files": [],
        "opam": {
          "name": "jane-street-headers",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"jane-street-headers\"\nversion: \"v0.12.0\"\nsynopsis: \"Jane Street C header files\"\ndescription: \"C header files shared between the various Jane Street packages\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/jane-street-headers\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/jane-street-headers/index.html\"\nbug-reports: \"https://github.com/janestreet/jane-street-headers/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/jane-street-headers.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/jane-street-headers-v0.12.0.tar.gz\"\n  checksum: \"md5=d939c1bcf9ae050c684e19c2ea069acb\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.7.3", "ocaml@4.7.1004"
      ]
    },
    "@opam/httpaf@opam:0.5.0": {
      "record": {
        "name": "@opam/httpaf",
        "version": "opam:0.5.0",
        "source":
          "archive:https://github.com/inhabitedtype/httpaf/archive/0.5.0.tar.gz#md5:74c6e897658e820006106f45f736381f",
        "files": [],
        "opam": {
          "name": "httpaf",
          "version": "0.5.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"httpaf\"\nversion: \"0.5.0\"\nsynopsis:\n  \"A high-performance, memory-efficient, and scalable web server for OCaml\"\ndescription: \"\"\"\nhttp/af implements the HTTP 1.1 specification with respect to parsing,\nserialization, and connection pipelining as a state machine that is agnostic to\nthe underlying IO mechanism, and is therefore portable across many platform.\nIt uses the Angstrom and Faraday libraries to implement the parsing and\nserialization layers of the HTTP standard, hence the name.\"\"\"\nmaintainer: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nauthors: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nlicense: \"BSD-3-clause\"\nhomepage: \"https://github.com/inhabitedtype/httpaf\"\nbug-reports: \"https://github.com/inhabitedtype/httpaf/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.03.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"alcotest\" {with-test}\n  \"angstrom\" {>= \"0.9.0\"}\n  \"faraday\" {>= \"0.5.0\"}\n  \"result\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/inhabitedtype/httpaf.git\"\nurl {\n  src: \"https://github.com/inhabitedtype/httpaf/archive/0.5.0.tar.gz\"\n  checksum: \"md5=74c6e897658e820006106f45f736381f\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/angstrom@opam:0.11.0",
        "@opam/faraday@opam:0.7.0", "@opam/jbuilder@opam:transition",
        "@opam/result@opam:1.3", "ocaml@4.7.1004"
      ]
    },
    "@opam/fieldslib@opam:v0.12.0": {
      "record": {
        "name": "@opam/fieldslib",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/fieldslib-v0.12.0.tar.gz#md5:7cb44f0fb396b6645fc9965ebb8e6741",
        "files": [],
        "opam": {
          "name": "fieldslib",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"fieldslib\"\nversion: \"v0.12.0\"\nsynopsis:\n  \"Syntax extension to define first class values representing record fields, to get and set record fields, iterate and fold over all fields of a record and create new record values\"\ndescription: \"\"\"\nPart of Jane Street's Core library\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/fieldslib\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/fieldslib/index.html\"\nbug-reports: \"https://github.com/janestreet/fieldslib/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/fieldslib.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/fieldslib-v0.12.0.tar.gz\"\n  checksum: \"md5=7cb44f0fb396b6645fc9965ebb8e6741\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "ocaml@4.7.1004"
      ]
    },
    "@opam/faraday-lwt-unix@opam:0.7.0": {
      "record": {
        "name": "@opam/faraday-lwt-unix",
        "version": "opam:0.7.0",
        "source":
          "archive:https://github.com/inhabitedtype/faraday/archive/0.7.0.tar.gz#md5:d37a5f1663570f9c75f0b4b4cdb7ec9c",
        "files": [],
        "opam": {
          "name": "faraday-lwt-unix",
          "version": "0.7.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"faraday-lwt-unix\"\nversion: \"0.7.0\"\nsynopsis: \"Lwt_unix support for Faraday\"\nmaintainer: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nauthors: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nlicense: \"BSD-3-clause\"\nhomepage: \"https://github.com/inhabitedtype/faraday\"\nbug-reports: \"https://github.com/inhabitedtype/faraday/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"faraday-lwt\"\n  \"lwt\" {>= \"2.7.0\"}\n  \"base-unix\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/inhabitedtype/faraday.git\"\nurl {\n  src: \"https://github.com/inhabitedtype/faraday/archive/0.7.0.tar.gz\"\n  checksum: \"md5=d37a5f1663570f9c75f0b4b4cdb7ec9c\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-unix@opam:base",
        "@opam/faraday-lwt@opam:0.7.0", "@opam/jbuilder@opam:transition",
        "@opam/lwt@opam:4.1.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/faraday-lwt@opam:0.7.0": {
      "record": {
        "name": "@opam/faraday-lwt",
        "version": "opam:0.7.0",
        "source":
          "archive:https://github.com/inhabitedtype/faraday/archive/0.7.0.tar.gz#md5:d37a5f1663570f9c75f0b4b4cdb7ec9c",
        "files": [],
        "opam": {
          "name": "faraday-lwt",
          "version": "0.7.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"faraday-lwt\"\nversion: \"0.7.0\"\nsynopsis: \"Lwt support for Faraday\"\nmaintainer: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nauthors: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nlicense: \"BSD-3-clause\"\nhomepage: \"https://github.com/inhabitedtype/faraday\"\nbug-reports: \"https://github.com/inhabitedtype/faraday/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"faraday\" {>= \"0.5.0\"}\n  \"lwt\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/inhabitedtype/faraday.git\"\nurl {\n  src: \"https://github.com/inhabitedtype/faraday/archive/0.7.0.tar.gz\"\n  checksum: \"md5=d37a5f1663570f9c75f0b4b4cdb7ec9c\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/faraday@opam:0.7.0",
        "@opam/jbuilder@opam:transition", "@opam/lwt@opam:4.1.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/faraday@opam:0.7.0": {
      "record": {
        "name": "@opam/faraday",
        "version": "opam:0.7.0",
        "source":
          "archive:https://github.com/inhabitedtype/faraday/archive/0.7.0.tar.gz#md5:d37a5f1663570f9c75f0b4b4cdb7ec9c",
        "files": [],
        "opam": {
          "name": "faraday",
          "version": "0.7.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"faraday\"\nversion: \"0.7.0\"\nsynopsis: \"A library for writing fast and memory-efficient serializers.\"\ndescription: \"\"\"\nFaraday is a library for writing fast and memory-efficient serializers. Its\ncore type and related operation gives the user fine-grained control over\ncopying and allocation behavior while serializing user-defined types, and\npresents the output in a form that makes it possible to use vectorized write\noperations, such as the writev system call, or any other platform or\napplication-specific output APIs.\"\"\"\nmaintainer: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nauthors: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nlicense: \"BSD-3-clause\"\nhomepage: \"https://github.com/inhabitedtype/faraday\"\nbug-reports: \"https://github.com/inhabitedtype/faraday/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"alcotest\" {with-test & >= \"0.4.1\"}\n  \"bigstringaf\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/inhabitedtype/faraday.git\"\nurl {\n  src: \"https://github.com/inhabitedtype/faraday/archive/0.7.0.tar.gz\"\n  checksum: \"md5=d37a5f1663570f9c75f0b4b4cdb7ec9c\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/bigstringaf@opam:0.4.0",
        "@opam/jbuilder@opam:transition", "ocaml@4.7.1004"
      ]
    },
    "@opam/emoji@opam:1.1.0": {
      "record": {
        "name": "@opam/emoji",
        "version": "opam:1.1.0",
        "source":
          "archive:https://github.com/fxfactorial/ocaml-emoji/archive/v1.1.0.tar.gz#md5:b5f1570c58417aa3ef9d72df5dc32eac",
        "files": [],
        "opam": {
          "name": "emoji",
          "version": "1.1.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"emoji\"\nversion: \"1.1.0\"\nsynopsis: \"Use emojis by name\"\ndescription: \"\"\"\nNames for byte code sequences of 2389 emojis\n\n```ocaml\n#require \"emoji\";;\n\nlet () =\n  let ar = Emoji.all_emojis |> Array.of_list in\n  for i = 0 to Array.length ar - 1 do\n    if (i mod 80 = 0) then print_newline ();\n    print_string ar.(i);\n  done;\n  print_endline Emoji.camel;\n  print_endline Emoji.two_hump_camel\n```\"\"\"\nmaintainer: \"Edgar Aroutiounian <edgar.factorial@gmail.com>\"\nauthors: \"Edgar Aroutiounian <edgar.factorial@gmail.com>\"\nlicense: \"BSD-3-clause\"\nhomepage: \"https://github.com/fxfactorial/ocaml-emoji\"\nbug-reports: \"https://github.com/fxfactorial/ocaml-emoji/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.0\"}\n  \"oasis\" {build & >= \"0.4.7\"}\n  \"ocamlbuild\" {build}\n  \"ocamlfind\" {build}\n]\nflags: light-uninstall\nbuild: [\n  [\"oasis\" \"setup\"]\n  [\"ocaml\" \"setup.ml\" \"-configure\" \"--prefix\" prefix]\n  [\"ocaml\" \"setup.ml\" \"-build\"]\n  [\"oasis\" \"setup\"] {with-test}\n  [\"ocaml\" \"setup.ml\" \"-configure\" \"--enable-tests\"] {with-test}\n  [\"ocaml\" \"setup.ml\" \"-build\"] {with-test}\n  [\"ocaml\" \"setup.ml\" \"-test\"] {with-test}\n]\ninstall: [\"ocaml\" \"setup.ml\" \"-install\"]\nremove: [\"ocamlfind\" \"remove\" \"emoji\"]\ndev-repo: \"git+https://github.com/fxfactorial/ocaml-emoji.git\"\nurl {\n  src: \"https://github.com/fxfactorial/ocaml-emoji/archive/v1.1.0.tar.gz\"\n  checksum: \"md5=b5f1570c58417aa3ef9d72df5dc32eac\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/oasis@opam:0.4.11",
        "@opam/ocamlbuild@opam:0.14.0", "@opam/ocamlfind@opam:1.8.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/easy-format@opam:1.3.1": {
      "record": {
        "name": "@opam/easy-format",
        "version": "opam:1.3.1",
        "source":
          "archive:https://github.com/mjambon/easy-format/archive/v1.3.1.tar.gz#md5:4e163700fb88fdcd6b8976c3a216c8ea",
        "files": [],
        "opam": {
          "name": "easy-format",
          "version": "1.3.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"easy-format\"\nversion: \"1.3.1\"\nsynopsis:\n  \"High-level and functional interface to the Format module of the OCaml standard library\"\nmaintainer: \"martin@mjambon.com\"\nauthors: \"Martin Jambon\"\nhomepage: \"http://mjambon.com/easy-format.html\"\nbug-reports: \"https://github.com/mjambon/easy-format/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"jbuilder\" {build}\n]\nbuild: [\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/mjambon/easy-format.git\"\nurl {\n  src: \"https://github.com/mjambon/easy-format/archive/v1.3.1.tar.gz\"\n  checksum: \"md5=4e163700fb88fdcd6b8976c3a216c8ea\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/dune@opam:1.7.3": {
      "record": {
        "name": "@opam/dune",
        "version": "opam:1.7.3",
        "source":
          "archive:https://github.com/ocaml/dune/releases/download/1.7.3/dune-1.7.3.tbz#md5:644f0c1419d70b9daccac4b4e5664523",
        "files": [],
        "opam": {
          "name": "dune",
          "version": "1.7.3",
          "opam":
            "opam-version: \"2.0\"\nname: \"dune\"\nversion: \"1.7.3\"\nsynopsis: \"Fast, portable and opinionated build system\"\ndescription: \"\"\"\ndune is a build system that was designed to simplify the release of\nJane Street packages. It reads metadata from \"dune\" files following a\nvery simple s-expression syntax.\n\ndune is fast, it has very low-overhead and support parallel builds on\nall platforms. It has no system dependencies, all you need to build\ndune and packages using dune is OCaml. You don't need or make or bash\nas long as the packages themselves don't use bash explicitly.\n\ndune supports multi-package development by simply dropping multiple\nrepositories into the same directory.\n\nIt also supports multi-context builds, such as building against\nseveral opam roots/switches simultaneously. This helps maintaining\npackages across several versions of OCaml and gives cross-compilation\nfor free.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/ocaml/dune\"\nbug-reports: \"https://github.com/ocaml/dune/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02\"}\n  \"base-unix\"\n  \"base-threads\"\n]\nconflicts: [\n  \"jbuilder\" {!= \"transition\"}\n  \"odoc\" {< \"1.3.0\"}\n]\nbuild: [\n  [\"ocaml\" \"configure.ml\" \"--libdir\" lib] {opam-version < \"2\"}\n  [\"ocaml\" \"bootstrap.ml\"]\n  [\"./boot.exe\" \"--release\" \"--subst\"] {pinned}\n  [\"./boot.exe\" \"--release\" \"-j\" jobs]\n]\ndev-repo: \"git+https://github.com/ocaml/dune.git\"\nurl {\n  src: \"https://github.com/ocaml/dune/releases/download/1.7.3/dune-1.7.3.tbz\"\n  checksum: \"md5=644f0c1419d70b9daccac4b4e5664523\"\n}",
          "override": {
            "build": [
              [ "ocaml", "bootstrap.ml" ],
              [ "./boot.exe", "--release", "-j", "4" ]
            ]
          }
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-threads@opam:base",
        "@opam/base-unix@opam:base", "ocaml@4.7.1004"
      ]
    },
    "@opam/dolog@opam:3.0": {
      "record": {
        "name": "@opam/dolog",
        "version": "opam:3.0",
        "source":
          "archive:https://github.com/UnixJunkie/dolog/archive/v3.0.tar.gz#md5:595a43d870278001b0e6cf99c75ab4a4",
        "files": [],
        "opam": {
          "name": "dolog",
          "version": "3.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"dolog\"\nversion: \"3.0\"\nsynopsis: \"the dumb OCaml logger (lazy and optionally colorful)\"\nmaintainer: \"unixjunkie@sdf.org\"\nauthors: \"Francois Berenger\"\nlicense: \"BSD\"\nhomepage: \"https://github.com/UnixJunkie/dolog\"\nbug-reports: \"https://github.com/UnixJunkie/dolog/issues\"\ndepends: [\n  \"ocaml\"\n  \"ocamlfind\"\n  \"base-unix\"\n  \"ocamlbuild\" {build}\n]\nflags: light-uninstall\nbuild: [\n  [\"ocaml\" \"setup.ml\" \"-configure\" \"--prefix\" prefix]\n  [\"ocaml\" \"setup.ml\" \"-build\"]\n]\ninstall: [\"ocaml\" \"setup.ml\" \"-install\"]\nremove: [\"ocamlfind\" \"remove\" \"dolog\"]\ndev-repo: \"git+https://github.com/UnixJunkie/dolog.git\"\nurl {\n  src: \"https://github.com/UnixJunkie/dolog/archive/v3.0.tar.gz\"\n  checksum: \"md5=595a43d870278001b0e6cf99c75ab4a4\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-unix@opam:base",
        "@opam/ocamlbuild@opam:0.14.0", "@opam/ocamlfind@opam:1.8.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/cppo@opam:1.6.5": {
      "record": {
        "name": "@opam/cppo",
        "version": "opam:1.6.5",
        "source":
          "archive:https://github.com/mjambon/cppo/archive/v1.6.5.tar.gz#md5:1cd25741d31417995b0973fe0b6f6c82",
        "files": [],
        "opam": {
          "name": "cppo",
          "version": "1.6.5",
          "opam":
            "opam-version: \"2.0\"\nname: \"cppo\"\nversion: \"1.6.5\"\nsynopsis: \"Equivalent of the C preprocessor for OCaml programs\"\nmaintainer: \"martin@mjambon.com\"\nauthors: \"Martin Jambon\"\nlicense: \"BSD-3-Clause\"\nhomepage: \"https://github.com/mjambon/cppo\"\nbug-reports: \"https://github.com/mjambon/cppo/issues\"\ndepends: [\n  \"ocaml\"\n  \"jbuilder\" {build & >= \"1.0+beta17\"}\n  \"base-unix\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/mjambon/cppo.git\"\nurl {\n  src: \"https://github.com/mjambon/cppo/archive/v1.6.5.tar.gz\"\n  checksum: \"md5=1cd25741d31417995b0973fe0b6f6c82\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-unix@opam:base",
        "@opam/jbuilder@opam:transition", "ocaml@4.7.1004"
      ]
    },
    "@opam/core_kernel@opam:v0.12.0": {
      "record": {
        "name": "@opam/core_kernel",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/core_kernel-v0.12.0.tar.gz#md5:e7adb97d39a93ccd542b9d015659c480",
        "files": [],
        "opam": {
          "name": "core_kernel",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"core_kernel\"\nversion: \"v0.12.0\"\nsynopsis: \"Industrial strength alternative to OCaml's standard library\"\ndescription: \"\"\"\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\n\nCore_kernel is the system-independent part of Core.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/core_kernel\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/core_kernel/index.html\"\nbug-reports: \"https://github.com/janestreet/core_kernel/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.07.0\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"base_bigstring\" {>= \"v0.12\" & < \"v0.13\"}\n  \"base_quickcheck\" {>= \"v0.12\" & < \"v0.13\"}\n  \"bin_prot\" {>= \"v0.12\" & < \"v0.13\"}\n  \"jst-config\" {>= \"v0.12\" & < \"v0.13\"}\n  \"fieldslib\" {>= \"v0.12\" & < \"v0.13\"}\n  \"jane-street-headers\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_assert\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_hash\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_inline_test\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_jane\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_message\" {>= \"v0.12\" & < \"v0.13\"}\n  \"sexplib\" {>= \"v0.12\" & < \"v0.13\"}\n  \"splittable_random\" {>= \"v0.12\" & < \"v0.13\"}\n  \"stdio\" {>= \"v0.12\" & < \"v0.13\"}\n  \"time_now\" {>= \"v0.12\" & < \"v0.13\"}\n  \"typerep\" {>= \"v0.12\" & < \"v0.13\"}\n  \"variantslib\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/core_kernel.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/core_kernel-v0.12.0.tar.gz\"\n  checksum: \"md5=e7adb97d39a93ccd542b9d015659c480\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/base_bigstring@opam:v0.12.0",
        "@opam/base_quickcheck@opam:v0.12.0", "@opam/bin_prot@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/fieldslib@opam:v0.12.0",
        "@opam/jane-street-headers@opam:v0.12.0",
        "@opam/jst-config@opam:v0.12.0", "@opam/ppx_assert@opam:v0.12.0",
        "@opam/ppx_base@opam:v0.12.0", "@opam/ppx_hash@opam:v0.12.0",
        "@opam/ppx_inline_test@opam:v0.12.0", "@opam/ppx_jane@opam:v0.12.0",
        "@opam/ppx_sexp_conv@opam:v0.12.0",
        "@opam/ppx_sexp_message@opam:v0.12.0", "@opam/sexplib@opam:v0.12.0",
        "@opam/splittable_random@opam:v0.12.0", "@opam/stdio@opam:v0.12.0",
        "@opam/time_now@opam:v0.12.0", "@opam/typerep@opam:v0.12.0",
        "@opam/variantslib@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/core@opam:v0.12.0": {
      "record": {
        "name": "@opam/core",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/core-v0.12.0.tar.gz#md5:22ea4ee001f178c0f9d878c145530fd3",
        "files": [],
        "opam": {
          "name": "core",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"core\"\nversion: \"v0.12.0\"\nsynopsis: \"Industrial strength alternative to OCaml's standard library\"\ndescription: \"\"\"\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/core\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/core/index.html\"\nbug-reports: \"https://github.com/janestreet/core/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.07.0\"}\n  \"jst-config\" {>= \"v0.12\" & < \"v0.13\"}\n  \"core_kernel\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_jane\" {>= \"v0.12\" & < \"v0.13\"}\n  \"sexplib\" {>= \"v0.12\" & < \"v0.13\"}\n  \"base-threads\"\n  \"dune\" {build & >= \"1.5.1\"}\n  \"spawn\" {>= \"v0.12\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndepexts: [\"linux-headers\"] {os-distribution = \"alpine\"}\ndev-repo: \"git+https://github.com/janestreet/core.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/core-v0.12.0.tar.gz\"\n  checksum: \"md5=22ea4ee001f178c0f9d878c145530fd3\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-threads@opam:base",
        "@opam/core_kernel@opam:v0.12.0", "@opam/dune@opam:1.7.3",
        "@opam/jst-config@opam:v0.12.0", "@opam/ppx_jane@opam:v0.12.0",
        "@opam/sexplib@opam:v0.12.0", "@opam/spawn@opam:v0.12.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/conf-which@opam:1": {
      "record": {
        "name": "@opam/conf-which",
        "version": "opam:1",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "conf-which",
          "version": "1",
          "opam":
            "opam-version: \"2.0\"\nname: \"conf-which\"\nversion: \"1\"\nsynopsis: \"Virtual package relying on which\"\ndescription:\n  \"This package can only install if the which program is installed on the system.\"\nmaintainer: \"unixjunkie@sdf.org\"\nauthors: \"Carlo Wood\"\nlicense: \"GPL-2+\"\nhomepage: \"http://www.gnu.org/software/which/\"\nbug-reports: \"https://github.com/ocaml/opam-repository/issues\"\nflags: conf\nbuild: [\"which\" \"which\"]\ndepexts: [\n  [\"which\"] {os-distribution = \"centos\"}\n  [\"which\"] {os-distribution = \"fedora\"}\n  [\"which\"] {os-family = \"suse\"}\n  [\"debianutils\"] {os-distribution = \"debian\"}\n  [\"debianutils\"] {os-distribution = \"ubuntu\"}\n  [\"which\"] {os-distribution = \"nixos\"}\n  [\"which\"] {os-distribution = \"archlinux\"}\n]",
          "override": null
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1" ]
    },
    "@opam/conf-m4@opam:1": {
      "record": {
        "name": "@opam/conf-m4",
        "version": "opam:1",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "conf-m4",
          "version": "1",
          "opam":
            "opam-version: \"2.0\"\nname: \"conf-m4\"\nversion: \"1\"\nsynopsis: \"Virtual package relying on m4\"\ndescription:\n  \"This package can only install if the m4 binary is installed on the system.\"\nmaintainer: \"tim@gfxmonk.net\"\nauthors: \"GNU Project\"\nlicense: \"GPL-3\"\nhomepage: \"http://www.gnu.org/software/m4/m4.html\"\nbug-reports: \"https://github.com/ocaml/opam-repository/issues\"\nflags: conf\nbuild: [\"sh\" \"-exc\" \"echo | m4\"]\ndepexts: [\n  [\"m4\"] {os-distribution = \"debian\"}\n  [\"m4\"] {os-distribution = \"ubuntu\"}\n  [\"m4\"] {os-distribution = \"fedora\"}\n  [\"m4\"] {os-distribution = \"rhel\"}\n  [\"m4\"] {os-distribution = \"centos\"}\n  [\"m4\"] {os-distribution = \"alpine\"}\n  [\"m4\"] {os-distribution = \"nixos\"}\n  [\"m4\"] {os-family = \"suse\"}\n  [\"m4\"] {os-distribution = \"oraclelinux\"}\n  [\"m4\"] {os-distribution = \"archlinux\"}\n]",
          "override": null
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1" ]
    },
    "@opam/biniou@opam:1.2.0": {
      "record": {
        "name": "@opam/biniou",
        "version": "opam:1.2.0",
        "source":
          "archive:https://github.com/mjambon/biniou/archive/v1.2.0.tar.gz#md5:f3e92358e832ed94eaf23ce622ccc2f9",
        "files": [],
        "opam": {
          "name": "biniou",
          "version": "1.2.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"biniou\"\nversion: \"1.2.0\"\nsynopsis:\n  \"Binary data format designed for speed, safety, ease of use and backward compatibility as protocols evolve\"\nmaintainer: \"martin@mjambon.com\"\nauthors: \"Martin Jambon\"\nlicense: \"BSD-3-Clause\"\nhomepage: \"https://github.com/mjambon/biniou\"\nbug-reports: \"https://github.com/mjambon/biniou/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"conf-which\" {build}\n  \"jbuilder\" {build & >= \"1.0+beta7\"}\n  \"easy-format\"\n]\nbuild: [\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/mjambon/biniou.git\"\nurl {\n  src: \"https://github.com/mjambon/biniou/archive/v1.2.0.tar.gz\"\n  checksum: \"md5=f3e92358e832ed94eaf23ce622ccc2f9\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/conf-which@opam:1",
        "@opam/easy-format@opam:1.3.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/bin_prot@opam:v0.12.0": {
      "record": {
        "name": "@opam/bin_prot",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/bin_prot-v0.12.0.tar.gz#md5:55bc9848a76db15a4c54a59a2fdf8035",
        "files": [],
        "opam": {
          "name": "bin_prot",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"bin_prot\"\nversion: \"v0.12.0\"\nsynopsis: \"A binary protocol generator\"\ndescription: \"\"\"\nPart of Jane Street's Core library\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/bin_prot\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/bin_prot/index.html\"\nbug-reports: \"https://github.com/janestreet/bin_prot/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_compare\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_custom_printf\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_fields_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_variants_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\ndepopts: [\"mirage-xen-ocaml\"]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/bin_prot.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/bin_prot-v0.12.0.tar.gz\"\n  checksum: \"md5=55bc9848a76db15a4c54a59a2fdf8035\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_compare@opam:v0.12.0",
        "@opam/ppx_custom_printf@opam:v0.12.0",
        "@opam/ppx_fields_conv@opam:v0.12.0",
        "@opam/ppx_sexp_conv@opam:v0.12.0",
        "@opam/ppx_variants_conv@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/bigstringaf@opam:0.4.0": {
      "record": {
        "name": "@opam/bigstringaf",
        "version": "opam:0.4.0",
        "source":
          "archive:https://github.com/inhabitedtype/bigstringaf/releases/download/0.4.0/bigstringaf-0.4.0.tbz#md5:d1ff1ab40aad48627686f9b8c02d985a",
        "files": [],
        "opam": {
          "name": "bigstringaf",
          "version": "0.4.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"bigstringaf\"\nversion: \"0.4.0\"\nsynopsis: \"Bigstring intrinsics and fast blits based on memcpy/memmove\"\ndescription: \"\"\"\nBigstring intrinsics and fast blits based on memcpy/memmove\n\nThe OCaml compiler has a bunch of intrinsics for Bigstrings, but they're not\nwidely-known, sometimes misused, and so programs that use Bigstrings are slower\nthan they have to be. And even if a library got that part right and exposed the\nintrinsics properly, the compiler doesn't have any fast blits between\nBigstrings and other string-like types.\n\nSo here they are. Go crazy.\"\"\"\nmaintainer: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nauthors: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nlicense: \"BSD-3-clause\"\nhomepage: \"https://github.com/inhabitedtype/bigstringaf\"\nbug-reports: \"https://github.com/inhabitedtype/bigstringaf/issues\"\ndepends: [\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"alcotest\" {with-test}\n  \"base-bigarray\"\n  \"ocaml\" {>= \"4.03.0\"}\n]\ndepopts: [\"mirage-xen-posix\" \"ocaml-freestanding\"]\nconflicts: [\n  \"mirage-xen-posix\" {< \"3.1.0\"}\n  \"ocaml-freestanding\" {< \"0.4.1\"}\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/inhabitedtype/bigstringaf.git\"\nurl {\n  src:\n    \"https://github.com/inhabitedtype/bigstringaf/releases/download/0.4.0/bigstringaf-0.4.0.tbz\"\n  checksum: \"md5=d1ff1ab40aad48627686f9b8c02d985a\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-bigarray@opam:base",
        "@opam/jbuilder@opam:transition", "ocaml@4.7.1004"
      ]
    },
    "@opam/base_quickcheck@opam:v0.12.0": {
      "record": {
        "name": "@opam/base_quickcheck",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/base_quickcheck-v0.12.0.tar.gz#md5:500849f9d7e573e1d58b1e48bdd9e370",
        "files": [],
        "opam": {
          "name": "base_quickcheck",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"base_quickcheck\"\nversion: \"v0.12.0\"\nsynopsis:\n  \"Randomized testing framework, designed for compatibility with Base\"\ndescription: \"\"\"\nBase_quickcheck provides randomized testing in the style of Haskell's Quickcheck library,\nwith support for built-in types as well as types provided by Base.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/base_quickcheck\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/base_quickcheck/index.html\"\nbug-reports: \"https://github.com/janestreet/base_quickcheck/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_fields_conv\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_let\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_sexp_message\" {>= \"v0.12\" & < \"v0.13\"}\n  \"splittable_random\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n  \"ppxlib\" {>= \"0.5.0\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/base_quickcheck.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/base_quickcheck-v0.12.0.tar.gz\"\n  checksum: \"md5=500849f9d7e573e1d58b1e48bdd9e370\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_base@opam:v0.12.0",
        "@opam/ppx_fields_conv@opam:v0.12.0", "@opam/ppx_let@opam:v0.12.0",
        "@opam/ppx_sexp_message@opam:v0.12.0", "@opam/ppxlib@opam:0.5.0",
        "@opam/splittable_random@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/base_bigstring@opam:v0.12.0": {
      "record": {
        "name": "@opam/base_bigstring",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/base_bigstring-v0.12.0.tar.gz#md5:372b4a589cacacdf308272995d2daab6",
        "files": [],
        "opam": {
          "name": "base_bigstring",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"base_bigstring\"\nversion: \"v0.12.0\"\nsynopsis: \"String type based on [Bigarray], for use in I/O and C-bindings\"\ndescription:\n  \"String type based on [Bigarray], for use in I/O and C-bindings.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/base_bigstring\"\ndoc:\n  \"https://ocaml.janestreet.com/ocaml-core/latest/doc/base_bigstring/index.html\"\nbug-reports: \"https://github.com/janestreet/base_bigstring/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.07.0\"}\n  \"base\" {>= \"v0.12\" & < \"v0.13\"}\n  \"ppx_jane\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/base_bigstring.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/base_bigstring-v0.12.0.tar.gz\"\n  checksum: \"md5=372b4a589cacacdf308272995d2daab6\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.12.0",
        "@opam/dune@opam:1.7.3", "@opam/ppx_jane@opam:v0.12.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/base-unix@opam:base": {
      "record": {
        "name": "@opam/base-unix",
        "version": "opam:base",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "base-unix",
          "version": "base",
          "opam":
            "opam-version: \"2.0\"\nname: \"base-unix\"\nversion: \"base\"\nsynopsis: \"\"\ndescription: \"Unix library distributed with the OCaml compiler\"\nmaintainer: \"https://github.com/ocaml/opam-repository/issues\"",
          "override": null
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1" ]
    },
    "@opam/base-threads@opam:base": {
      "record": {
        "name": "@opam/base-threads",
        "version": "opam:base",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "base-threads",
          "version": "base",
          "opam":
            "opam-version: \"2.0\"\nname: \"base-threads\"\nversion: \"base\"\nsynopsis: \"\"\ndescription: \"Threads library distributed with the OCaml compiler\"\nmaintainer: \"https://github.com/ocaml/opam-repository/issues\"",
          "override": null
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1" ]
    },
    "@opam/base-bytes@opam:base": {
      "record": {
        "name": "@opam/base-bytes",
        "version": "opam:base",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "base-bytes",
          "version": "base",
          "opam":
            "opam-version: \"2.0\"\nname: \"base-bytes\"\nversion: \"base\"\nsynopsis: \"Bytes library distributed with the OCaml compiler\"\nmaintainer: \" \"\nauthors: \" \"\nhomepage: \" \"\ndepends: [\n  \"ocaml\" {>= \"4.02.0\"}\n  \"ocamlfind\" {>= \"1.5.3\"}\n]",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlfind@opam:1.8.0",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/base-bigarray@opam:base": {
      "record": {
        "name": "@opam/base-bigarray",
        "version": "opam:base",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "base-bigarray",
          "version": "base",
          "opam":
            "opam-version: \"2.0\"\nname: \"base-bigarray\"\nversion: \"base\"\nsynopsis: \"\"\ndescription: \"Bigarray library distributed with the OCaml compiler\"\nmaintainer: \"https://github.com/ocaml/opam-repository/issues\"",
          "override": null
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1" ]
    },
    "@opam/base@opam:v0.12.0": {
      "record": {
        "name": "@opam/base",
        "version": "opam:v0.12.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.12/files/base-v0.12.0.tar.gz#md5:e522176bc2cca7c12745539fa72356ad",
        "files": [],
        "opam": {
          "name": "base",
          "version": "v0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"base\"\nversion: \"v0.12.0\"\nsynopsis: \"Full standard library replacement for OCaml\"\ndescription: \"\"\"\nFull standard library replacement for OCaml\n\nBase is a complete and portable alternative to the OCaml standard\nlibrary. It provides all standard functionalities one would expect\nfrom a language standard library. It uses consistent conventions\nacross all of its module.\n\nBase aims to be usable in any context. As a result system dependent\nfeatures such as I/O are not offered by Base. They are instead\nprovided by companion libraries such as stdio:\n\n  https://github.com/janestreet/stdio\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/janestreet/base\"\ndoc: \"https://ocaml.janestreet.com/ocaml-core/latest/doc/base/index.html\"\nbug-reports: \"https://github.com/janestreet/base/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.2\" & < \"4.08.0\"}\n  \"sexplib0\" {>= \"v0.12\" & < \"v0.13\"}\n  \"dune\" {build & >= \"1.5.1\"}\n]\ndepopts: [\"base-native-int63\"]\nbuild: [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/base.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.12/files/base-v0.12.0.tar.gz\"\n  checksum: \"md5=e522176bc2cca7c12745539fa72356ad\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.7.3",
        "@opam/sexplib0@opam:v0.12.0", "ocaml@4.7.1004"
      ]
    },
    "@opam/angstrom@opam:0.11.0": {
      "record": {
        "name": "@opam/angstrom",
        "version": "opam:0.11.0",
        "source":
          "archive:https://github.com/inhabitedtype/angstrom/archive/0.11.0.tar.gz#md5:f28ef135ecf1c7b5683d9d482528699a",
        "files": [],
        "opam": {
          "name": "angstrom",
          "version": "0.11.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"angstrom\"\nversion: \"0.11.0\"\nsynopsis: \"Parser combinators built for speed and memory-efficiency\"\ndescription: \"\"\"\nAngstrom is a parser-combinator library that makes it easy to write efficient,\nexpressive, and reusable parsers suitable for high-performance applications. It\nexposes monadic and applicative interfaces for composition, and supports\nincremental input through buffered and unbuffered interfaces. Both interfaces\ngive the user total control over the blocking behavior of their application,\nwith the unbuffered interface enabling zero-copy IO. Parsers are backtracking by\ndefault and support unbounded lookahead.\"\"\"\nmaintainer: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nauthors: \"Spiros Eliopoulos <spiros@inhabitedtype.com>\"\nlicense: \"BSD-3-clause\"\nhomepage: \"https://github.com/inhabitedtype/angstrom\"\nbug-reports: \"https://github.com/inhabitedtype/angstrom/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.03.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"alcotest\" {with-test & >= \"0.8.1\"}\n  \"bigstringaf\"\n  \"result\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/inhabitedtype/angstrom.git\"\nurl {\n  src: \"https://github.com/inhabitedtype/angstrom/archive/0.11.0.tar.gz\"\n  checksum: \"md5=f28ef135ecf1c7b5683d9d482528699a\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/bigstringaf@opam:0.4.0",
        "@opam/jbuilder@opam:transition", "@opam/result@opam:1.3",
        "ocaml@4.7.1004"
      ]
    },
    "@opam/ANSITerminal@opam:0.8.1": {
      "record": {
        "name": "@opam/ANSITerminal",
        "version": "opam:0.8.1",
        "source":
          "archive:https://github.com/Chris00/ANSITerminal/releases/download/0.8.1/ANSITerminal-0.8.1.tbz#md5:d9909496b5e47c75227453256198d1ae",
        "files": [],
        "opam": {
          "name": "ANSITerminal",
          "version": "0.8.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"ANSITerminal\"\nversion: \"0.8.1\"\nsynopsis: \"Basic control of ANSI compliant terminals and the windows shell\"\ndescription: \"\"\"\nANSITerminal is a module allowing to use the colors and cursor\nmovements on ANSI terminals. It also works on the windows shell (but\nthis part is currently work in progress).\"\"\"\nmaintainer: \"Christophe Troestler <Christophe.Troestler@umons.ac.be>\"\nauthors: [\"Christophe Troestler\" \"Vincent Hugot\"]\nlicense: \"LGPL-3.0 with OCaml linking exception\"\ntags: \"terminal\"\nhomepage: \"https://github.com/Chris00/ANSITerminal\"\ndoc: \"https://Chris00.github.io/ANSITerminal/doc\"\nbug-reports: \"https://github.com/Chris00/ANSITerminal/issues\"\ndepends: [\n  \"ocaml\"\n  \"dune\" {build}\n  \"base-bytes\"\n  \"base-unix\"\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"dune\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git+https://github.com/Chris00/ANSITerminal.git\"\nurl {\n  src:\n    \"https://github.com/Chris00/ANSITerminal/releases/download/0.8.1/ANSITerminal-0.8.1.tbz\"\n  checksum: \"md5=d9909496b5e47c75227453256198d1ae\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-bytes@opam:base",
        "@opam/base-unix@opam:base", "@opam/dune@opam:1.7.3",
        "ocaml@4.7.1004"
      ]
    },
    "@esy-ocaml/substs@0.0.1": {
      "record": {
        "name": "@esy-ocaml/substs",
        "version": "0.0.1",
        "source":
          "archive:https://registry.npmjs.org/@esy-ocaml/substs/-/substs-0.0.1.tgz#sha1:59ebdbbaedcda123fc7ed8fb2b302b7d819e9a46",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "@esy-ocaml/reason@3.4.0": {
      "record": {
        "name": "@esy-ocaml/reason",
        "version": "3.4.0",
        "source":
          "archive:https://registry.npmjs.org/@esy-ocaml/reason/-/reason-3.4.0.tgz#sha1:8c84c183a95d489a3e82ff0465effe4b56ff12af",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "@opam/dune@opam:1.7.3", "@opam/menhir@opam:20181113",
        "@opam/merlin-extend@opam:0.3",
        "@opam/ocaml-migrate-parsetree@opam:1.2.0",
        "@opam/ocamlfind@opam:1.8.0", "@opam/result@opam:1.3",
        "ocaml@4.7.1004"
      ]
    },
    "@cnakazawa/watch@1.0.3": {
      "record": {
        "name": "@cnakazawa/watch",
        "version": "1.0.3",
        "source":
          "archive:https://registry.npmjs.org/@cnakazawa/watch/-/watch-1.0.3.tgz#sha1:099139eaec7ebf07a27c1786a3ff64f39464d2ef",
        "files": [],
        "opam": null
      },
      "dependencies": [ "exec-sh@0.3.2", "minimist@1.2.0" ]
    }
  }
}