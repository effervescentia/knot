interface Todo {
  text: string;
  active: boolean;
  complete: boolean;
}

enum FilterType {
  None;
  Active;
  Complete;
}

state Todos {
  todos: Todo[] = [];

  get activeCount -> $todos.filter(({ complete }) -> complete).length();

  get inactiveCount -> $todos.length() - $activeCount;

  get filteredTodos(type) -> switch(type) {
    FilterType.None -> $todos;
    FilterType.Active -> $todos.filter(({ active }) -> active);
    FilterType.Complete -> $todos.filter(({ complete }) -> complete);
  }

  mut add(todo) -> $todos.push(todo);

  mut toggle(index) -> $todos[index].active.toggle();

  mut toggleAll -> $todos.each(({ active }) -> active.toggle());

  mut remove(index) -> $todos.remove(index);

  mut update(index, text) -> $todos[index].text = text;

  mut clearCompleted -> $todos = $todos.filter(({ complete }) -> !complete);
}