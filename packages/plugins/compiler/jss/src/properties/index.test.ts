// tslint:disable:no-expression-statement
import test from 'ava';
import properties from '../properties';
import animationProperties from './animation';
import backgroundProperties from './background';
import borderProperties from './border';
import fontProperties from './font';
import gridProperties from './grid';
import insetProperties from './inset';
import marginProperties from './margin';
import maskProperties from './mask';
import outlineProperties from './outline';
import paddingProperties from './padding';
import scrollProperties from './scroll';
import textProperties from './text';
import transformProperties from './transform';
import transitionProperties from './transition';

test('includes keys', t => {
  const keys = Object.keys(properties);

  t.plan(keys.length);

  [
    ...Object.keys(animationProperties),
    ...Object.keys(backgroundProperties),
    ...Object.keys(borderProperties),
    ...Object.keys(fontProperties),
    ...Object.keys(gridProperties),
    ...Object.keys(insetProperties),
    ...Object.keys(marginProperties),
    ...Object.keys(maskProperties),
    ...Object.keys(outlineProperties),
    ...Object.keys(paddingProperties),
    ...Object.keys(scrollProperties),
    ...Object.keys(textProperties),
    ...Object.keys(transformProperties),
    ...Object.keys(transitionProperties),

    'alignContent',
    'alignItems',
    'alignSelf',
    'all',
    'blockSize',
    'bottom',
    'boxDecorationBreak',
    'boxShadow',
    'boxSizing',
    'breakAfter',
    'breakBefore',
    'breakInside',
    'captionSide',
    'caretColor',
    'clear',
    'clip',
    'clipPath',
    'color',
    'colorAdjust',
    'columnCount',
    'columnFill',
    'columnGap',
    'columnRule',
    'columnRuleColor',
    'columnRuleStyle',
    'columnRuleWidth',
    'columns',
    'content',
    'counterIncrement',
    'counterReset',
    'cursor',
    'direction',
    'display',
    'emptyCells',
    'filter',
    'flex',
    'flexBasis',
    'flexDirection',
    'flexFlow',
    'flexGrow',
    'flexShrink',
    'flexWrap',
    'float',
    'gap',
    'grad',
    'hangingPunctuation',
    'height',
    'hyphens',
    'imageOrientation',
    'imageRendering',
    'inherit',
    'initial',
    'inlineSize',
    'isolation',
    'justifyContent',
    'justifyItems',
    'justifySelf',
    'left',
    'letterSpacing',
    'lineBreak',
    'lineHeight',
    'listStyle',
    'listStyleImage',
    'listStylePosition',
    'listStyleType',
    'maxHeight',
    'maxWidth',
    'maxZoom',
    'minBlockSize',
    'minHeight',
    'minInlineSize',
    'minWidth',
    'minZoom',
    'mixBlendMode',
    'negative',
    'objectFit',
    'objectPosition',
    'opacity',
    'order',
    'orientation',
    'orphans',
    'overflow',
    'overflowWrap',
    'overflowX',
    'overflowY',
    'pad',
    'pageBreakAfter',
    'pageBreakAfterBefore',
    'pageBreakAfterInside',
    'perspective',
    'perspectiveOrigin',
    'placeContent',
    'placeItems',
    'placeSelf',
    'pointerEvents',

    'position',
    'static',
    'relative',
    'absolute',
    'sticky',
    'fixed',

    'prefix',
    'quotes',
    'rad',
    'range',
    'resize',
    'revert',
    'right',
    'rotate',
    'rowGap',
    'scale',
    'shapeImageThreshold',
    'shapeMargin',
    'shapeOutside',
    'src',
    'suffix',
    'symbols',
    'system',
    'tabSize',
    'tableLayout',
    'top',
    'touchAction',
    'translate',
    'turn',
    'unicodeBidi',
    'unicodeRange',
    'unset',
    'userZoom',
    'verticalAlign',
    'vmax',
    'vmin',
    'whiteSpace',
    'widows',
    'width',
    'willChange',
    'wordBreak',
    'wordSpacing',
    'wordWrap',
    'writingMode',
    'zIndex',
    'backfaceVisibility'
  ].forEach(key => t.true(keys.includes(key)));
});
